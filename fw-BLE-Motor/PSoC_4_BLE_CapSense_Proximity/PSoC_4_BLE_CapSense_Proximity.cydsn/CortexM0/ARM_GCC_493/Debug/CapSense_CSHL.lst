ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,2,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 2
  23              	CapSense_sensorBaseline:
  24 0000 0000     		.space	2
  25              		.global	CapSense_sensorBaselineLow
  26 0002 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 1
  29              	CapSense_sensorBaselineLow:
  30 0004 00       		.space	1
  31              		.global	CapSense_sensorSignal
  32 0005 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 1
  35              	CapSense_sensorSignal:
  36 0008 00       		.space	1
  37              		.global	CapSense_sensorOnMask
  38 0009 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 000c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,1,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 1
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51              		.global	CapSense_enableRawFilters
  52              		.type	CapSense_enableRawFilters, %object
  53              		.size	CapSense_enableRawFilters, 1
  54              	CapSense_enableRawFilters:
  55 0001 01       		.byte	1
  56              		.global	CapSense_fingerThreshold
  57 0002 0000     		.align	2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 2


  58              		.type	CapSense_fingerThreshold, %object
  59              		.size	CapSense_fingerThreshold, 1
  60              	CapSense_fingerThreshold:
  61 0004 50       		.byte	80
  62              		.comm	CapSense_noiseThreshold,1,4
  63              		.comm	CapSense_negativeNoiseThreshold,1,4
  64              		.comm	CapSense_hysteresis,1,4
  65              		.global	CapSense_debounce
  66 0005 000000   		.align	2
  67              		.type	CapSense_debounce, %object
  68              		.size	CapSense_debounce, 1
  69              	CapSense_debounce:
  70 0008 05       		.byte	5
  71 0009 000000   		.bss
  72 000d 000000   		.align	2
  73              	CapSense_debounceCounter:
  74 0010 0000     		.space	2
  75              		.global	CapSense_rawDataIndex
  76 0012 0000     		.section	.rodata
  77              		.align	2
  78              		.type	CapSense_rawDataIndex, %object
  79              		.size	CapSense_rawDataIndex, 1
  80              	CapSense_rawDataIndex:
  81 0000 00       		.space	1
  82              		.global	CapSense_numberOfSensors
  83 0001 000000   		.align	2
  84              		.type	CapSense_numberOfSensors, %object
  85              		.size	CapSense_numberOfSensors, 1
  86              	CapSense_numberOfSensors:
  87 0004 01       		.byte	1
  88 0005 000000   		.section	.text.CapSense_BaseInit,"ax",%progbits
  89              		.align	2
  90              		.global	CapSense_BaseInit
  91              		.code	16
  92              		.thumb_func
  93              		.type	CapSense_BaseInit, %function
  94              	CapSense_BaseInit:
  95              	.LFB36:
  96              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 3


  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     80u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 4


  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 5


 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  97              		.loc 1 137 0
  98              		.cfi_startproc
  99 0000 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 84B0     		sub	sp, sp, #16
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 107 0006 7860     		str	r0, [r7, #4]
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 108              		.loc 1 140 0
 109 0008 0F23     		mov	r3, #15
 110 000a FB18     		add	r3, r7, r3
 111 000c 1549     		ldr	r1, .L2
 112 000e 7A68     		ldr	r2, [r7, #4]
 113 0010 8A18     		add	r2, r1, r2
 114 0012 1278     		ldrb	r2, [r2]
 115 0014 1A70     		strb	r2, [r3]
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 116              		.loc 1 154 0
 117 0016 144B     		ldr	r3, .L2+4
 118 0018 7A68     		ldr	r2, [r7, #4]
 119 001a 5200     		lsl	r2, r2, #1
 120 001c D15A     		ldrh	r1, [r2, r3]
 121 001e 134B     		ldr	r3, .L2+8
 122 0020 7A68     		ldr	r2, [r7, #4]
 123 0022 5200     		lsl	r2, r2, #1
 124 0024 D152     		strh	r1, [r2, r3]
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 125              		.loc 1 155 0
 126 0026 124A     		ldr	r2, .L2+12
 127 0028 7B68     		ldr	r3, [r7, #4]
 128 002a D318     		add	r3, r2, r3
 129 002c 0022     		mov	r2, #0
 130 002e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 6


 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 131              		.loc 1 156 0
 132 0030 104A     		ldr	r2, .L2+16
 133 0032 7B68     		ldr	r3, [r7, #4]
 134 0034 D318     		add	r3, r2, r3
 135 0036 0022     		mov	r2, #0
 136 0038 1A70     		strb	r2, [r3]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 137              		.loc 1 158 0
 138 003a 0F23     		mov	r3, #15
 139 003c FB18     		add	r3, r7, r3
 140 003e 1B78     		ldrb	r3, [r3]
 141 0040 0F22     		mov	r2, #15
 142 0042 BA18     		add	r2, r7, r2
 143 0044 1278     		ldrb	r2, [r2]
 144 0046 0C49     		ldr	r1, .L2+20
 145 0048 895C     		ldrb	r1, [r1, r2]
 146 004a 0C4A     		ldr	r2, .L2+24
 147 004c D154     		strb	r1, [r2, r3]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 148              		.loc 1 173 0
 149 004e 064B     		ldr	r3, .L2+4
 150 0050 7A68     		ldr	r2, [r7, #4]
 151 0052 5200     		lsl	r2, r2, #1
 152 0054 D15A     		ldrh	r1, [r2, r3]
 153 0056 0A4B     		ldr	r3, .L2+28
 154 0058 7A68     		ldr	r2, [r7, #4]
 155 005a 5200     		lsl	r2, r2, #1
 156 005c D152     		strh	r1, [r2, r3]
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 157              		.loc 1 185 0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 7


 158 005e BD46     		mov	sp, r7
 159 0060 04B0     		add	sp, sp, #16
 160              		@ sp needed
 161 0062 80BD     		pop	{r7, pc}
 162              	.L3:
 163              		.align	2
 164              	.L2:
 165 0064 00000000 		.word	CapSense_widgetNumber
 166 0068 00000000 		.word	CapSense_sensorRaw
 167 006c 00000000 		.word	CapSense_sensorBaseline
 168 0070 00000000 		.word	CapSense_sensorBaselineLow
 169 0074 00000000 		.word	CapSense_sensorSignal
 170 0078 00000000 		.word	CapSense_debounce
 171 007c 10000000 		.word	CapSense_debounceCounter
 172 0080 00000000 		.word	CapSense_rawFilterData1
 173              		.cfi_endproc
 174              	.LFE36:
 175              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 176              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 177              		.align	2
 178              		.global	CapSense_InitializeSensorBaseline
 179              		.code	16
 180              		.thumb_func
 181              		.type	CapSense_InitializeSensorBaseline, %function
 182              	CapSense_InitializeSensorBaseline:
 183              	.LFB37:
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 184              		.loc 1 213 0
 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 8


 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 82B0     		sub	sp, sp, #8
 191              		.cfi_def_cfa_offset 16
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 195              		.loc 1 215 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 181C     		mov	r0, r3
 198 000c FFF7FEFF 		bl	CapSense_ScanSensor
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 199              		.loc 1 216 0
 200 0010 C046     		mov	r8, r8
 201              	.L5:
 202              		.loc 1 216 0 is_stmt 0 discriminator 1
 203 0012 FFF7FEFF 		bl	CapSense_IsBusy
 204 0016 031E     		sub	r3, r0, #0
 205 0018 FBD1     		bne	.L5
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 206              		.loc 1 222 0 is_stmt 1
 207 001a 7B68     		ldr	r3, [r7, #4]
 208 001c 181C     		mov	r0, r3
 209 001e FFF7FEFF 		bl	CapSense_BaseInit
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 210              		.loc 1 223 0
 211 0022 BD46     		mov	sp, r7
 212 0024 02B0     		add	sp, sp, #8
 213              		@ sp needed
 214 0026 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE37:
 217              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 218              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 219              		.align	2
 220              		.global	CapSense_InitializeAllBaselines
 221              		.code	16
 222              		.thumb_func
 223              		.type	CapSense_InitializeAllBaselines, %function
 224              	CapSense_InitializeAllBaselines:
 225              	.LFB38:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 9


 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 226              		.loc 1 250 0
 227              		.cfi_startproc
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 82B0     		sub	sp, sp, #8
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 236              		.loc 1 253 0
 237 0006 0023     		mov	r3, #0
 238 0008 7B60     		str	r3, [r7, #4]
 239 000a 06E0     		b	.L7
 240              	.L8:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 241              		.loc 1 255 0 discriminator 3
 242 000c 7B68     		ldr	r3, [r7, #4]
 243 000e 181C     		mov	r0, r3
 244 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 245              		.loc 1 253 0 discriminator 3
 246 0014 7B68     		ldr	r3, [r7, #4]
 247 0016 0133     		add	r3, r3, #1
 248 0018 7B60     		str	r3, [r7, #4]
 249              	.L7:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 250              		.loc 1 253 0 is_stmt 0 discriminator 1
 251 001a 7B68     		ldr	r3, [r7, #4]
 252 001c 002B     		cmp	r3, #0
 253 001e F5D0     		beq	.L8
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 254              		.loc 1 257 0 is_stmt 1
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 10


 255 0020 BD46     		mov	sp, r7
 256 0022 02B0     		add	sp, sp, #8
 257              		@ sp needed
 258 0024 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE38:
 261              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 262 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 263              		.align	2
 264              		.global	CapSense_InitializeEnabledBaselines
 265              		.code	16
 266              		.thumb_func
 267              		.type	CapSense_InitializeEnabledBaselines, %function
 268              	CapSense_InitializeEnabledBaselines:
 269              	.LFB39:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 270              		.loc 1 285 0
 271              		.cfi_startproc
 272 0000 80B5     		push	{r7, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 82B0     		sub	sp, sp, #8
 277              		.cfi_def_cfa_offset 16
 278 0004 00AF     		add	r7, sp, #0
 279              		.cfi_def_cfa_register 7
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 11


 280              		.loc 1 289 0
 281 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 282              		.loc 1 290 0
 283 000a C046     		mov	r8, r8
 284              	.L10:
 285              		.loc 1 290 0 is_stmt 0 discriminator 1
 286 000c FFF7FEFF 		bl	CapSense_IsBusy
 287 0010 031E     		sub	r3, r0, #0
 288 0012 FBD1     		bne	.L10
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 289              		.loc 1 295 0 is_stmt 1
 290 0014 0023     		mov	r3, #0
 291 0016 7B60     		str	r3, [r7, #4]
 292 0018 11E0     		b	.L11
 293              	.L13:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 294              		.loc 1 297 0
 295 001a 0C4A     		ldr	r2, .L14
 296 001c 7B68     		ldr	r3, [r7, #4]
 297 001e 101C     		mov	r0, r2
 298 0020 191C     		mov	r1, r3
 299 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 300 0026 031C     		mov	r3, r0
 301 0028 3B60     		str	r3, [r7]
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 302              		.loc 1 300 0
 303 002a 3B68     		ldr	r3, [r7]
 304 002c 002B     		cmp	r3, #0
 305 002e 03D0     		beq	.L12
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 306              		.loc 1 303 0
 307 0030 7B68     		ldr	r3, [r7, #4]
 308 0032 181C     		mov	r0, r3
 309 0034 FFF7FEFF 		bl	CapSense_BaseInit
 310              	.L12:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 311              		.loc 1 295 0 discriminator 2
 312 0038 7B68     		ldr	r3, [r7, #4]
 313 003a 0133     		add	r3, r3, #1
 314 003c 7B60     		str	r3, [r7, #4]
 315              	.L11:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 316              		.loc 1 295 0 is_stmt 0 discriminator 1
 317 003e 7B68     		ldr	r3, [r7, #4]
 318 0040 002B     		cmp	r3, #0
 319 0042 EAD0     		beq	.L13
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 12


 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 320              		.loc 1 306 0 is_stmt 1
 321 0044 BD46     		mov	sp, r7
 322 0046 02B0     		add	sp, sp, #8
 323              		@ sp needed
 324 0048 80BD     		pop	{r7, pc}
 325              	.L15:
 326 004a C046     		.align	2
 327              	.L14:
 328 004c 00000000 		.word	CapSense_sensorEnableMask
 329              		.cfi_endproc
 330              	.LFE39:
 331              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 332              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 333              		.align	2
 334              		.global	CapSense_UpdateBaselineNoThreshold
 335              		.code	16
 336              		.thumb_func
 337              		.type	CapSense_UpdateBaselineNoThreshold, %function
 338              	CapSense_UpdateBaselineNoThreshold:
 339              	.LFB40:
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 13


 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 340              		.loc 1 350 0
 341              		.cfi_startproc
 342 0000 90B5     		push	{r4, r7, lr}
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 87B0     		sub	sp, sp, #28
 348              		.cfi_def_cfa_offset 40
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 7860     		str	r0, [r7, #4]
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 352              		.loc 1 355 0
 353 0008 0F23     		mov	r3, #15
 354 000a FB18     		add	r3, r7, r3
 355 000c 7E49     		ldr	r1, .L29
 356 000e 7A68     		ldr	r2, [r7, #4]
 357 0010 8A18     		add	r2, r1, r2
 358 0012 1278     		ldrb	r2, [r2]
 359 0014 1A70     		strb	r2, [r3]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 360              		.loc 1 364 0
 361 0016 0F23     		mov	r3, #15
 362 0018 FB18     		add	r3, r7, r3
 363 001a 1A78     		ldrb	r2, [r3]
 364 001c 0E23     		mov	r3, #14
 365 001e FB18     		add	r3, r7, r3
 366 0020 7A49     		ldr	r1, .L29+4
 367 0022 8A5C     		ldrb	r2, [r1, r2]
 368 0024 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 369              		.loc 1 365 0
 370 0026 1023     		mov	r3, #16
 371 0028 FB18     		add	r3, r7, r3
 372 002a 794A     		ldr	r2, .L29+8
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 14


 373 002c 7968     		ldr	r1, [r7, #4]
 374 002e 4900     		lsl	r1, r1, #1
 375 0030 8A5A     		ldrh	r2, [r1, r2]
 376 0032 1A80     		strh	r2, [r3]
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 377              		.loc 1 368 0
 378 0034 774B     		ldr	r3, .L29+12
 379 0036 1B78     		ldrb	r3, [r3]
 380 0038 002B     		cmp	r3, #0
 381 003a 15D0     		beq	.L17
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 382              		.loc 1 389 0
 383 003c 764B     		ldr	r3, .L29+16
 384 003e 7A68     		ldr	r2, [r7, #4]
 385 0040 5200     		lsl	r2, r2, #1
 386 0042 D25A     		ldrh	r2, [r2, r3]
 387 0044 1023     		mov	r3, #16
 388 0046 FC18     		add	r4, r7, r3
 389 0048 1023     		mov	r3, #16
 390 004a FB18     		add	r3, r7, r3
 391 004c 1B88     		ldrh	r3, [r3]
 392 004e 181C     		mov	r0, r3
 393 0050 111C     		mov	r1, r2
 394 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 395 0056 031C     		mov	r3, r0
 396 0058 2380     		strh	r3, [r4]
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 397              		.loc 1 390 0
 398 005a 6F4B     		ldr	r3, .L29+16
 399 005c 7A68     		ldr	r2, [r7, #4]
 400 005e 5200     		lsl	r2, r2, #1
 401 0060 1021     		mov	r1, #16
 402 0062 7918     		add	r1, r7, r1
 403 0064 0988     		ldrh	r1, [r1]
 404 0066 D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 15


 405              	.L17:
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 406              		.loc 1 411 0
 407 0068 7B68     		ldr	r3, [r7, #4]
 408 006a DAB2     		uxtb	r2, r3
 409 006c 6B49     		ldr	r1, .L29+20
 410 006e 684B     		ldr	r3, .L29+8
 411 0070 081C     		mov	r0, r1
 412 0072 111C     		mov	r1, r2
 413 0074 1A1C     		mov	r2, r3
 414 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 415              		.loc 1 416 0
 416 007a 694B     		ldr	r3, .L29+24
 417 007c 7A68     		ldr	r2, [r7, #4]
 418 007e 5200     		lsl	r2, r2, #1
 419 0080 D35A     		ldrh	r3, [r2, r3]
 420 0082 1022     		mov	r2, #16
 421 0084 BA18     		add	r2, r7, r2
 422 0086 1288     		ldrh	r2, [r2]
 423 0088 9A42     		cmp	r2, r3
 424 008a 12D3     		bcc	.L18
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 425              		.loc 1 418 0
 426 008c 654A     		ldr	r2, .L29+28
 427 008e 7B68     		ldr	r3, [r7, #4]
 428 0090 D318     		add	r3, r2, r3
 429 0092 0022     		mov	r2, #0
 430 0094 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 431              		.loc 1 419 0
 432 0096 624B     		ldr	r3, .L29+24
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 16


 433 0098 7A68     		ldr	r2, [r7, #4]
 434 009a 5200     		lsl	r2, r2, #1
 435 009c D25A     		ldrh	r2, [r2, r3]
 436 009e 1223     		mov	r3, #18
 437 00a0 FB18     		add	r3, r7, r3
 438 00a2 1021     		mov	r1, #16
 439 00a4 7918     		add	r1, r7, r1
 440 00a6 0988     		ldrh	r1, [r1]
 441 00a8 8A1A     		sub	r2, r1, r2
 442 00aa 1A80     		strh	r2, [r3]
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 443              		.loc 1 420 0
 444 00ac 0123     		mov	r3, #1
 445 00ae 7B61     		str	r3, [r7, #20]
 446 00b0 0CE0     		b	.L19
 447              	.L18:
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 448              		.loc 1 424 0
 449 00b2 5B4B     		ldr	r3, .L29+24
 450 00b4 7A68     		ldr	r2, [r7, #4]
 451 00b6 5200     		lsl	r2, r2, #1
 452 00b8 D15A     		ldrh	r1, [r2, r3]
 453 00ba 1223     		mov	r3, #18
 454 00bc FB18     		add	r3, r7, r3
 455 00be 1022     		mov	r2, #16
 456 00c0 BA18     		add	r2, r7, r2
 457 00c2 1288     		ldrh	r2, [r2]
 458 00c4 8A1A     		sub	r2, r1, r2
 459 00c6 1A80     		strh	r2, [r3]
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 460              		.loc 1 425 0
 461 00c8 0023     		mov	r3, #0
 462 00ca 7B61     		str	r3, [r7, #20]
 463              	.L19:
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 464              		.loc 1 429 0
 465 00cc 7B69     		ldr	r3, [r7, #20]
 466 00ce 002B     		cmp	r3, #0
 467 00d0 2AD1     		bne	.L20
 468              		.loc 1 429 0 is_stmt 0 discriminator 1
 469 00d2 0F23     		mov	r3, #15
 470 00d4 FB18     		add	r3, r7, r3
 471 00d6 1B78     		ldrb	r3, [r3]
 472 00d8 534A     		ldr	r2, .L29+32
 473 00da D35C     		ldrb	r3, [r2, r3]
 474 00dc 9BB2     		uxth	r3, r3
 475 00de 1222     		mov	r2, #18
 476 00e0 BA18     		add	r2, r7, r2
 477 00e2 1288     		ldrh	r2, [r2]
 478 00e4 9A42     		cmp	r2, r3
 479 00e6 1FD9     		bls	.L20
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 17


 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 480              		.loc 1 434 0 is_stmt 1
 481 00e8 4E4A     		ldr	r2, .L29+28
 482 00ea 7B68     		ldr	r3, [r7, #4]
 483 00ec D318     		add	r3, r2, r3
 484 00ee 1A78     		ldrb	r2, [r3]
 485 00f0 4E49     		ldr	r1, .L29+36
 486 00f2 7B68     		ldr	r3, [r7, #4]
 487 00f4 CB18     		add	r3, r1, r3
 488 00f6 1B78     		ldrb	r3, [r3]
 489 00f8 9A42     		cmp	r2, r3
 490 00fa 09D3     		bcc	.L21
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 491              		.loc 1 436 0
 492 00fc 7B68     		ldr	r3, [r7, #4]
 493 00fe 181C     		mov	r0, r3
 494 0100 FFF7FEFF 		bl	CapSense_BaseInit
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 495              		.loc 1 437 0
 496 0104 474A     		ldr	r2, .L29+28
 497 0106 7B68     		ldr	r3, [r7, #4]
 498 0108 D318     		add	r3, r2, r3
 499 010a 0022     		mov	r2, #0
 500 010c 1A70     		strb	r2, [r3]
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 501              		.loc 1 434 0
 502 010e 51E0     		b	.L23
 503              	.L21:
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 504              		.loc 1 441 0
 505 0110 444A     		ldr	r2, .L29+28
 506 0112 7B68     		ldr	r3, [r7, #4]
 507 0114 D318     		add	r3, r2, r3
 508 0116 1B78     		ldrb	r3, [r3]
 509 0118 0133     		add	r3, r3, #1
 510 011a D9B2     		uxtb	r1, r3
 511 011c 414A     		ldr	r2, .L29+28
 512 011e 7B68     		ldr	r3, [r7, #4]
 513 0120 D318     		add	r3, r2, r3
 514 0122 0A1C     		add	r2, r1, #0
 515 0124 1A70     		strb	r2, [r3]
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 516              		.loc 1 434 0
 517 0126 45E0     		b	.L23
 518              	.L20:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 18


 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 519              		.loc 1 449 0
 520 0128 0E23     		mov	r3, #14
 521 012a FB18     		add	r3, r7, r3
 522 012c 1B78     		ldrb	r3, [r3]
 523 012e 9BB2     		uxth	r3, r3
 524 0130 1222     		mov	r2, #18
 525 0132 BA18     		add	r2, r7, r2
 526 0134 1288     		ldrh	r2, [r2]
 527 0136 9A42     		cmp	r2, r3
 528 0138 0DD9     		bls	.L24
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 529              		.loc 1 450 0 discriminator 1
 530 013a 0F23     		mov	r3, #15
 531 013c FB18     		add	r3, r7, r3
 532 013e 1B78     		ldrb	r3, [r3]
 533 0140 394A     		ldr	r2, .L29+32
 534 0142 D35C     		ldrb	r3, [r2, r3]
 535 0144 9BB2     		uxth	r3, r3
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 536              		.loc 1 449 0 discriminator 1
 537 0146 1222     		mov	r2, #18
 538 0148 BA18     		add	r2, r7, r2
 539 014a 1288     		ldrh	r2, [r2]
 540 014c 9A42     		cmp	r2, r3
 541 014e 31D2     		bcs	.L23
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 542              		.loc 1 451 0
 543 0150 7B69     		ldr	r3, [r7, #20]
 544 0152 002B     		cmp	r3, #0
 545 0154 2ED1     		bne	.L23
 546              	.L24:
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 547              		.loc 1 462 0
 548 0156 324B     		ldr	r3, .L29+24
 549 0158 7A68     		ldr	r2, [r7, #4]
 550 015a 5200     		lsl	r2, r2, #1
 551 015c D35A     		ldrh	r3, [r2, r3]
 552 015e 1B02     		lsl	r3, r3, #8
 553 0160 BB60     		str	r3, [r7, #8]
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 554              		.loc 1 463 0
 555 0162 334A     		ldr	r2, .L29+40
 556 0164 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 19


 557 0166 D318     		add	r3, r2, r3
 558 0168 1B78     		ldrb	r3, [r3]
 559 016a 1A1C     		mov	r2, r3
 560 016c BB68     		ldr	r3, [r7, #8]
 561 016e 1343     		orr	r3, r2
 562 0170 BB60     		str	r3, [r7, #8]
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 563              		.loc 1 466 0
 564 0172 1023     		mov	r3, #16
 565 0174 FB18     		add	r3, r7, r3
 566 0176 1B88     		ldrh	r3, [r3]
 567 0178 BA68     		ldr	r2, [r7, #8]
 568 017a D318     		add	r3, r2, r3
 569 017c BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 570              		.loc 1 469 0
 571 017e 284B     		ldr	r3, .L29+24
 572 0180 7A68     		ldr	r2, [r7, #4]
 573 0182 5200     		lsl	r2, r2, #1
 574 0184 D35A     		ldrh	r3, [r2, r3]
 575 0186 1A1C     		mov	r2, r3
 576 0188 BB68     		ldr	r3, [r7, #8]
 577 018a 9B1A     		sub	r3, r3, r2
 578 018c BB60     		str	r3, [r7, #8]
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 579              		.loc 1 472 0
 580 018e BB68     		ldr	r3, [r7, #8]
 581 0190 1B0A     		lsr	r3, r3, #8
 582 0192 99B2     		uxth	r1, r3
 583 0194 224B     		ldr	r3, .L29+24
 584 0196 7A68     		ldr	r2, [r7, #4]
 585 0198 5200     		lsl	r2, r2, #1
 586 019a D152     		strh	r1, [r2, r3]
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 587              		.loc 1 473 0
 588 019c BB68     		ldr	r3, [r7, #8]
 589 019e D9B2     		uxtb	r1, r3
 590 01a0 234A     		ldr	r2, .L29+40
 591 01a2 7B68     		ldr	r3, [r7, #4]
 592 01a4 D318     		add	r3, r2, r3
 593 01a6 0A1C     		add	r2, r1, #0
 594 01a8 1A70     		strb	r2, [r3]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 595              		.loc 1 475 0
 596 01aa 1E4A     		ldr	r2, .L29+28
 597 01ac 7B68     		ldr	r3, [r7, #4]
 598 01ae D318     		add	r3, r2, r3
 599 01b0 0022     		mov	r2, #0
 600 01b2 1A70     		strb	r2, [r3]
 601              	.L23:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 20


 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 602              		.loc 1 482 0
 603 01b4 0E23     		mov	r3, #14
 604 01b6 FB18     		add	r3, r7, r3
 605 01b8 1B78     		ldrb	r3, [r3]
 606 01ba 9BB2     		uxth	r3, r3
 607 01bc 1222     		mov	r2, #18
 608 01be BA18     		add	r2, r7, r2
 609 01c0 1288     		ldrh	r2, [r2]
 610 01c2 9A42     		cmp	r2, r3
 611 01c4 17D9     		bls	.L25
 612              		.loc 1 482 0 is_stmt 0 discriminator 1
 613 01c6 7B69     		ldr	r3, [r7, #20]
 614 01c8 002B     		cmp	r3, #0
 615 01ca 14D0     		beq	.L25
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 616              		.loc 1 486 0 is_stmt 1
 617 01cc 1223     		mov	r3, #18
 618 01ce FB18     		add	r3, r7, r3
 619 01d0 1B88     		ldrh	r3, [r3]
 620 01d2 FF2B     		cmp	r3, #255
 621 01d4 05D9     		bls	.L26
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 622              		.loc 1 488 0
 623 01d6 174A     		ldr	r2, .L29+44
 624 01d8 7B68     		ldr	r3, [r7, #4]
 625 01da D318     		add	r3, r2, r3
 626 01dc FF22     		mov	r2, #255
 627 01de 1A70     		strb	r2, [r3]
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 628              		.loc 1 486 0
 629 01e0 0EE0     		b	.L16
 630              	.L26:
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 631              		.loc 1 492 0
 632 01e2 1223     		mov	r3, #18
 633 01e4 FB18     		add	r3, r7, r3
 634 01e6 1B88     		ldrh	r3, [r3]
 635 01e8 D9B2     		uxtb	r1, r3
 636 01ea 124A     		ldr	r2, .L29+44
 637 01ec 7B68     		ldr	r3, [r7, #4]
 638 01ee D318     		add	r3, r2, r3
 639 01f0 0A1C     		add	r2, r1, #0
 640 01f2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 21


 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 641              		.loc 1 486 0
 642 01f4 04E0     		b	.L16
 643              	.L25:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 644              		.loc 1 501 0
 645 01f6 0F4A     		ldr	r2, .L29+44
 646 01f8 7B68     		ldr	r3, [r7, #4]
 647 01fa D318     		add	r3, r2, r3
 648 01fc 0022     		mov	r2, #0
 649 01fe 1A70     		strb	r2, [r3]
 650              	.L16:
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 651              		.loc 1 508 0
 652 0200 BD46     		mov	sp, r7
 653 0202 07B0     		add	sp, sp, #28
 654              		@ sp needed
 655 0204 90BD     		pop	{r4, r7, pc}
 656              	.L30:
 657 0206 C046     		.align	2
 658              	.L29:
 659 0208 00000000 		.word	CapSense_widgetNumber
 660 020c 00000000 		.word	CapSense_noiseThreshold
 661 0210 00000000 		.word	CapSense_sensorRaw
 662 0214 00000000 		.word	CapSense_enableRawFilters
 663 0218 00000000 		.word	CapSense_rawFilterData1
 664 021c 00000000 		.word	CapSense_config
 665 0220 00000000 		.word	CapSense_sensorBaseline
 666 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 667 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 668 022c 00000000 		.word	CapSense_lowBaselineReset
 669 0230 00000000 		.word	CapSense_sensorBaselineLow
 670 0234 00000000 		.word	CapSense_sensorSignal
 671              		.cfi_endproc
 672              	.LFE40:
 673              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 674              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 675              		.align	2
 676              		.global	CapSense_UpdateSensorBaseline
 677              		.code	16
 678              		.thumb_func
 679              		.type	CapSense_UpdateSensorBaseline, %function
 680              	CapSense_UpdateSensorBaseline:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 22


 681              	.LFB41:
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 682              		.loc 1 542 0
 683              		.cfi_startproc
 684 0000 80B5     		push	{r7, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              		.cfi_def_cfa_offset 16
 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 692 0006 7860     		str	r0, [r7, #4]
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 23


 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 693              		.loc 1 554 0
 694 0008 7B68     		ldr	r3, [r7, #4]
 695 000a 181C     		mov	r0, r3
 696 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 697              		.loc 1 557 0
 698 0010 7B68     		ldr	r3, [r7, #4]
 699 0012 181C     		mov	r0, r3
 700 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 701              		.loc 1 563 0
 702 0018 BD46     		mov	sp, r7
 703 001a 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705 001c 80BD     		pop	{r7, pc}
 706              		.cfi_endproc
 707              	.LFE41:
 708              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 709 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 710              		.align	2
 711              		.global	CapSense_UpdateEnabledBaselines
 712              		.code	16
 713              		.thumb_func
 714              		.type	CapSense_UpdateEnabledBaselines, %function
 715              	CapSense_UpdateEnabledBaselines:
 716              	.LFB42:
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 24


 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 717              		.loc 1 596 0
 718              		.cfi_startproc
 719 0000 80B5     		push	{r7, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 0002 82B0     		sub	sp, sp, #8
 724              		.cfi_def_cfa_offset 16
 725 0004 00AF     		add	r7, sp, #0
 726              		.cfi_def_cfa_register 7
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 727              		.loc 1 600 0
 728 0006 0023     		mov	r3, #0
 729 0008 7B60     		str	r3, [r7, #4]
 730 000a 11E0     		b	.L33
 731              	.L35:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 732              		.loc 1 602 0
 733 000c 0B4A     		ldr	r2, .L36
 734 000e 7B68     		ldr	r3, [r7, #4]
 735 0010 101C     		mov	r0, r2
 736 0012 191C     		mov	r1, r3
 737 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 738 0018 031C     		mov	r3, r0
 739 001a 3B60     		str	r3, [r7]
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 740              		.loc 1 604 0
 741 001c 3B68     		ldr	r3, [r7]
 742 001e 002B     		cmp	r3, #0
 743 0020 03D0     		beq	.L34
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 744              		.loc 1 606 0
 745 0022 7B68     		ldr	r3, [r7, #4]
 746 0024 181C     		mov	r0, r3
 747 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 748              	.L34:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 749              		.loc 1 600 0 discriminator 2
 750 002a 7B68     		ldr	r3, [r7, #4]
 751 002c 0133     		add	r3, r3, #1
 752 002e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 25


 753              	.L33:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 754              		.loc 1 600 0 is_stmt 0 discriminator 1
 755 0030 7B68     		ldr	r3, [r7, #4]
 756 0032 002B     		cmp	r3, #0
 757 0034 EAD0     		beq	.L35
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 758              		.loc 1 609 0 is_stmt 1
 759 0036 BD46     		mov	sp, r7
 760 0038 02B0     		add	sp, sp, #8
 761              		@ sp needed
 762 003a 80BD     		pop	{r7, pc}
 763              	.L37:
 764              		.align	2
 765              	.L36:
 766 003c 00000000 		.word	CapSense_sensorEnableMask
 767              		.cfi_endproc
 768              	.LFE42:
 769              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 770              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 771              		.align	2
 772              		.global	CapSense_UpdateWidgetBaseline
 773              		.code	16
 774              		.thumb_func
 775              		.type	CapSense_UpdateWidgetBaseline, %function
 776              	CapSense_UpdateWidgetBaseline:
 777              	.LFB43:
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 26


 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 778              		.loc 1 641 0
 779              		.cfi_startproc
 780 0000 80B5     		push	{r7, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 88B0     		sub	sp, sp, #32
 785              		.cfi_def_cfa_offset 40
 786 0004 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 788 0006 7860     		str	r0, [r7, #4]
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 789              		.loc 1 649 0
 790 0008 0123     		mov	r3, #1
 791 000a BB61     		str	r3, [r7, #24]
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 792              		.loc 1 652 0
 793 000c 0023     		mov	r3, #0
 794 000e 7B61     		str	r3, [r7, #20]
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 795              		.loc 1 655 0
 796 0010 0023     		mov	r3, #0
 797 0012 1A1C     		mov	r2, r3
 798 0014 BB69     		ldr	r3, [r7, #24]
 799 0016 D318     		add	r3, r2, r3
 800 0018 3B61     		str	r3, [r7, #16]
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 801              		.loc 1 657 0
 802 001a 7B69     		ldr	r3, [r7, #20]
 803 001c FB61     		str	r3, [r7, #28]
 804 001e 11E0     		b	.L39
 805              	.L41:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 806              		.loc 1 659 0
 807 0020 0C4A     		ldr	r2, .L42
 808 0022 FB69     		ldr	r3, [r7, #28]
 809 0024 101C     		mov	r0, r2
 810 0026 191C     		mov	r1, r3
 811 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 812 002c 031C     		mov	r3, r0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 27


 813 002e FB60     		str	r3, [r7, #12]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 814              		.loc 1 661 0
 815 0030 FB68     		ldr	r3, [r7, #12]
 816 0032 002B     		cmp	r3, #0
 817 0034 03D0     		beq	.L40
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 818              		.loc 1 663 0
 819 0036 FB69     		ldr	r3, [r7, #28]
 820 0038 181C     		mov	r0, r3
 821 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 822              	.L40:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 823              		.loc 1 657 0 discriminator 2
 824 003e FB69     		ldr	r3, [r7, #28]
 825 0040 0133     		add	r3, r3, #1
 826 0042 FB61     		str	r3, [r7, #28]
 827              	.L39:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 828              		.loc 1 657 0 is_stmt 0 discriminator 1
 829 0044 FA69     		ldr	r2, [r7, #28]
 830 0046 3B69     		ldr	r3, [r7, #16]
 831 0048 9A42     		cmp	r2, r3
 832 004a E9D3     		bcc	.L41
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 833              		.loc 1 666 0 is_stmt 1
 834 004c BD46     		mov	sp, r7
 835 004e 08B0     		add	sp, sp, #32
 836              		@ sp needed
 837 0050 80BD     		pop	{r7, pc}
 838              	.L43:
 839 0052 C046     		.align	2
 840              	.L42:
 841 0054 00000000 		.word	CapSense_sensorEnableMask
 842              		.cfi_endproc
 843              	.LFE43:
 844              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 845              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 846              		.align	2
 847              		.global	CapSense_GetBaselineData
 848              		.code	16
 849              		.thumb_func
 850              		.type	CapSense_GetBaselineData, %function
 851              	CapSense_GetBaselineData:
 852              	.LFB44:
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 28


 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 853              		.loc 1 690 0
 854              		.cfi_startproc
 855 0000 80B5     		push	{r7, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 864              		.loc 1 691 0
 865 0008 034B     		ldr	r3, .L46
 866 000a 7A68     		ldr	r2, [r7, #4]
 867 000c 5200     		lsl	r2, r2, #1
 868 000e D35A     		ldrh	r3, [r2, r3]
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 869              		.loc 1 692 0
 870 0010 181C     		mov	r0, r3
 871 0012 BD46     		mov	sp, r7
 872 0014 02B0     		add	sp, sp, #8
 873              		@ sp needed
 874 0016 80BD     		pop	{r7, pc}
 875              	.L47:
 876              		.align	2
 877              	.L46:
 878 0018 00000000 		.word	CapSense_sensorBaseline
 879              		.cfi_endproc
 880              	.LFE44:
 881              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 882              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 883              		.align	2
 884              		.global	CapSense_SetBaselineData
 885              		.code	16
 886              		.thumb_func
 887              		.type	CapSense_SetBaselineData, %function
 888              	CapSense_SetBaselineData:
 889              	.LFB45:
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 29


 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 890              		.loc 1 717 0
 891              		.cfi_startproc
 892 0000 80B5     		push	{r7, lr}
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 82B0     		sub	sp, sp, #8
 897              		.cfi_def_cfa_offset 16
 898 0004 00AF     		add	r7, sp, #0
 899              		.cfi_def_cfa_register 7
 900 0006 7860     		str	r0, [r7, #4]
 901 0008 0A1C     		mov	r2, r1
 902 000a BB1C     		add	r3, r7, #2
 903 000c 1A80     		strh	r2, [r3]
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 904              		.loc 1 718 0
 905 000e 044B     		ldr	r3, .L49
 906 0010 7A68     		ldr	r2, [r7, #4]
 907 0012 5200     		lsl	r2, r2, #1
 908 0014 B91C     		add	r1, r7, #2
 909 0016 0988     		ldrh	r1, [r1]
 910 0018 D152     		strh	r1, [r2, r3]
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 911              		.loc 1 719 0
 912 001a BD46     		mov	sp, r7
 913 001c 02B0     		add	sp, sp, #8
 914              		@ sp needed
 915 001e 80BD     		pop	{r7, pc}
 916              	.L50:
 917              		.align	2
 918              	.L49:
 919 0020 00000000 		.word	CapSense_sensorBaseline
 920              		.cfi_endproc
 921              	.LFE45:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 30


 922              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 923              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_GetDiffCountData
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_GetDiffCountData, %function
 929              	CapSense_GetDiffCountData:
 930              	.LFB46:
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 931              		.loc 1 744 0
 932              		.cfi_startproc
 933 0000 80B5     		push	{r7, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 942              		.loc 1 745 0
 943 0008 034A     		ldr	r2, .L53
 944 000a 7B68     		ldr	r3, [r7, #4]
 945 000c D318     		add	r3, r2, r3
 946 000e 1B78     		ldrb	r3, [r3]
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 947              		.loc 1 746 0
 948 0010 181C     		mov	r0, r3
 949 0012 BD46     		mov	sp, r7
 950 0014 02B0     		add	sp, sp, #8
 951              		@ sp needed
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 31


 952 0016 80BD     		pop	{r7, pc}
 953              	.L54:
 954              		.align	2
 955              	.L53:
 956 0018 00000000 		.word	CapSense_sensorSignal
 957              		.cfi_endproc
 958              	.LFE46:
 959              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 960              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 961              		.align	2
 962              		.global	CapSense_SetDiffCountData
 963              		.code	16
 964              		.thumb_func
 965              		.type	CapSense_SetDiffCountData, %function
 966              	CapSense_SetDiffCountData:
 967              	.LFB47:
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 968              		.loc 1 771 0
 969              		.cfi_startproc
 970 0000 80B5     		push	{r7, lr}
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 82B0     		sub	sp, sp, #8
 975              		.cfi_def_cfa_offset 16
 976 0004 00AF     		add	r7, sp, #0
 977              		.cfi_def_cfa_register 7
 978 0006 7860     		str	r0, [r7, #4]
 979 0008 0A1C     		mov	r2, r1
 980 000a FB1C     		add	r3, r7, #3
 981 000c 1A70     		strb	r2, [r3]
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 982              		.loc 1 772 0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 32


 983 000e 044A     		ldr	r2, .L56
 984 0010 7B68     		ldr	r3, [r7, #4]
 985 0012 D318     		add	r3, r2, r3
 986 0014 FA1C     		add	r2, r7, #3
 987 0016 1278     		ldrb	r2, [r2]
 988 0018 1A70     		strb	r2, [r3]
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 989              		.loc 1 773 0
 990 001a BD46     		mov	sp, r7
 991 001c 02B0     		add	sp, sp, #8
 992              		@ sp needed
 993 001e 80BD     		pop	{r7, pc}
 994              	.L57:
 995              		.align	2
 996              	.L56:
 997 0020 00000000 		.word	CapSense_sensorSignal
 998              		.cfi_endproc
 999              	.LFE47:
 1000              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1001              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1002              		.align	2
 1003              		.global	CapSense_GetFingerThreshold
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	CapSense_GetFingerThreshold, %function
 1007              	CapSense_GetFingerThreshold:
 1008              	.LFB48:
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1009              		.loc 1 798 0
 1010              		.cfi_startproc
 1011 0000 80B5     		push	{r7, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 33


 1014              		.cfi_offset 14, -4
 1015 0002 82B0     		sub	sp, sp, #8
 1016              		.cfi_def_cfa_offset 16
 1017 0004 00AF     		add	r7, sp, #0
 1018              		.cfi_def_cfa_register 7
 1019 0006 7860     		str	r0, [r7, #4]
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1020              		.loc 1 799 0
 1021 0008 034A     		ldr	r2, .L60
 1022 000a 7B68     		ldr	r3, [r7, #4]
 1023 000c D318     		add	r3, r2, r3
 1024 000e 1B78     		ldrb	r3, [r3]
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1025              		.loc 1 800 0
 1026 0010 181C     		mov	r0, r3
 1027 0012 BD46     		mov	sp, r7
 1028 0014 02B0     		add	sp, sp, #8
 1029              		@ sp needed
 1030 0016 80BD     		pop	{r7, pc}
 1031              	.L61:
 1032              		.align	2
 1033              	.L60:
 1034 0018 00000000 		.word	CapSense_fingerThreshold
 1035              		.cfi_endproc
 1036              	.LFE48:
 1037              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1038              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1039              		.align	2
 1040              		.global	CapSense_GetNoiseThreshold
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	CapSense_GetNoiseThreshold, %function
 1044              	CapSense_GetNoiseThreshold:
 1045              	.LFB49:
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 34


 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1046              		.loc 1 825 0
 1047              		.cfi_startproc
 1048 0000 80B5     		push	{r7, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 82B0     		sub	sp, sp, #8
 1053              		.cfi_def_cfa_offset 16
 1054 0004 00AF     		add	r7, sp, #0
 1055              		.cfi_def_cfa_register 7
 1056 0006 7860     		str	r0, [r7, #4]
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1057              		.loc 1 826 0
 1058 0008 034A     		ldr	r2, .L64
 1059 000a 7B68     		ldr	r3, [r7, #4]
 1060 000c D318     		add	r3, r2, r3
 1061 000e 1B78     		ldrb	r3, [r3]
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1062              		.loc 1 827 0
 1063 0010 181C     		mov	r0, r3
 1064 0012 BD46     		mov	sp, r7
 1065 0014 02B0     		add	sp, sp, #8
 1066              		@ sp needed
 1067 0016 80BD     		pop	{r7, pc}
 1068              	.L65:
 1069              		.align	2
 1070              	.L64:
 1071 0018 00000000 		.word	CapSense_noiseThreshold
 1072              		.cfi_endproc
 1073              	.LFE49:
 1074              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1075              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1076              		.align	2
 1077              		.global	CapSense_GetFingerHysteresis
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	CapSense_GetFingerHysteresis, %function
 1081              	CapSense_GetFingerHysteresis:
 1082              	.LFB50:
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 35


 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1083              		.loc 1 853 0
 1084              		.cfi_startproc
 1085 0000 80B5     		push	{r7, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 82B0     		sub	sp, sp, #8
 1090              		.cfi_def_cfa_offset 16
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 7860     		str	r0, [r7, #4]
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1094              		.loc 1 854 0
 1095 0008 034A     		ldr	r2, .L68
 1096 000a 7B68     		ldr	r3, [r7, #4]
 1097 000c D318     		add	r3, r2, r3
 1098 000e 1B78     		ldrb	r3, [r3]
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1099              		.loc 1 855 0
 1100 0010 181C     		mov	r0, r3
 1101 0012 BD46     		mov	sp, r7
 1102 0014 02B0     		add	sp, sp, #8
 1103              		@ sp needed
 1104 0016 80BD     		pop	{r7, pc}
 1105              	.L69:
 1106              		.align	2
 1107              	.L68:
 1108 0018 00000000 		.word	CapSense_hysteresis
 1109              		.cfi_endproc
 1110              	.LFE50:
 1111              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1112              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1113              		.align	2
 1114              		.global	CapSense_GetNegativeNoiseThreshold
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1118              	CapSense_GetNegativeNoiseThreshold:
 1119              	.LFB51:
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 36


 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1120              		.loc 1 881 0
 1121              		.cfi_startproc
 1122 0000 80B5     		push	{r7, lr}
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 7, -8
 1125              		.cfi_offset 14, -4
 1126 0002 82B0     		sub	sp, sp, #8
 1127              		.cfi_def_cfa_offset 16
 1128 0004 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 1130 0006 7860     		str	r0, [r7, #4]
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1131              		.loc 1 883 0
 1132 0008 034A     		ldr	r2, .L72
 1133 000a 7B68     		ldr	r3, [r7, #4]
 1134 000c D318     		add	r3, r2, r3
 1135 000e 1B78     		ldrb	r3, [r3]
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1136              		.loc 1 887 0
 1137 0010 181C     		mov	r0, r3
 1138 0012 BD46     		mov	sp, r7
 1139 0014 02B0     		add	sp, sp, #8
 1140              		@ sp needed
 1141 0016 80BD     		pop	{r7, pc}
 1142              	.L73:
 1143              		.align	2
 1144              	.L72:
 1145 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1146              		.cfi_endproc
 1147              	.LFE51:
 1148              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1149              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1150              		.align	2
 1151              		.global	CapSense_SetFingerThreshold
 1152              		.code	16
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 37


 1153              		.thumb_func
 1154              		.type	CapSense_SetFingerThreshold, %function
 1155              	CapSense_SetFingerThreshold:
 1156              	.LFB52:
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1157              		.loc 1 914 0
 1158              		.cfi_startproc
 1159 0000 80B5     		push	{r7, lr}
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 7, -8
 1162              		.cfi_offset 14, -4
 1163 0002 82B0     		sub	sp, sp, #8
 1164              		.cfi_def_cfa_offset 16
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 1167 0006 7860     		str	r0, [r7, #4]
 1168 0008 0A1C     		mov	r2, r1
 1169 000a FB1C     		add	r3, r7, #3
 1170 000c 1A70     		strb	r2, [r3]
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1171              		.loc 1 915 0
 1172 000e 044A     		ldr	r2, .L75
 1173 0010 7B68     		ldr	r3, [r7, #4]
 1174 0012 D318     		add	r3, r2, r3
 1175 0014 FA1C     		add	r2, r7, #3
 1176 0016 1278     		ldrb	r2, [r2]
 1177 0018 1A70     		strb	r2, [r3]
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1178              		.loc 1 916 0
 1179 001a BD46     		mov	sp, r7
 1180 001c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 38


 1181              		@ sp needed
 1182 001e 80BD     		pop	{r7, pc}
 1183              	.L76:
 1184              		.align	2
 1185              	.L75:
 1186 0020 00000000 		.word	CapSense_fingerThreshold
 1187              		.cfi_endproc
 1188              	.LFE52:
 1189              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1190              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1191              		.align	2
 1192              		.global	CapSense_SetNoiseThreshold
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CapSense_SetNoiseThreshold, %function
 1196              	CapSense_SetNoiseThreshold:
 1197              	.LFB53:
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1198              		.loc 1 942 0
 1199              		.cfi_startproc
 1200 0000 80B5     		push	{r7, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 82B0     		sub	sp, sp, #8
 1205              		.cfi_def_cfa_offset 16
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 1208 0006 7860     		str	r0, [r7, #4]
 1209 0008 0A1C     		mov	r2, r1
 1210 000a FB1C     		add	r3, r7, #3
 1211 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 39


 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1212              		.loc 1 943 0
 1213 000e 044A     		ldr	r2, .L78
 1214 0010 7B68     		ldr	r3, [r7, #4]
 1215 0012 D318     		add	r3, r2, r3
 1216 0014 FA1C     		add	r2, r7, #3
 1217 0016 1278     		ldrb	r2, [r2]
 1218 0018 1A70     		strb	r2, [r3]
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1219              		.loc 1 944 0
 1220 001a BD46     		mov	sp, r7
 1221 001c 02B0     		add	sp, sp, #8
 1222              		@ sp needed
 1223 001e 80BD     		pop	{r7, pc}
 1224              	.L79:
 1225              		.align	2
 1226              	.L78:
 1227 0020 00000000 		.word	CapSense_noiseThreshold
 1228              		.cfi_endproc
 1229              	.LFE53:
 1230              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1231              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1232              		.align	2
 1233              		.global	CapSense_SetFingerHysteresis
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	CapSense_SetFingerHysteresis, %function
 1237              	CapSense_SetFingerHysteresis:
 1238              	.LFB54:
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1239              		.loc 1 970 0
 1240              		.cfi_startproc
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 40


 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 82B0     		sub	sp, sp, #8
 1246              		.cfi_def_cfa_offset 16
 1247 0004 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 0006 7860     		str	r0, [r7, #4]
 1250 0008 0A1C     		mov	r2, r1
 1251 000a FB1C     		add	r3, r7, #3
 1252 000c 1A70     		strb	r2, [r3]
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1253              		.loc 1 971 0
 1254 000e 044A     		ldr	r2, .L81
 1255 0010 7B68     		ldr	r3, [r7, #4]
 1256 0012 D318     		add	r3, r2, r3
 1257 0014 FA1C     		add	r2, r7, #3
 1258 0016 1278     		ldrb	r2, [r2]
 1259 0018 1A70     		strb	r2, [r3]
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1260              		.loc 1 972 0
 1261 001a BD46     		mov	sp, r7
 1262 001c 02B0     		add	sp, sp, #8
 1263              		@ sp needed
 1264 001e 80BD     		pop	{r7, pc}
 1265              	.L82:
 1266              		.align	2
 1267              	.L81:
 1268 0020 00000000 		.word	CapSense_hysteresis
 1269              		.cfi_endproc
 1270              	.LFE54:
 1271              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1272              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1273              		.align	2
 1274              		.global	CapSense_SetNegativeNoiseThreshold
 1275              		.code	16
 1276              		.thumb_func
 1277              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1278              	CapSense_SetNegativeNoiseThreshold:
 1279              	.LFB55:
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 41


 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1280              		.loc 1 999 0
 1281              		.cfi_startproc
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
 1291 0008 0A1C     		mov	r2, r1
 1292 000a FB1C     		add	r3, r7, #3
 1293 000c 1A70     		strb	r2, [r3]
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1294              		.loc 1 1000 0
 1295 000e 044A     		ldr	r2, .L84
 1296 0010 7B68     		ldr	r3, [r7, #4]
 1297 0012 D318     		add	r3, r2, r3
 1298 0014 FA1C     		add	r2, r7, #3
 1299 0016 1278     		ldrb	r2, [r2]
 1300 0018 1A70     		strb	r2, [r3]
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1301              		.loc 1 1001 0
 1302 001a BD46     		mov	sp, r7
 1303 001c 02B0     		add	sp, sp, #8
 1304              		@ sp needed
 1305 001e 80BD     		pop	{r7, pc}
 1306              	.L85:
 1307              		.align	2
 1308              	.L84:
 1309 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1310              		.cfi_endproc
 1311              	.LFE55:
 1312              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1313              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1314              		.align	2
 1315              		.global	CapSense_SetDebounce
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	CapSense_SetDebounce, %function
 1319              	CapSense_SetDebounce:
 1320              	.LFB56:
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 42


1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1321              		.loc 1 1027 0
 1322              		.cfi_startproc
 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 82B0     		sub	sp, sp, #8
 1328              		.cfi_def_cfa_offset 16
 1329 0004 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
 1331 0006 7860     		str	r0, [r7, #4]
 1332 0008 0A1C     		mov	r2, r1
 1333 000a FB1C     		add	r3, r7, #3
 1334 000c 1A70     		strb	r2, [r3]
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1335              		.loc 1 1028 0
 1336 000e 044A     		ldr	r2, .L87
 1337 0010 7B68     		ldr	r3, [r7, #4]
 1338 0012 D318     		add	r3, r2, r3
 1339 0014 FA1C     		add	r2, r7, #3
 1340 0016 1278     		ldrb	r2, [r2]
 1341 0018 1A70     		strb	r2, [r3]
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1342              		.loc 1 1029 0
 1343 001a BD46     		mov	sp, r7
 1344 001c 02B0     		add	sp, sp, #8
 1345              		@ sp needed
 1346 001e 80BD     		pop	{r7, pc}
 1347              	.L88:
 1348              		.align	2
 1349              	.L87:
 1350 0020 00000000 		.word	CapSense_debounce
 1351              		.cfi_endproc
 1352              	.LFE56:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 43


 1353              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1354              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1355              		.align	2
 1356              		.global	CapSense_SetLowBaselineReset
 1357              		.code	16
 1358              		.thumb_func
 1359              		.type	CapSense_SetLowBaselineReset, %function
 1360              	CapSense_SetLowBaselineReset:
 1361              	.LFB57:
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1362              		.loc 1 1055 0
 1363              		.cfi_startproc
 1364 0000 80B5     		push	{r7, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 82B0     		sub	sp, sp, #8
 1369              		.cfi_def_cfa_offset 16
 1370 0004 00AF     		add	r7, sp, #0
 1371              		.cfi_def_cfa_register 7
 1372 0006 7860     		str	r0, [r7, #4]
 1373 0008 0A1C     		mov	r2, r1
 1374 000a FB1C     		add	r3, r7, #3
 1375 000c 1A70     		strb	r2, [r3]
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1376              		.loc 1 1056 0
 1377 000e 044A     		ldr	r2, .L90
 1378 0010 7B68     		ldr	r3, [r7, #4]
 1379 0012 D318     		add	r3, r2, r3
 1380 0014 FA1C     		add	r2, r7, #3
 1381 0016 1278     		ldrb	r2, [r2]
 1382 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 44


1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1383              		.loc 1 1057 0
 1384 001a BD46     		mov	sp, r7
 1385 001c 02B0     		add	sp, sp, #8
 1386              		@ sp needed
 1387 001e 80BD     		pop	{r7, pc}
 1388              	.L91:
 1389              		.align	2
 1390              	.L90:
 1391 0020 00000000 		.word	CapSense_lowBaselineReset
 1392              		.cfi_endproc
 1393              	.LFE57:
 1394              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1395              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1396              		.align	2
 1397              		.global	CapSense_CheckIsSensorActive
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CapSense_CheckIsSensorActive, %function
 1401              	CapSense_CheckIsSensorActive:
 1402              	.LFB58:
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 45


1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1403              		.loc 1 1101 0
 1404              		.cfi_startproc
 1405 0000 80B5     		push	{r7, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 84B0     		sub	sp, sp, #16
 1410              		.cfi_def_cfa_offset 24
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
 1413 0006 7860     		str	r0, [r7, #4]
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1414              		.loc 1 1111 0
 1415 0008 0F23     		mov	r3, #15
 1416 000a FB18     		add	r3, r7, r3
 1417 000c 4249     		ldr	r1, .L101
 1418 000e 7A68     		ldr	r2, [r7, #4]
 1419 0010 8A18     		add	r2, r1, r2
 1420 0012 1278     		ldrb	r2, [r2]
 1421 0014 1A70     		strb	r2, [r3]
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1422              		.loc 1 1113 0
 1423 0016 0F23     		mov	r3, #15
 1424 0018 FB18     		add	r3, r7, r3
 1425 001a 1A78     		ldrb	r2, [r3]
 1426 001c 0E23     		mov	r3, #14
 1427 001e FB18     		add	r3, r7, r3
 1428 0020 3E49     		ldr	r1, .L101+4
 1429 0022 8A5C     		ldrb	r2, [r1, r2]
 1430 0024 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1431              		.loc 1 1114 0
 1432 0026 0F23     		mov	r3, #15
 1433 0028 FB18     		add	r3, r7, r3
 1434 002a 1A78     		ldrb	r2, [r3]
 1435 002c 0D23     		mov	r3, #13
 1436 002e FB18     		add	r3, r7, r3
 1437 0030 3B49     		ldr	r1, .L101+8
 1438 0032 8A5C     		ldrb	r2, [r1, r2]
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 46


 1439 0034 1A70     		strb	r2, [r3]
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1440              		.loc 1 1115 0
 1441 0036 0F23     		mov	r3, #15
 1442 0038 FB18     		add	r3, r7, r3
 1443 003a 1A78     		ldrb	r2, [r3]
 1444 003c 0C23     		mov	r3, #12
 1445 003e FB18     		add	r3, r7, r3
 1446 0040 3849     		ldr	r1, .L101+12
 1447 0042 8A5C     		ldrb	r2, [r1, r2]
 1448 0044 1A70     		strb	r2, [r3]
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
 1449              		.loc 1 1117 0
 1450 0046 0B23     		mov	r3, #11
 1451 0048 FB18     		add	r3, r7, r3
 1452 004a 0F22     		mov	r2, #15
 1453 004c BA18     		add	r2, r7, r2
 1454 004e 1278     		ldrb	r2, [r2]
 1455 0050 1A70     		strb	r2, [r3]
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1456              		.loc 1 1121 0
 1457 0052 354A     		ldr	r2, .L101+16
 1458 0054 7B68     		ldr	r3, [r7, #4]
 1459 0056 101C     		mov	r0, r2
 1460 0058 191C     		mov	r1, r3
 1461 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1462 005e 031E     		sub	r3, r0, #0
 1463 0060 1DD0     		beq	.L93
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1464              		.loc 1 1124 0
 1465 0062 324A     		ldr	r2, .L101+20
 1466 0064 7B68     		ldr	r3, [r7, #4]
 1467 0066 D318     		add	r3, r2, r3
 1468 0068 1B78     		ldrb	r3, [r3]
 1469 006a 191C     		mov	r1, r3
 1470 006c 0E23     		mov	r3, #14
 1471 006e FB18     		add	r3, r7, r3
 1472 0070 1A78     		ldrb	r2, [r3]
 1473 0072 0D23     		mov	r3, #13
 1474 0074 FB18     		add	r3, r7, r3
 1475 0076 1B78     		ldrb	r3, [r3]
 1476 0078 D31A     		sub	r3, r2, r3
 1477 007a 9942     		cmp	r1, r3
 1478 007c 3DDA     		bge	.L95
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1479              		.loc 1 1126 0
 1480 007e 2A4A     		ldr	r2, .L101+16
 1481 0080 7B68     		ldr	r3, [r7, #4]
 1482 0082 101C     		mov	r0, r2
 1483 0084 191C     		mov	r1, r3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 47


 1484 0086 0022     		mov	r2, #0
 1485 0088 FFF7FEFF 		bl	CapSense_SetBitValue
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1486              		.loc 1 1128 0
 1487 008c 0B23     		mov	r3, #11
 1488 008e FB18     		add	r3, r7, r3
 1489 0090 1B78     		ldrb	r3, [r3]
 1490 0092 274A     		ldr	r2, .L101+24
 1491 0094 0C21     		mov	r1, #12
 1492 0096 7918     		add	r1, r7, r1
 1493 0098 0978     		ldrb	r1, [r1]
 1494 009a D154     		strb	r1, [r2, r3]
 1495 009c 2DE0     		b	.L95
 1496              	.L93:
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1497              		.loc 1 1134 0
 1498 009e 234A     		ldr	r2, .L101+20
 1499 00a0 7B68     		ldr	r3, [r7, #4]
 1500 00a2 D318     		add	r3, r2, r3
 1501 00a4 1B78     		ldrb	r3, [r3]
 1502 00a6 191C     		mov	r1, r3
 1503 00a8 0E23     		mov	r3, #14
 1504 00aa FB18     		add	r3, r7, r3
 1505 00ac 1A78     		ldrb	r2, [r3]
 1506 00ae 0D23     		mov	r3, #13
 1507 00b0 FB18     		add	r3, r7, r3
 1508 00b2 1B78     		ldrb	r3, [r3]
 1509 00b4 D318     		add	r3, r2, r3
 1510 00b6 9942     		cmp	r1, r3
 1511 00b8 17DB     		blt	.L96
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1512              		.loc 1 1136 0
 1513 00ba 0B23     		mov	r3, #11
 1514 00bc FB18     		add	r3, r7, r3
 1515 00be 1B78     		ldrb	r3, [r3]
 1516 00c0 1B4A     		ldr	r2, .L101+24
 1517 00c2 D25C     		ldrb	r2, [r2, r3]
 1518 00c4 013A     		sub	r2, r2, #1
 1519 00c6 D1B2     		uxtb	r1, r2
 1520 00c8 194A     		ldr	r2, .L101+24
 1521 00ca D154     		strb	r1, [r2, r3]
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1522              		.loc 1 1138 0
 1523 00cc 0B23     		mov	r3, #11
 1524 00ce FB18     		add	r3, r7, r3
 1525 00d0 1B78     		ldrb	r3, [r3]
 1526 00d2 174A     		ldr	r2, .L101+24
 1527 00d4 D35C     		ldrb	r3, [r2, r3]
 1528 00d6 002B     		cmp	r3, #0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 48


 1529 00d8 0FD1     		bne	.L95
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1530              		.loc 1 1140 0
 1531 00da 134A     		ldr	r2, .L101+16
 1532 00dc 7B68     		ldr	r3, [r7, #4]
 1533 00de 101C     		mov	r0, r2
 1534 00e0 191C     		mov	r1, r3
 1535 00e2 0122     		mov	r2, #1
 1536 00e4 FFF7FEFF 		bl	CapSense_SetBitValue
 1537 00e8 07E0     		b	.L95
 1538              	.L96:
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1539              		.loc 1 1146 0
 1540 00ea 0B23     		mov	r3, #11
 1541 00ec FB18     		add	r3, r7, r3
 1542 00ee 1B78     		ldrb	r3, [r3]
 1543 00f0 0F4A     		ldr	r2, .L101+24
 1544 00f2 0C21     		mov	r1, #12
 1545 00f4 7918     		add	r1, r7, r1
 1546 00f6 0978     		ldrb	r1, [r1]
 1547 00f8 D154     		strb	r1, [r2, r3]
 1548              	.L95:
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1549              		.loc 1 1150 0
 1550 00fa 0B4A     		ldr	r2, .L101+16
 1551 00fc 7B68     		ldr	r3, [r7, #4]
 1552 00fe 101C     		mov	r0, r2
 1553 0100 191C     		mov	r1, r3
 1554 0102 FFF7FEFF 		bl	CapSense_GetBitValue
 1555 0106 031E     		sub	r3, r0, #0
 1556 0108 01D0     		beq	.L98
 1557              		.loc 1 1150 0 is_stmt 0 discriminator 1
 1558 010a 0123     		mov	r3, #1
 1559 010c 00E0     		b	.L99
 1560              	.L98:
 1561              		.loc 1 1150 0 discriminator 2
 1562 010e 0023     		mov	r3, #0
 1563              	.L99:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1564              		.loc 1 1151 0 is_stmt 1 discriminator 4
 1565 0110 181C     		mov	r0, r3
 1566 0112 BD46     		mov	sp, r7
 1567 0114 04B0     		add	sp, sp, #16
 1568              		@ sp needed
 1569 0116 80BD     		pop	{r7, pc}
 1570              	.L102:
 1571              		.align	2
 1572              	.L101:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 49


 1573 0118 00000000 		.word	CapSense_widgetNumber
 1574 011c 00000000 		.word	CapSense_fingerThreshold
 1575 0120 00000000 		.word	CapSense_hysteresis
 1576 0124 00000000 		.word	CapSense_debounce
 1577 0128 00000000 		.word	CapSense_sensorOnMask
 1578 012c 00000000 		.word	CapSense_sensorSignal
 1579 0130 10000000 		.word	CapSense_debounceCounter
 1580              		.cfi_endproc
 1581              	.LFE58:
 1582              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1583              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1584              		.align	2
 1585              		.global	CapSense_CheckIsWidgetActive
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CapSense_CheckIsWidgetActive, %function
 1589              	CapSense_CheckIsWidgetActive:
 1590              	.LFB59:
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1591              		.loc 1 1183 0
 1592              		.cfi_startproc
 1593 0000 80B5     		push	{r7, lr}
 1594              		.cfi_def_cfa_offset 8
 1595              		.cfi_offset 7, -8
 1596              		.cfi_offset 14, -4
 1597 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 50


 1598              		.cfi_def_cfa_offset 32
 1599 0004 00AF     		add	r7, sp, #0
 1600              		.cfi_def_cfa_register 7
 1601 0006 7860     		str	r0, [r7, #4]
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1602              		.loc 1 1184 0
 1603 0008 0023     		mov	r3, #0
 1604 000a 7B61     		str	r3, [r7, #20]
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1605              		.loc 1 1185 0
 1606 000c 0123     		mov	r3, #1
 1607 000e 1A1C     		mov	r2, r3
 1608 0010 7B69     		ldr	r3, [r7, #20]
 1609 0012 D318     		add	r3, r2, r3
 1610 0014 FB60     		str	r3, [r7, #12]
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1611              		.loc 1 1186 0
 1612 0016 0023     		mov	r3, #0
 1613 0018 3B61     		str	r3, [r7, #16]
 1614              	.L105:
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1615              		.loc 1 1191 0
 1616 001a 7B69     		ldr	r3, [r7, #20]
 1617 001c 181C     		mov	r0, r3
 1618 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1619 0022 031E     		sub	r3, r0, #0
 1620 0024 01D0     		beq	.L104
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1621              		.loc 1 1193 0
 1622 0026 0123     		mov	r3, #1
 1623 0028 3B61     		str	r3, [r7, #16]
 1624              	.L104:
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1625              		.loc 1 1195 0
 1626 002a 7B69     		ldr	r3, [r7, #20]
 1627 002c 0133     		add	r3, r3, #1
 1628 002e 7B61     		str	r3, [r7, #20]
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1629              		.loc 1 1197 0
 1630 0030 7A69     		ldr	r2, [r7, #20]
 1631 0032 FB68     		ldr	r3, [r7, #12]
 1632 0034 9A42     		cmp	r2, r3
 1633 0036 F0D3     		bcc	.L105
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1634              		.loc 1 1201 0
 1635 0038 3B69     		ldr	r3, [r7, #16]
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 51


 1636              		.loc 1 1202 0
 1637 003a 181C     		mov	r0, r3
 1638 003c BD46     		mov	sp, r7
 1639 003e 06B0     		add	sp, sp, #24
 1640              		@ sp needed
 1641 0040 80BD     		pop	{r7, pc}
 1642              		.cfi_endproc
 1643              	.LFE59:
 1644              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1645 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1646              		.align	2
 1647              		.global	CapSense_CheckIsAnyWidgetActive
 1648              		.code	16
 1649              		.thumb_func
 1650              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1651              	CapSense_CheckIsAnyWidgetActive:
 1652              	.LFB60:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1653              		.loc 1 1229 0
 1654              		.cfi_startproc
 1655 0000 80B5     		push	{r7, lr}
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 82B0     		sub	sp, sp, #8
 1660              		.cfi_def_cfa_offset 16
 1661 0004 00AF     		add	r7, sp, #0
 1662              		.cfi_def_cfa_register 7
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 52


 1663              		.loc 1 1232 0
 1664 0006 0023     		mov	r3, #0
 1665 0008 3B60     		str	r3, [r7]
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1666              		.loc 1 1234 0
 1667 000a 0023     		mov	r3, #0
 1668 000c 7B60     		str	r3, [r7, #4]
 1669 000e 0AE0     		b	.L108
 1670              	.L110:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1671              		.loc 1 1236 0
 1672 0010 7B68     		ldr	r3, [r7, #4]
 1673 0012 181C     		mov	r0, r3
 1674 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1675 0018 031E     		sub	r3, r0, #0
 1676 001a 01D0     		beq	.L109
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1677              		.loc 1 1238 0
 1678 001c 0123     		mov	r3, #1
 1679 001e 3B60     		str	r3, [r7]
 1680              	.L109:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1681              		.loc 1 1234 0 discriminator 2
 1682 0020 7B68     		ldr	r3, [r7, #4]
 1683 0022 0133     		add	r3, r3, #1
 1684 0024 7B60     		str	r3, [r7, #4]
 1685              	.L108:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1686              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1687 0026 7B68     		ldr	r3, [r7, #4]
 1688 0028 002B     		cmp	r3, #0
 1689 002a F1D0     		beq	.L110
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1690              		.loc 1 1244 0 is_stmt 1
 1691 002c 3B68     		ldr	r3, [r7]
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1692              		.loc 1 1245 0
 1693 002e 181C     		mov	r0, r3
 1694 0030 BD46     		mov	sp, r7
 1695 0032 02B0     		add	sp, sp, #8
 1696              		@ sp needed
 1697 0034 80BD     		pop	{r7, pc}
 1698              		.cfi_endproc
 1699              	.LFE60:
 1700              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1701 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1702              		.align	2
 1703              		.global	CapSense_EnableWidget
 1704              		.code	16
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 53


 1705              		.thumb_func
 1706              		.type	CapSense_EnableWidget, %function
 1707              	CapSense_EnableWidget:
 1708              	.LFB61:
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1709              		.loc 1 1276 0
 1710              		.cfi_startproc
 1711 0000 80B5     		push	{r7, lr}
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 84B0     		sub	sp, sp, #16
 1716              		.cfi_def_cfa_offset 24
 1717 0004 00AF     		add	r7, sp, #0
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1720              		.loc 1 1278 0
 1721 0008 0F23     		mov	r3, #15
 1722 000a FB18     		add	r3, r7, r3
 1723 000c 0022     		mov	r2, #0
 1724 000e 1A70     		strb	r2, [r3]
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1725              		.loc 1 1279 0
 1726 0010 0121     		mov	r1, #1
 1727 0012 0E23     		mov	r3, #14
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 54


 1728 0014 FB18     		add	r3, r7, r3
 1729 0016 0F22     		mov	r2, #15
 1730 0018 BA18     		add	r2, r7, r2
 1731 001a 1278     		ldrb	r2, [r2]
 1732 001c 8A18     		add	r2, r1, r2
 1733 001e 1A70     		strb	r2, [r3]
 1734              	.L113:
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1735              		.loc 1 1284 0 discriminator 1
 1736 0020 0F23     		mov	r3, #15
 1737 0022 FB18     		add	r3, r7, r3
 1738 0024 1B78     		ldrb	r3, [r3]
 1739 0026 0C4A     		ldr	r2, .L114
 1740 0028 101C     		mov	r0, r2
 1741 002a 191C     		mov	r1, r3
 1742 002c 0122     		mov	r2, #1
 1743 002e FFF7FEFF 		bl	CapSense_SetBitValue
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1744              		.loc 1 1285 0 discriminator 1
 1745 0032 0F23     		mov	r3, #15
 1746 0034 FB18     		add	r3, r7, r3
 1747 0036 1A78     		ldrb	r2, [r3]
 1748 0038 0F23     		mov	r3, #15
 1749 003a FB18     		add	r3, r7, r3
 1750 003c 0132     		add	r2, r2, #1
 1751 003e 1A70     		strb	r2, [r3]
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1752              		.loc 1 1287 0 discriminator 1
 1753 0040 0F23     		mov	r3, #15
 1754 0042 FA18     		add	r2, r7, r3
 1755 0044 0E23     		mov	r3, #14
 1756 0046 FB18     		add	r3, r7, r3
 1757 0048 1278     		ldrb	r2, [r2]
 1758 004a 1B78     		ldrb	r3, [r3]
 1759 004c 9A42     		cmp	r2, r3
 1760 004e E7D3     		bcc	.L113
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1761              		.loc 1 1288 0
 1762 0050 BD46     		mov	sp, r7
 1763 0052 04B0     		add	sp, sp, #16
 1764              		@ sp needed
 1765 0054 80BD     		pop	{r7, pc}
 1766              	.L115:
 1767 0056 C046     		.align	2
 1768              	.L114:
 1769 0058 00000000 		.word	CapSense_sensorEnableMask
 1770              		.cfi_endproc
 1771              	.LFE61:
 1772              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1773              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1774              		.align	2
 1775              		.global	CapSense_DisableWidget
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 55


 1776              		.code	16
 1777              		.thumb_func
 1778              		.type	CapSense_DisableWidget, %function
 1779              	CapSense_DisableWidget:
 1780              	.LFB62:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1781              		.loc 1 1319 0
 1782              		.cfi_startproc
 1783 0000 80B5     		push	{r7, lr}
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 7, -8
 1786              		.cfi_offset 14, -4
 1787 0002 84B0     		sub	sp, sp, #16
 1788              		.cfi_def_cfa_offset 24
 1789 0004 00AF     		add	r7, sp, #0
 1790              		.cfi_def_cfa_register 7
 1791 0006 7860     		str	r0, [r7, #4]
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1792              		.loc 1 1320 0
 1793 0008 0F23     		mov	r3, #15
 1794 000a FB18     		add	r3, r7, r3
 1795 000c 0022     		mov	r2, #0
 1796 000e 1A70     		strb	r2, [r3]
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1797              		.loc 1 1321 0
 1798 0010 0121     		mov	r1, #1
 1799 0012 0E23     		mov	r3, #14
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 56


 1800 0014 FB18     		add	r3, r7, r3
 1801 0016 0F22     		mov	r2, #15
 1802 0018 BA18     		add	r2, r7, r2
 1803 001a 1278     		ldrb	r2, [r2]
 1804 001c 8A18     		add	r2, r1, r2
 1805 001e 1A70     		strb	r2, [r3]
 1806              	.L117:
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1807              		.loc 1 1327 0 discriminator 1
 1808 0020 0F23     		mov	r3, #15
 1809 0022 FB18     		add	r3, r7, r3
 1810 0024 1B78     		ldrb	r3, [r3]
 1811 0026 0C4A     		ldr	r2, .L118
 1812 0028 101C     		mov	r0, r2
 1813 002a 191C     		mov	r1, r3
 1814 002c 0022     		mov	r2, #0
 1815 002e FFF7FEFF 		bl	CapSense_SetBitValue
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1816              		.loc 1 1328 0 discriminator 1
 1817 0032 0F23     		mov	r3, #15
 1818 0034 FB18     		add	r3, r7, r3
 1819 0036 1A78     		ldrb	r2, [r3]
 1820 0038 0F23     		mov	r3, #15
 1821 003a FB18     		add	r3, r7, r3
 1822 003c 0132     		add	r2, r2, #1
 1823 003e 1A70     		strb	r2, [r3]
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1824              		.loc 1 1330 0 discriminator 1
 1825 0040 0F23     		mov	r3, #15
 1826 0042 FA18     		add	r2, r7, r3
 1827 0044 0E23     		mov	r3, #14
 1828 0046 FB18     		add	r3, r7, r3
 1829 0048 1278     		ldrb	r2, [r2]
 1830 004a 1B78     		ldrb	r3, [r3]
 1831 004c 9A42     		cmp	r2, r3
 1832 004e E7D3     		bcc	.L117
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1833              		.loc 1 1331 0
 1834 0050 BD46     		mov	sp, r7
 1835 0052 04B0     		add	sp, sp, #16
 1836              		@ sp needed
 1837 0054 80BD     		pop	{r7, pc}
 1838              	.L119:
 1839 0056 C046     		.align	2
 1840              	.L118:
 1841 0058 00000000 		.word	CapSense_sensorEnableMask
 1842              		.cfi_endproc
 1843              	.LFE62:
 1844              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1845              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1846              		.align	2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 57


 1847              		.global	CapSense_MedianFilter
 1848              		.code	16
 1849              		.thumb_func
 1850              		.type	CapSense_MedianFilter, %function
 1851              	CapSense_MedianFilter:
 1852              	.LFB63:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 58


1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 59


1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 60


1497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 61


1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 62


1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 63


1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 64


1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 65


1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 66


1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 67


1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 68


1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 69


2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 70


2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 71


2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 72


2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 73


2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 74


2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 75


2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1853              		.loc 1 2371 0
 1854              		.cfi_startproc
 1855 0000 90B5     		push	{r4, r7, lr}
 1856              		.cfi_def_cfa_offset 12
 1857              		.cfi_offset 4, -12
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 85B0     		sub	sp, sp, #20
 1861              		.cfi_def_cfa_offset 32
 1862 0004 00AF     		add	r7, sp, #0
 1863              		.cfi_def_cfa_register 7
 1864 0006 041C     		mov	r4, r0
 1865 0008 081C     		mov	r0, r1
 1866 000a 111C     		mov	r1, r2
 1867 000c BB1D     		add	r3, r7, #6
 1868 000e 221C     		add	r2, r4, #0
 1869 0010 1A80     		strh	r2, [r3]
 1870 0012 3B1D     		add	r3, r7, #4
 1871 0014 021C     		add	r2, r0, #0
 1872 0016 1A80     		strh	r2, [r3]
 1873 0018 BB1C     		add	r3, r7, #2
 1874 001a 0A1C     		add	r2, r1, #0
 1875 001c 1A80     		strh	r2, [r3]
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1876              		.loc 1 2374 0
 1877 001e BA1D     		add	r2, r7, #6
 1878 0020 3B1D     		add	r3, r7, #4
 1879 0022 1288     		ldrh	r2, [r2]
 1880 0024 1B88     		ldrh	r3, [r3]
 1881 0026 9A42     		cmp	r2, r3
 1882 0028 0DD9     		bls	.L121
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1883              		.loc 1 2376 0
 1884 002a 0E23     		mov	r3, #14
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 76


 1885 002c FB18     		add	r3, r7, r3
 1886 002e 3A1D     		add	r2, r7, #4
 1887 0030 1288     		ldrh	r2, [r2]
 1888 0032 1A80     		strh	r2, [r3]
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1889              		.loc 1 2377 0
 1890 0034 3B1D     		add	r3, r7, #4
 1891 0036 BA1D     		add	r2, r7, #6
 1892 0038 1288     		ldrh	r2, [r2]
 1893 003a 1A80     		strh	r2, [r3]
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1894              		.loc 1 2378 0
 1895 003c BB1D     		add	r3, r7, #6
 1896 003e 0E22     		mov	r2, #14
 1897 0040 BA18     		add	r2, r7, r2
 1898 0042 1288     		ldrh	r2, [r2]
 1899 0044 1A80     		strh	r2, [r3]
 1900              	.L121:
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1901              		.loc 1 2381 0
 1902 0046 3A1D     		add	r2, r7, #4
 1903 0048 BB1C     		add	r3, r7, #2
 1904 004a 1288     		ldrh	r2, [r2]
 1905 004c 1B88     		ldrh	r3, [r3]
 1906 004e 9A42     		cmp	r2, r3
 1907 0050 03D9     		bls	.L122
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1908              		.loc 1 2383 0
 1909 0052 3B1D     		add	r3, r7, #4
 1910 0054 BA1C     		add	r2, r7, #2
 1911 0056 1288     		ldrh	r2, [r2]
 1912 0058 1A80     		strh	r2, [r3]
 1913              	.L122:
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1914              		.loc 1 2386 0
 1915 005a 3B1D     		add	r3, r7, #4
 1916 005c BA1D     		add	r2, r7, #6
 1917 005e 1088     		ldrh	r0, [r2]
 1918 0060 1B88     		ldrh	r3, [r3]
 1919 0062 99B2     		uxth	r1, r3
 1920 0064 82B2     		uxth	r2, r0
 1921 0066 9142     		cmp	r1, r2
 1922 0068 00D2     		bcs	.L123
 1923 006a 031C     		add	r3, r0, #0
 1924              	.L123:
 1925 006c 9BB2     		uxth	r3, r3
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1926              		.loc 1 2387 0
 1927 006e 181C     		mov	r0, r3
 1928 0070 BD46     		mov	sp, r7
 1929 0072 05B0     		add	sp, sp, #20
 1930              		@ sp needed
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 77


 1931 0074 90BD     		pop	{r4, r7, pc}
 1932              		.cfi_endproc
 1933              	.LFE63:
 1934              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1935 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1936              		.align	2
 1937              		.global	CapSense_IIR4Filter
 1938              		.code	16
 1939              		.thumb_func
 1940              		.type	CapSense_IIR4Filter, %function
 1941              	CapSense_IIR4Filter:
 1942              	.LFB64:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 78


2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 79


2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1943              		.loc 1 2491 0
 1944              		.cfi_startproc
 1945 0000 80B5     		push	{r7, lr}
 1946              		.cfi_def_cfa_offset 8
 1947              		.cfi_offset 7, -8
 1948              		.cfi_offset 14, -4
 1949 0002 84B0     		sub	sp, sp, #16
 1950              		.cfi_def_cfa_offset 24
 1951 0004 00AF     		add	r7, sp, #0
 1952              		.cfi_def_cfa_register 7
 1953 0006 021C     		mov	r2, r0
 1954 0008 BB1D     		add	r3, r7, #6
 1955 000a 1A80     		strh	r2, [r3]
 1956 000c 3B1D     		add	r3, r7, #4
 1957 000e 0A1C     		add	r2, r1, #0
 1958 0010 1A80     		strh	r2, [r3]
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1959              		.loc 1 2495 0
 1960 0012 BB1D     		add	r3, r7, #6
 1961 0014 1A88     		ldrh	r2, [r3]
 1962 0016 3B1D     		add	r3, r7, #4
 1963 0018 1B88     		ldrh	r3, [r3]
 1964 001a D318     		add	r3, r2, r3
 1965 001c FB60     		str	r3, [r7, #12]
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1966              		.loc 1 2496 0
 1967 001e 3B1D     		add	r3, r7, #4
 1968 0020 1B88     		ldrh	r3, [r3]
 1969 0022 5B00     		lsl	r3, r3, #1
 1970 0024 FA68     		ldr	r2, [r7, #12]
 1971 0026 D318     		add	r3, r2, r3
 1972 0028 FB60     		str	r3, [r7, #12]
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1973              		.loc 1 2497 0
 1974 002a FB68     		ldr	r3, [r7, #12]
 1975 002c 9B08     		lsr	r3, r3, #2
 1976 002e FB60     		str	r3, [r7, #12]
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1977              		.loc 1 2499 0
 1978 0030 FB68     		ldr	r3, [r7, #12]
 1979 0032 9BB2     		uxth	r3, r3
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1980              		.loc 1 2500 0
 1981 0034 181C     		mov	r0, r3
 1982 0036 BD46     		mov	sp, r7
 1983 0038 04B0     		add	sp, sp, #16
 1984              		@ sp needed
 1985 003a 80BD     		pop	{r7, pc}
 1986              		.cfi_endproc
 1987              	.LFE64:
 1988              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 80


 1989              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1990              		.align	2
 1991              		.global	CapSense_GetWidgetNumber
 1992              		.code	16
 1993              		.thumb_func
 1994              		.type	CapSense_GetWidgetNumber, %function
 1995              	CapSense_GetWidgetNumber:
 1996              	.LFB65:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 81


2550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 82


2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 83


2664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 84


2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1997              		.loc 1 2724 0
 1998              		.cfi_startproc
 1999 0000 80B5     		push	{r7, lr}
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 7, -8
 2002              		.cfi_offset 14, -4
 2003 0002 82B0     		sub	sp, sp, #8
 2004              		.cfi_def_cfa_offset 16
 2005 0004 00AF     		add	r7, sp, #0
 2006              		.cfi_def_cfa_register 7
 2007 0006 7860     		str	r0, [r7, #4]
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2008              		.loc 1 2725 0
 2009 0008 034A     		ldr	r2, .L129
 2010 000a 7B68     		ldr	r3, [r7, #4]
 2011 000c D318     		add	r3, r2, r3
 2012 000e 1B78     		ldrb	r3, [r3]
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2013              		.loc 1 2726 0
 2014 0010 181C     		mov	r0, r3
 2015 0012 BD46     		mov	sp, r7
 2016 0014 02B0     		add	sp, sp, #8
 2017              		@ sp needed
 2018 0016 80BD     		pop	{r7, pc}
 2019              	.L130:
 2020              		.align	2
 2021              	.L129:
 2022 0018 00000000 		.word	CapSense_widgetNumber
 2023              		.cfi_endproc
 2024              	.LFE65:
 2025              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2026              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2027              		.align	2
 2028              		.global	CapSense_GetLowBaselineReset
 2029              		.code	16
 2030              		.thumb_func
 2031              		.type	CapSense_GetLowBaselineReset, %function
 2032              	CapSense_GetLowBaselineReset:
 2033              	.LFB66:
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 85


2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2034              		.loc 1 2750 0
 2035              		.cfi_startproc
 2036 0000 80B5     		push	{r7, lr}
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 7, -8
 2039              		.cfi_offset 14, -4
 2040 0002 82B0     		sub	sp, sp, #8
 2041              		.cfi_def_cfa_offset 16
 2042 0004 00AF     		add	r7, sp, #0
 2043              		.cfi_def_cfa_register 7
 2044 0006 7860     		str	r0, [r7, #4]
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2045              		.loc 1 2751 0
 2046 0008 034A     		ldr	r2, .L133
 2047 000a 7B68     		ldr	r3, [r7, #4]
 2048 000c D318     		add	r3, r2, r3
 2049 000e 1B78     		ldrb	r3, [r3]
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2050              		.loc 1 2752 0
 2051 0010 181C     		mov	r0, r3
 2052 0012 BD46     		mov	sp, r7
 2053 0014 02B0     		add	sp, sp, #8
 2054              		@ sp needed
 2055 0016 80BD     		pop	{r7, pc}
 2056              	.L134:
 2057              		.align	2
 2058              	.L133:
 2059 0018 00000000 		.word	CapSense_lowBaselineReset
 2060              		.cfi_endproc
 2061              	.LFE66:
 2062              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2063              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2064              		.align	2
 2065              		.global	CapSense_GetDebounce
 2066              		.code	16
 2067              		.thumb_func
 2068              		.type	CapSense_GetDebounce, %function
 2069              	CapSense_GetDebounce:
 2070              	.LFB67:
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 86


2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2071              		.loc 1 2776 0
 2072              		.cfi_startproc
 2073 0000 80B5     		push	{r7, lr}
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 82B0     		sub	sp, sp, #8
 2078              		.cfi_def_cfa_offset 16
 2079 0004 00AF     		add	r7, sp, #0
 2080              		.cfi_def_cfa_register 7
 2081 0006 7860     		str	r0, [r7, #4]
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2082              		.loc 1 2777 0
 2083 0008 034A     		ldr	r2, .L137
 2084 000a 7B68     		ldr	r3, [r7, #4]
 2085 000c D318     		add	r3, r2, r3
 2086 000e 1B78     		ldrb	r3, [r3]
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2087              		.loc 1 2778 0
 2088 0010 181C     		mov	r0, r3
 2089 0012 BD46     		mov	sp, r7
 2090 0014 02B0     		add	sp, sp, #8
 2091              		@ sp needed
 2092 0016 80BD     		pop	{r7, pc}
 2093              	.L138:
 2094              		.align	2
 2095              	.L137:
 2096 0018 00000000 		.word	CapSense_debounce
 2097              		.cfi_endproc
 2098              	.LFE67:
 2099              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2100              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2101              		.align	2
 2102              		.global	CapSense_EnableRawDataFilters
 2103              		.code	16
 2104              		.thumb_func
 2105              		.type	CapSense_EnableRawDataFilters, %function
 2106              	CapSense_EnableRawDataFilters:
 2107              	.LFB68:
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 87


2781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2108              		.loc 1 2802 0
 2109              		.cfi_startproc
 2110 0000 80B5     		push	{r7, lr}
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 7, -8
 2113              		.cfi_offset 14, -4
 2114 0002 00AF     		add	r7, sp, #0
 2115              		.cfi_def_cfa_register 7
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2116              		.loc 1 2803 0
 2117 0004 024B     		ldr	r3, .L140
 2118 0006 0122     		mov	r2, #1
 2119 0008 1A70     		strb	r2, [r3]
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2120              		.loc 1 2804 0
 2121 000a BD46     		mov	sp, r7
 2122              		@ sp needed
 2123 000c 80BD     		pop	{r7, pc}
 2124              	.L141:
 2125 000e C046     		.align	2
 2126              	.L140:
 2127 0010 00000000 		.word	CapSense_enableRawFilters
 2128              		.cfi_endproc
 2129              	.LFE68:
 2130              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2131              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2132              		.align	2
 2133              		.global	CapSense_DisableRawDataFilters
 2134              		.code	16
 2135              		.thumb_func
 2136              		.type	CapSense_DisableRawDataFilters, %function
 2137              	CapSense_DisableRawDataFilters:
 2138              	.LFB69:
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 88


2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2139              		.loc 1 2827 0
 2140              		.cfi_startproc
 2141 0000 80B5     		push	{r7, lr}
 2142              		.cfi_def_cfa_offset 8
 2143              		.cfi_offset 7, -8
 2144              		.cfi_offset 14, -4
 2145 0002 00AF     		add	r7, sp, #0
 2146              		.cfi_def_cfa_register 7
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2147              		.loc 1 2828 0
 2148 0004 024B     		ldr	r3, .L143
 2149 0006 0022     		mov	r2, #0
 2150 0008 1A70     		strb	r2, [r3]
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2151              		.loc 1 2829 0
 2152 000a BD46     		mov	sp, r7
 2153              		@ sp needed
 2154 000c 80BD     		pop	{r7, pc}
 2155              	.L144:
 2156 000e C046     		.align	2
 2157              	.L143:
 2158 0010 00000000 		.word	CapSense_enableRawFilters
 2159              		.cfi_endproc
 2160              	.LFE69:
 2161              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2162              		.text
 2163              	.Letext0:
 2164              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2165              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2166              		.section	.debug_info,"",%progbits
 2167              	.Ldebug_info0:
 2168 0000 880B0000 		.4byte	0xb88
 2169 0004 0400     		.2byte	0x4
 2170 0006 00000000 		.4byte	.Ldebug_abbrev0
 2171 000a 04       		.byte	0x4
 2172 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 89


 2173 000c C7080000 		.4byte	.LASF121
 2174 0010 01       		.byte	0x1
 2175 0011 08050000 		.4byte	.LASF122
 2176 0015 D2030000 		.4byte	.LASF123
 2177 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2178 001d 00000000 		.4byte	0
 2179 0021 00000000 		.4byte	.Ldebug_line0
 2180 0025 02       		.uleb128 0x2
 2181 0026 01       		.byte	0x1
 2182 0027 06       		.byte	0x6
 2183 0028 9A010000 		.4byte	.LASF0
 2184 002c 02       		.uleb128 0x2
 2185 002d 01       		.byte	0x1
 2186 002e 08       		.byte	0x8
 2187 002f FB060000 		.4byte	.LASF1
 2188 0033 02       		.uleb128 0x2
 2189 0034 02       		.byte	0x2
 2190 0035 05       		.byte	0x5
 2191 0036 62070000 		.4byte	.LASF2
 2192 003a 02       		.uleb128 0x2
 2193 003b 02       		.byte	0x2
 2194 003c 07       		.byte	0x7
 2195 003d B0030000 		.4byte	.LASF3
 2196 0041 02       		.uleb128 0x2
 2197 0042 04       		.byte	0x4
 2198 0043 05       		.byte	0x5
 2199 0044 1E020000 		.4byte	.LASF4
 2200 0048 02       		.uleb128 0x2
 2201 0049 04       		.byte	0x4
 2202 004a 07       		.byte	0x7
 2203 004b 4E030000 		.4byte	.LASF5
 2204 004f 02       		.uleb128 0x2
 2205 0050 08       		.byte	0x8
 2206 0051 05       		.byte	0x5
 2207 0052 8C010000 		.4byte	.LASF6
 2208 0056 02       		.uleb128 0x2
 2209 0057 08       		.byte	0x8
 2210 0058 07       		.byte	0x7
 2211 0059 00010000 		.4byte	.LASF7
 2212 005d 03       		.uleb128 0x3
 2213 005e 04       		.byte	0x4
 2214 005f 05       		.byte	0x5
 2215 0060 696E7400 		.ascii	"int\000"
 2216 0064 02       		.uleb128 0x2
 2217 0065 04       		.byte	0x4
 2218 0066 07       		.byte	0x7
 2219 0067 34030000 		.4byte	.LASF8
 2220 006b 04       		.uleb128 0x4
 2221 006c 47020000 		.4byte	.LASF9
 2222 0070 02       		.byte	0x2
 2223 0071 9801     		.2byte	0x198
 2224 0073 2C000000 		.4byte	0x2c
 2225 0077 04       		.uleb128 0x4
 2226 0078 00000000 		.4byte	.LASF10
 2227 007c 02       		.byte	0x2
 2228 007d 9901     		.2byte	0x199
 2229 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 90


 2230 0083 04       		.uleb128 0x4
 2231 0084 A3020000 		.4byte	.LASF11
 2232 0088 02       		.byte	0x2
 2233 0089 9A01     		.2byte	0x19a
 2234 008b 48000000 		.4byte	0x48
 2235 008f 02       		.uleb128 0x2
 2236 0090 04       		.byte	0x4
 2237 0091 04       		.byte	0x4
 2238 0092 88060000 		.4byte	.LASF12
 2239 0096 02       		.uleb128 0x2
 2240 0097 08       		.byte	0x8
 2241 0098 04       		.byte	0x4
 2242 0099 86020000 		.4byte	.LASF13
 2243 009d 02       		.uleb128 0x2
 2244 009e 01       		.byte	0x1
 2245 009f 08       		.byte	0x8
 2246 00a0 04080000 		.4byte	.LASF14
 2247 00a4 02       		.uleb128 0x2
 2248 00a5 04       		.byte	0x4
 2249 00a6 07       		.byte	0x7
 2250 00a7 73050000 		.4byte	.LASF15
 2251 00ab 05       		.uleb128 0x5
 2252 00ac 5C       		.byte	0x5c
 2253 00ad 03       		.byte	0x3
 2254 00ae 2F       		.byte	0x2f
 2255 00af C8010000 		.4byte	0x1c8
 2256 00b3 06       		.uleb128 0x6
 2257 00b4 11060000 		.4byte	.LASF16
 2258 00b8 03       		.byte	0x3
 2259 00b9 31       		.byte	0x31
 2260 00ba C8010000 		.4byte	0x1c8
 2261 00be 00       		.byte	0
 2262 00bf 06       		.uleb128 0x6
 2263 00c0 20060000 		.4byte	.LASF17
 2264 00c4 03       		.byte	0x3
 2265 00c5 32       		.byte	0x32
 2266 00c6 C8010000 		.4byte	0x1c8
 2267 00ca 04       		.byte	0x4
 2268 00cb 06       		.uleb128 0x6
 2269 00cc C3030000 		.4byte	.LASF18
 2270 00d0 03       		.byte	0x3
 2271 00d1 33       		.byte	0x33
 2272 00d2 C8010000 		.4byte	0x1c8
 2273 00d6 08       		.byte	0x8
 2274 00d7 06       		.uleb128 0x6
 2275 00d8 C7040000 		.4byte	.LASF19
 2276 00dc 03       		.byte	0x3
 2277 00dd 34       		.byte	0x34
 2278 00de C8010000 		.4byte	0x1c8
 2279 00e2 0C       		.byte	0xc
 2280 00e3 06       		.uleb128 0x6
 2281 00e4 73070000 		.4byte	.LASF20
 2282 00e8 03       		.byte	0x3
 2283 00e9 35       		.byte	0x35
 2284 00ea C8010000 		.4byte	0x1c8
 2285 00ee 10       		.byte	0x10
 2286 00ef 06       		.uleb128 0x6
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 91


 2287 00f0 EE010000 		.4byte	.LASF21
 2288 00f4 03       		.byte	0x3
 2289 00f5 36       		.byte	0x36
 2290 00f6 CE010000 		.4byte	0x1ce
 2291 00fa 14       		.byte	0x14
 2292 00fb 06       		.uleb128 0x6
 2293 00fc 7B030000 		.4byte	.LASF22
 2294 0100 03       		.byte	0x3
 2295 0101 37       		.byte	0x37
 2296 0102 D9010000 		.4byte	0x1d9
 2297 0106 18       		.byte	0x18
 2298 0107 06       		.uleb128 0x6
 2299 0108 4B050000 		.4byte	.LASF23
 2300 010c 03       		.byte	0x3
 2301 010d 38       		.byte	0x38
 2302 010e C8010000 		.4byte	0x1c8
 2303 0112 1C       		.byte	0x1c
 2304 0113 06       		.uleb128 0x6
 2305 0114 09080000 		.4byte	.LASF24
 2306 0118 03       		.byte	0x3
 2307 0119 39       		.byte	0x39
 2308 011a C8010000 		.4byte	0x1c8
 2309 011e 20       		.byte	0x20
 2310 011f 06       		.uleb128 0x6
 2311 0120 C8060000 		.4byte	.LASF25
 2312 0124 03       		.byte	0x3
 2313 0125 3A       		.byte	0x3a
 2314 0126 C8010000 		.4byte	0x1c8
 2315 012a 24       		.byte	0x24
 2316 012b 06       		.uleb128 0x6
 2317 012c FB040000 		.4byte	.LASF26
 2318 0130 03       		.byte	0x3
 2319 0131 3B       		.byte	0x3b
 2320 0132 DF010000 		.4byte	0x1df
 2321 0136 28       		.byte	0x28
 2322 0137 06       		.uleb128 0x6
 2323 0138 41030000 		.4byte	.LASF27
 2324 013c 03       		.byte	0x3
 2325 013d 3C       		.byte	0x3c
 2326 013e DF010000 		.4byte	0x1df
 2327 0142 2C       		.byte	0x2c
 2328 0143 06       		.uleb128 0x6
 2329 0144 F2070000 		.4byte	.LASF28
 2330 0148 03       		.byte	0x3
 2331 0149 3D       		.byte	0x3d
 2332 014a DF010000 		.4byte	0x1df
 2333 014e 30       		.byte	0x30
 2334 014f 06       		.uleb128 0x6
 2335 0150 9F070000 		.4byte	.LASF29
 2336 0154 03       		.byte	0x3
 2337 0155 3E       		.byte	0x3e
 2338 0156 C8010000 		.4byte	0x1c8
 2339 015a 34       		.byte	0x34
 2340 015b 06       		.uleb128 0x6
 2341 015c 96080000 		.4byte	.LASF30
 2342 0160 03       		.byte	0x3
 2343 0161 3F       		.byte	0x3f
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 92


 2344 0162 C8010000 		.4byte	0x1c8
 2345 0166 38       		.byte	0x38
 2346 0167 06       		.uleb128 0x6
 2347 0168 EC060000 		.4byte	.LASF31
 2348 016c 03       		.byte	0x3
 2349 016d 40       		.byte	0x40
 2350 016e CE010000 		.4byte	0x1ce
 2351 0172 3C       		.byte	0x3c
 2352 0173 06       		.uleb128 0x6
 2353 0174 FF090000 		.4byte	.LASF32
 2354 0178 03       		.byte	0x3
 2355 0179 41       		.byte	0x41
 2356 017a CE010000 		.4byte	0x1ce
 2357 017e 40       		.byte	0x40
 2358 017f 06       		.uleb128 0x6
 2359 0180 C6010000 		.4byte	.LASF33
 2360 0184 03       		.byte	0x3
 2361 0185 42       		.byte	0x42
 2362 0186 CE010000 		.4byte	0x1ce
 2363 018a 44       		.byte	0x44
 2364 018b 06       		.uleb128 0x6
 2365 018c CB000000 		.4byte	.LASF34
 2366 0190 03       		.byte	0x3
 2367 0191 43       		.byte	0x43
 2368 0192 F4010000 		.4byte	0x1f4
 2369 0196 48       		.byte	0x48
 2370 0197 06       		.uleb128 0x6
 2371 0198 8B080000 		.4byte	.LASF35
 2372 019c 03       		.byte	0x3
 2373 019d 44       		.byte	0x44
 2374 019e 05020000 		.4byte	0x205
 2375 01a2 4C       		.byte	0x4c
 2376 01a3 06       		.uleb128 0x6
 2377 01a4 29070000 		.4byte	.LASF36
 2378 01a8 03       		.byte	0x3
 2379 01a9 45       		.byte	0x45
 2380 01aa F4010000 		.4byte	0x1f4
 2381 01ae 50       		.byte	0x50
 2382 01af 06       		.uleb128 0x6
 2383 01b0 8A030000 		.4byte	.LASF37
 2384 01b4 03       		.byte	0x3
 2385 01b5 46       		.byte	0x46
 2386 01b6 1F020000 		.4byte	0x21f
 2387 01ba 54       		.byte	0x54
 2388 01bb 06       		.uleb128 0x6
 2389 01bc 82090000 		.4byte	.LASF38
 2390 01c0 03       		.byte	0x3
 2391 01c1 47       		.byte	0x47
 2392 01c2 3A020000 		.4byte	0x23a
 2393 01c6 58       		.byte	0x58
 2394 01c7 00       		.byte	0
 2395 01c8 07       		.uleb128 0x7
 2396 01c9 04       		.byte	0x4
 2397 01ca 6B000000 		.4byte	0x6b
 2398 01ce 07       		.uleb128 0x7
 2399 01cf 04       		.byte	0x4
 2400 01d0 D4010000 		.4byte	0x1d4
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 93


 2401 01d4 08       		.uleb128 0x8
 2402 01d5 6B000000 		.4byte	0x6b
 2403 01d9 07       		.uleb128 0x7
 2404 01da 04       		.byte	0x4
 2405 01db 83000000 		.4byte	0x83
 2406 01df 07       		.uleb128 0x7
 2407 01e0 04       		.byte	0x4
 2408 01e1 77000000 		.4byte	0x77
 2409 01e5 09       		.uleb128 0x9
 2410 01e6 77000000 		.4byte	0x77
 2411 01ea F4010000 		.4byte	0x1f4
 2412 01ee 0A       		.uleb128 0xa
 2413 01ef 83000000 		.4byte	0x83
 2414 01f3 00       		.byte	0
 2415 01f4 07       		.uleb128 0x7
 2416 01f5 04       		.byte	0x4
 2417 01f6 E5010000 		.4byte	0x1e5
 2418 01fa 0B       		.uleb128 0xb
 2419 01fb 05020000 		.4byte	0x205
 2420 01ff 0A       		.uleb128 0xa
 2421 0200 83000000 		.4byte	0x83
 2422 0204 00       		.byte	0
 2423 0205 07       		.uleb128 0x7
 2424 0206 04       		.byte	0x4
 2425 0207 FA010000 		.4byte	0x1fa
 2426 020b 09       		.uleb128 0x9
 2427 020c 83000000 		.4byte	0x83
 2428 0210 1F020000 		.4byte	0x21f
 2429 0214 0A       		.uleb128 0xa
 2430 0215 CE010000 		.4byte	0x1ce
 2431 0219 0A       		.uleb128 0xa
 2432 021a 83000000 		.4byte	0x83
 2433 021e 00       		.byte	0
 2434 021f 07       		.uleb128 0x7
 2435 0220 04       		.byte	0x4
 2436 0221 0B020000 		.4byte	0x20b
 2437 0225 0B       		.uleb128 0xb
 2438 0226 3A020000 		.4byte	0x23a
 2439 022a 0A       		.uleb128 0xa
 2440 022b C8010000 		.4byte	0x1c8
 2441 022f 0A       		.uleb128 0xa
 2442 0230 83000000 		.4byte	0x83
 2443 0234 0A       		.uleb128 0xa
 2444 0235 83000000 		.4byte	0x83
 2445 0239 00       		.byte	0
 2446 023a 07       		.uleb128 0x7
 2447 023b 04       		.byte	0x4
 2448 023c 25020000 		.4byte	0x225
 2449 0240 0C       		.uleb128 0xc
 2450 0241 D4040000 		.4byte	.LASF39
 2451 0245 03       		.byte	0x3
 2452 0246 48       		.byte	0x48
 2453 0247 AB000000 		.4byte	0xab
 2454 024b 05       		.uleb128 0x5
 2455 024c 0C       		.byte	0xc
 2456 024d 03       		.byte	0x3
 2457 024e 4A       		.byte	0x4a
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 94


 2458 024f 9C020000 		.4byte	0x29c
 2459 0253 06       		.uleb128 0x6
 2460 0254 B5080000 		.4byte	.LASF40
 2461 0258 03       		.byte	0x3
 2462 0259 4C       		.byte	0x4c
 2463 025a 6B000000 		.4byte	0x6b
 2464 025e 00       		.byte	0
 2465 025f 06       		.uleb128 0x6
 2466 0260 140A0000 		.4byte	.LASF41
 2467 0264 03       		.byte	0x3
 2468 0265 4D       		.byte	0x4d
 2469 0266 6B000000 		.4byte	0x6b
 2470 026a 01       		.byte	0x1
 2471 026b 06       		.uleb128 0x6
 2472 026c F6020000 		.4byte	.LASF42
 2473 0270 03       		.byte	0x3
 2474 0271 4E       		.byte	0x4e
 2475 0272 6B000000 		.4byte	0x6b
 2476 0276 02       		.byte	0x2
 2477 0277 06       		.uleb128 0x6
 2478 0278 E6020000 		.4byte	.LASF43
 2479 027c 03       		.byte	0x3
 2480 027d 4F       		.byte	0x4f
 2481 027e 77000000 		.4byte	0x77
 2482 0282 04       		.byte	0x4
 2483 0283 06       		.uleb128 0x6
 2484 0284 65050000 		.4byte	.LASF44
 2485 0288 03       		.byte	0x3
 2486 0289 50       		.byte	0x50
 2487 028a 77000000 		.4byte	0x77
 2488 028e 06       		.byte	0x6
 2489 028f 06       		.uleb128 0x6
 2490 0290 68040000 		.4byte	.LASF45
 2491 0294 03       		.byte	0x3
 2492 0295 51       		.byte	0x51
 2493 0296 9C020000 		.4byte	0x29c
 2494 029a 08       		.byte	0x8
 2495 029b 00       		.byte	0
 2496 029c 07       		.uleb128 0x7
 2497 029d 04       		.byte	0x4
 2498 029e A2020000 		.4byte	0x2a2
 2499 02a2 08       		.uleb128 0x8
 2500 02a3 40020000 		.4byte	0x240
 2501 02a7 0C       		.uleb128 0xc
 2502 02a8 E1090000 		.4byte	.LASF46
 2503 02ac 03       		.byte	0x3
 2504 02ad 52       		.byte	0x52
 2505 02ae 4B020000 		.4byte	0x24b
 2506 02b2 0D       		.uleb128 0xd
 2507 02b3 8D070000 		.4byte	.LASF47
 2508 02b7 01       		.byte	0x1
 2509 02b8 88       		.byte	0x88
 2510 02b9 00000000 		.4byte	.LFB36
 2511 02bd 84000000 		.4byte	.LFE36-.LFB36
 2512 02c1 01       		.uleb128 0x1
 2513 02c2 9C       		.byte	0x9c
 2514 02c3 E4020000 		.4byte	0x2e4
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 95


 2515 02c7 0E       		.uleb128 0xe
 2516 02c8 61040000 		.4byte	.LASF49
 2517 02cc 01       		.byte	0x1
 2518 02cd 88       		.byte	0x88
 2519 02ce 83000000 		.4byte	0x83
 2520 02d2 02       		.uleb128 0x2
 2521 02d3 91       		.byte	0x91
 2522 02d4 6C       		.sleb128 -20
 2523 02d5 0F       		.uleb128 0xf
 2524 02d6 6C070000 		.4byte	.LASF51
 2525 02da 01       		.byte	0x1
 2526 02db 8C       		.byte	0x8c
 2527 02dc 6B000000 		.4byte	0x6b
 2528 02e0 02       		.uleb128 0x2
 2529 02e1 91       		.byte	0x91
 2530 02e2 77       		.sleb128 -9
 2531 02e3 00       		.byte	0
 2532 02e4 10       		.uleb128 0x10
 2533 02e5 B5050000 		.4byte	.LASF48
 2534 02e9 01       		.byte	0x1
 2535 02ea D4       		.byte	0xd4
 2536 02eb 00000000 		.4byte	.LFB37
 2537 02ef 28000000 		.4byte	.LFE37-.LFB37
 2538 02f3 01       		.uleb128 0x1
 2539 02f4 9C       		.byte	0x9c
 2540 02f5 08030000 		.4byte	0x308
 2541 02f9 0E       		.uleb128 0xe
 2542 02fa 61040000 		.4byte	.LASF49
 2543 02fe 01       		.byte	0x1
 2544 02ff D4       		.byte	0xd4
 2545 0300 83000000 		.4byte	0x83
 2546 0304 02       		.uleb128 0x2
 2547 0305 91       		.byte	0x91
 2548 0306 74       		.sleb128 -12
 2549 0307 00       		.byte	0
 2550 0308 10       		.uleb128 0x10
 2551 0309 09070000 		.4byte	.LASF50
 2552 030d 01       		.byte	0x1
 2553 030e F9       		.byte	0xf9
 2554 030f 00000000 		.4byte	.LFB38
 2555 0313 26000000 		.4byte	.LFE38-.LFB38
 2556 0317 01       		.uleb128 0x1
 2557 0318 9C       		.byte	0x9c
 2558 0319 2A030000 		.4byte	0x32a
 2559 031d 11       		.uleb128 0x11
 2560 031e 6900     		.ascii	"i\000"
 2561 0320 01       		.byte	0x1
 2562 0321 FB       		.byte	0xfb
 2563 0322 83000000 		.4byte	0x83
 2564 0326 02       		.uleb128 0x2
 2565 0327 91       		.byte	0x91
 2566 0328 74       		.sleb128 -12
 2567 0329 00       		.byte	0
 2568 032a 12       		.uleb128 0x12
 2569 032b 48010000 		.4byte	.LASF52
 2570 032f 01       		.byte	0x1
 2571 0330 1C01     		.2byte	0x11c
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 96


 2572 0332 00000000 		.4byte	.LFB39
 2573 0336 50000000 		.4byte	.LFE39-.LFB39
 2574 033a 01       		.uleb128 0x1
 2575 033b 9C       		.byte	0x9c
 2576 033c 5D030000 		.4byte	0x35d
 2577 0340 13       		.uleb128 0x13
 2578 0341 6900     		.ascii	"i\000"
 2579 0343 01       		.byte	0x1
 2580 0344 1E01     		.2byte	0x11e
 2581 0346 83000000 		.4byte	0x83
 2582 034a 02       		.uleb128 0x2
 2583 034b 91       		.byte	0x91
 2584 034c 74       		.sleb128 -12
 2585 034d 14       		.uleb128 0x14
 2586 034e 7D070000 		.4byte	.LASF53
 2587 0352 01       		.byte	0x1
 2588 0353 1F01     		.2byte	0x11f
 2589 0355 83000000 		.4byte	0x83
 2590 0359 02       		.uleb128 0x2
 2591 035a 91       		.byte	0x91
 2592 035b 70       		.sleb128 -16
 2593 035c 00       		.byte	0
 2594 035d 12       		.uleb128 0x12
 2595 035e 92050000 		.4byte	.LASF54
 2596 0362 01       		.byte	0x1
 2597 0363 5D01     		.2byte	0x15d
 2598 0365 00000000 		.4byte	.LFB40
 2599 0369 38020000 		.4byte	.LFE40-.LFB40
 2600 036d 01       		.uleb128 0x1
 2601 036e 9C       		.byte	0x9c
 2602 036f DD030000 		.4byte	0x3dd
 2603 0373 15       		.uleb128 0x15
 2604 0374 61040000 		.4byte	.LASF49
 2605 0378 01       		.byte	0x1
 2606 0379 5D01     		.2byte	0x15d
 2607 037b 83000000 		.4byte	0x83
 2608 037f 02       		.uleb128 0x2
 2609 0380 91       		.byte	0x91
 2610 0381 5C       		.sleb128 -36
 2611 0382 14       		.uleb128 0x14
 2612 0383 C2040000 		.4byte	.LASF55
 2613 0387 01       		.byte	0x1
 2614 0388 5F01     		.2byte	0x15f
 2615 038a 83000000 		.4byte	0x83
 2616 038e 02       		.uleb128 0x2
 2617 038f 91       		.byte	0x91
 2618 0390 60       		.sleb128 -32
 2619 0391 14       		.uleb128 0x14
 2620 0392 A3080000 		.4byte	.LASF56
 2621 0396 01       		.byte	0x1
 2622 0397 6001     		.2byte	0x160
 2623 0399 83000000 		.4byte	0x83
 2624 039d 02       		.uleb128 0x2
 2625 039e 91       		.byte	0x91
 2626 039f 6C       		.sleb128 -20
 2627 03a0 14       		.uleb128 0x14
 2628 03a1 0C0A0000 		.4byte	.LASF57
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 97


 2629 03a5 01       		.byte	0x1
 2630 03a6 6101     		.2byte	0x161
 2631 03a8 77000000 		.4byte	0x77
 2632 03ac 02       		.uleb128 0x2
 2633 03ad 91       		.byte	0x91
 2634 03ae 6A       		.sleb128 -22
 2635 03af 14       		.uleb128 0x14
 2636 03b0 07000000 		.4byte	.LASF58
 2637 03b4 01       		.byte	0x1
 2638 03b5 6201     		.2byte	0x162
 2639 03b7 77000000 		.4byte	0x77
 2640 03bb 02       		.uleb128 0x2
 2641 03bc 91       		.byte	0x91
 2642 03bd 68       		.sleb128 -24
 2643 03be 14       		.uleb128 0x14
 2644 03bf 6C070000 		.4byte	.LASF51
 2645 03c3 01       		.byte	0x1
 2646 03c4 6301     		.2byte	0x163
 2647 03c6 6B000000 		.4byte	0x6b
 2648 03ca 02       		.uleb128 0x2
 2649 03cb 91       		.byte	0x91
 2650 03cc 67       		.sleb128 -25
 2651 03cd 14       		.uleb128 0x14
 2652 03ce 53070000 		.4byte	.LASF59
 2653 03d2 01       		.byte	0x1
 2654 03d3 6401     		.2byte	0x164
 2655 03d5 6B000000 		.4byte	0x6b
 2656 03d9 02       		.uleb128 0x2
 2657 03da 91       		.byte	0x91
 2658 03db 66       		.sleb128 -26
 2659 03dc 00       		.byte	0
 2660 03dd 12       		.uleb128 0x12
 2661 03de A4040000 		.4byte	.LASF60
 2662 03e2 01       		.byte	0x1
 2663 03e3 1D02     		.2byte	0x21d
 2664 03e5 00000000 		.4byte	.LFB41
 2665 03e9 1E000000 		.4byte	.LFE41-.LFB41
 2666 03ed 01       		.uleb128 0x1
 2667 03ee 9C       		.byte	0x9c
 2668 03ef 03040000 		.4byte	0x403
 2669 03f3 15       		.uleb128 0x15
 2670 03f4 61040000 		.4byte	.LASF49
 2671 03f8 01       		.byte	0x1
 2672 03f9 1D02     		.2byte	0x21d
 2673 03fb 83000000 		.4byte	0x83
 2674 03ff 02       		.uleb128 0x2
 2675 0400 91       		.byte	0x91
 2676 0401 74       		.sleb128 -12
 2677 0402 00       		.byte	0
 2678 0403 12       		.uleb128 0x12
 2679 0404 6C010000 		.4byte	.LASF61
 2680 0408 01       		.byte	0x1
 2681 0409 5302     		.2byte	0x253
 2682 040b 00000000 		.4byte	.LFB42
 2683 040f 40000000 		.4byte	.LFE42-.LFB42
 2684 0413 01       		.uleb128 0x1
 2685 0414 9C       		.byte	0x9c
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 98


 2686 0415 36040000 		.4byte	0x436
 2687 0419 13       		.uleb128 0x13
 2688 041a 6900     		.ascii	"i\000"
 2689 041c 01       		.byte	0x1
 2690 041d 5502     		.2byte	0x255
 2691 041f 83000000 		.4byte	0x83
 2692 0423 02       		.uleb128 0x2
 2693 0424 91       		.byte	0x91
 2694 0425 74       		.sleb128 -12
 2695 0426 14       		.uleb128 0x14
 2696 0427 7D070000 		.4byte	.LASF53
 2697 042b 01       		.byte	0x1
 2698 042c 5602     		.2byte	0x256
 2699 042e 83000000 		.4byte	0x83
 2700 0432 02       		.uleb128 0x2
 2701 0433 91       		.byte	0x91
 2702 0434 70       		.sleb128 -16
 2703 0435 00       		.byte	0
 2704 0436 12       		.uleb128 0x12
 2705 0437 AD000000 		.4byte	.LASF62
 2706 043b 01       		.byte	0x1
 2707 043c 8002     		.2byte	0x280
 2708 043e 00000000 		.4byte	.LFB43
 2709 0442 58000000 		.4byte	.LFE43-.LFB43
 2710 0446 01       		.uleb128 0x1
 2711 0447 9C       		.byte	0x9c
 2712 0448 A5040000 		.4byte	0x4a5
 2713 044c 15       		.uleb128 0x15
 2714 044d 6C070000 		.4byte	.LASF51
 2715 0451 01       		.byte	0x1
 2716 0452 8002     		.2byte	0x280
 2717 0454 83000000 		.4byte	0x83
 2718 0458 02       		.uleb128 0x2
 2719 0459 91       		.byte	0x91
 2720 045a 5C       		.sleb128 -36
 2721 045b 14       		.uleb128 0x14
 2722 045c A9070000 		.4byte	.LASF63
 2723 0460 01       		.byte	0x1
 2724 0461 8202     		.2byte	0x282
 2725 0463 83000000 		.4byte	0x83
 2726 0467 02       		.uleb128 0x2
 2727 0468 91       		.byte	0x91
 2728 0469 70       		.sleb128 -16
 2729 046a 14       		.uleb128 0x14
 2730 046b 55080000 		.4byte	.LASF64
 2731 046f 01       		.byte	0x1
 2732 0470 8302     		.2byte	0x283
 2733 0472 83000000 		.4byte	0x83
 2734 0476 02       		.uleb128 0x2
 2735 0477 91       		.byte	0x91
 2736 0478 6C       		.sleb128 -20
 2737 0479 14       		.uleb128 0x14
 2738 047a 29030000 		.4byte	.LASF65
 2739 047e 01       		.byte	0x1
 2740 047f 8402     		.2byte	0x284
 2741 0481 83000000 		.4byte	0x83
 2742 0485 02       		.uleb128 0x2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 99


 2743 0486 91       		.byte	0x91
 2744 0487 68       		.sleb128 -24
 2745 0488 13       		.uleb128 0x13
 2746 0489 6900     		.ascii	"i\000"
 2747 048b 01       		.byte	0x1
 2748 048c 8502     		.2byte	0x285
 2749 048e 83000000 		.4byte	0x83
 2750 0492 02       		.uleb128 0x2
 2751 0493 91       		.byte	0x91
 2752 0494 74       		.sleb128 -12
 2753 0495 14       		.uleb128 0x14
 2754 0496 7D070000 		.4byte	.LASF53
 2755 049a 01       		.byte	0x1
 2756 049b 8602     		.2byte	0x286
 2757 049d 83000000 		.4byte	0x83
 2758 04a1 02       		.uleb128 0x2
 2759 04a2 91       		.byte	0x91
 2760 04a3 64       		.sleb128 -28
 2761 04a4 00       		.byte	0
 2762 04a5 16       		.uleb128 0x16
 2763 04a6 FF010000 		.4byte	.LASF68
 2764 04aa 01       		.byte	0x1
 2765 04ab B102     		.2byte	0x2b1
 2766 04ad 77000000 		.4byte	0x77
 2767 04b1 00000000 		.4byte	.LFB44
 2768 04b5 1C000000 		.4byte	.LFE44-.LFB44
 2769 04b9 01       		.uleb128 0x1
 2770 04ba 9C       		.byte	0x9c
 2771 04bb CF040000 		.4byte	0x4cf
 2772 04bf 15       		.uleb128 0x15
 2773 04c0 61040000 		.4byte	.LASF49
 2774 04c4 01       		.byte	0x1
 2775 04c5 B102     		.2byte	0x2b1
 2776 04c7 83000000 		.4byte	0x83
 2777 04cb 02       		.uleb128 0x2
 2778 04cc 91       		.byte	0x91
 2779 04cd 74       		.sleb128 -12
 2780 04ce 00       		.byte	0
 2781 04cf 17       		.uleb128 0x17
 2782 04d0 3A070000 		.4byte	.LASF66
 2783 04d4 01       		.byte	0x1
 2784 04d5 CC02     		.2byte	0x2cc
 2785 04d7 00000000 		.4byte	.LFB45
 2786 04db 24000000 		.4byte	.LFE45-.LFB45
 2787 04df 01       		.uleb128 0x1
 2788 04e0 9C       		.byte	0x9c
 2789 04e1 04050000 		.4byte	0x504
 2790 04e5 15       		.uleb128 0x15
 2791 04e6 61040000 		.4byte	.LASF49
 2792 04ea 01       		.byte	0x1
 2793 04eb CC02     		.2byte	0x2cc
 2794 04ed 83000000 		.4byte	0x83
 2795 04f1 02       		.uleb128 0x2
 2796 04f2 91       		.byte	0x91
 2797 04f3 74       		.sleb128 -12
 2798 04f4 15       		.uleb128 0x15
 2799 04f5 AB030000 		.4byte	.LASF67
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 100


 2800 04f9 01       		.byte	0x1
 2801 04fa CC02     		.2byte	0x2cc
 2802 04fc 77000000 		.4byte	0x77
 2803 0500 02       		.uleb128 0x2
 2804 0501 91       		.byte	0x91
 2805 0502 72       		.sleb128 -14
 2806 0503 00       		.byte	0
 2807 0504 16       		.uleb128 0x16
 2808 0505 31050000 		.4byte	.LASF69
 2809 0509 01       		.byte	0x1
 2810 050a E702     		.2byte	0x2e7
 2811 050c 6B000000 		.4byte	0x6b
 2812 0510 00000000 		.4byte	.LFB46
 2813 0514 1C000000 		.4byte	.LFE46-.LFB46
 2814 0518 01       		.uleb128 0x1
 2815 0519 9C       		.byte	0x9c
 2816 051a 2E050000 		.4byte	0x52e
 2817 051e 15       		.uleb128 0x15
 2818 051f 61040000 		.4byte	.LASF49
 2819 0523 01       		.byte	0x1
 2820 0524 E702     		.2byte	0x2e7
 2821 0526 83000000 		.4byte	0x83
 2822 052a 02       		.uleb128 0x2
 2823 052b 91       		.byte	0x91
 2824 052c 74       		.sleb128 -12
 2825 052d 00       		.byte	0
 2826 052e 17       		.uleb128 0x17
 2827 052f 68090000 		.4byte	.LASF70
 2828 0533 01       		.byte	0x1
 2829 0534 0203     		.2byte	0x302
 2830 0536 00000000 		.4byte	.LFB47
 2831 053a 24000000 		.4byte	.LFE47-.LFB47
 2832 053e 01       		.uleb128 0x1
 2833 053f 9C       		.byte	0x9c
 2834 0540 63050000 		.4byte	0x563
 2835 0544 15       		.uleb128 0x15
 2836 0545 61040000 		.4byte	.LASF49
 2837 0549 01       		.byte	0x1
 2838 054a 0203     		.2byte	0x302
 2839 054c 83000000 		.4byte	0x83
 2840 0550 02       		.uleb128 0x2
 2841 0551 91       		.byte	0x91
 2842 0552 74       		.sleb128 -12
 2843 0553 15       		.uleb128 0x15
 2844 0554 06030000 		.4byte	.LASF71
 2845 0558 01       		.byte	0x1
 2846 0559 0203     		.2byte	0x302
 2847 055b 6B000000 		.4byte	0x6b
 2848 055f 02       		.uleb128 0x2
 2849 0560 91       		.byte	0x91
 2850 0561 73       		.sleb128 -13
 2851 0562 00       		.byte	0
 2852 0563 16       		.uleb128 0x16
 2853 0564 6F080000 		.4byte	.LASF72
 2854 0568 01       		.byte	0x1
 2855 0569 1D03     		.2byte	0x31d
 2856 056b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 101


 2857 056f 00000000 		.4byte	.LFB48
 2858 0573 1C000000 		.4byte	.LFE48-.LFB48
 2859 0577 01       		.uleb128 0x1
 2860 0578 9C       		.byte	0x9c
 2861 0579 8D050000 		.4byte	0x58d
 2862 057d 15       		.uleb128 0x15
 2863 057e 6C070000 		.4byte	.LASF51
 2864 0582 01       		.byte	0x1
 2865 0583 1D03     		.2byte	0x31d
 2866 0585 83000000 		.4byte	0x83
 2867 0589 02       		.uleb128 0x2
 2868 058a 91       		.byte	0x91
 2869 058b 74       		.sleb128 -12
 2870 058c 00       		.byte	0
 2871 058d 16       		.uleb128 0x16
 2872 058e 2D010000 		.4byte	.LASF73
 2873 0592 01       		.byte	0x1
 2874 0593 3803     		.2byte	0x338
 2875 0595 6B000000 		.4byte	0x6b
 2876 0599 00000000 		.4byte	.LFB49
 2877 059d 1C000000 		.4byte	.LFE49-.LFB49
 2878 05a1 01       		.uleb128 0x1
 2879 05a2 9C       		.byte	0x9c
 2880 05a3 B7050000 		.4byte	0x5b7
 2881 05a7 15       		.uleb128 0x15
 2882 05a8 6C070000 		.4byte	.LASF51
 2883 05ac 01       		.byte	0x1
 2884 05ad 3803     		.2byte	0x338
 2885 05af 83000000 		.4byte	0x83
 2886 05b3 02       		.uleb128 0x2
 2887 05b4 91       		.byte	0x91
 2888 05b5 74       		.sleb128 -12
 2889 05b6 00       		.byte	0
 2890 05b7 16       		.uleb128 0x16
 2891 05b8 38080000 		.4byte	.LASF74
 2892 05bc 01       		.byte	0x1
 2893 05bd 5403     		.2byte	0x354
 2894 05bf 6B000000 		.4byte	0x6b
 2895 05c3 00000000 		.4byte	.LFB50
 2896 05c7 1C000000 		.4byte	.LFE50-.LFB50
 2897 05cb 01       		.uleb128 0x1
 2898 05cc 9C       		.byte	0x9c
 2899 05cd E1050000 		.4byte	0x5e1
 2900 05d1 15       		.uleb128 0x15
 2901 05d2 6C070000 		.4byte	.LASF51
 2902 05d6 01       		.byte	0x1
 2903 05d7 5403     		.2byte	0x354
 2904 05d9 83000000 		.4byte	0x83
 2905 05dd 02       		.uleb128 0x2
 2906 05de 91       		.byte	0x91
 2907 05df 74       		.sleb128 -12
 2908 05e0 00       		.byte	0
 2909 05e1 16       		.uleb128 0x16
 2910 05e2 57000000 		.4byte	.LASF75
 2911 05e6 01       		.byte	0x1
 2912 05e7 7003     		.2byte	0x370
 2913 05e9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 102


 2914 05ed 00000000 		.4byte	.LFB51
 2915 05f1 1C000000 		.4byte	.LFE51-.LFB51
 2916 05f5 01       		.uleb128 0x1
 2917 05f6 9C       		.byte	0x9c
 2918 05f7 0B060000 		.4byte	0x60b
 2919 05fb 15       		.uleb128 0x15
 2920 05fc 6C070000 		.4byte	.LASF51
 2921 0600 01       		.byte	0x1
 2922 0601 7003     		.2byte	0x370
 2923 0603 83000000 		.4byte	0x83
 2924 0607 02       		.uleb128 0x2
 2925 0608 91       		.byte	0x91
 2926 0609 74       		.sleb128 -12
 2927 060a 00       		.byte	0
 2928 060b 17       		.uleb128 0x17
 2929 060c B5020000 		.4byte	.LASF76
 2930 0610 01       		.byte	0x1
 2931 0611 9103     		.2byte	0x391
 2932 0613 00000000 		.4byte	.LFB52
 2933 0617 24000000 		.4byte	.LFE52-.LFB52
 2934 061b 01       		.uleb128 0x1
 2935 061c 9C       		.byte	0x9c
 2936 061d 40060000 		.4byte	0x640
 2937 0621 15       		.uleb128 0x15
 2938 0622 6C070000 		.4byte	.LASF51
 2939 0626 01       		.byte	0x1
 2940 0627 9103     		.2byte	0x391
 2941 0629 83000000 		.4byte	0x83
 2942 062d 02       		.uleb128 0x2
 2943 062e 91       		.byte	0x91
 2944 062f 74       		.sleb128 -12
 2945 0630 15       		.uleb128 0x15
 2946 0631 06030000 		.4byte	.LASF71
 2947 0635 01       		.byte	0x1
 2948 0636 9103     		.2byte	0x391
 2949 0638 6B000000 		.4byte	0x6b
 2950 063c 02       		.uleb128 0x2
 2951 063d 91       		.byte	0x91
 2952 063e 73       		.sleb128 -13
 2953 063f 00       		.byte	0
 2954 0640 17       		.uleb128 0x17
 2955 0641 D7070000 		.4byte	.LASF77
 2956 0645 01       		.byte	0x1
 2957 0646 AD03     		.2byte	0x3ad
 2958 0648 00000000 		.4byte	.LFB53
 2959 064c 24000000 		.4byte	.LFE53-.LFB53
 2960 0650 01       		.uleb128 0x1
 2961 0651 9C       		.byte	0x9c
 2962 0652 75060000 		.4byte	0x675
 2963 0656 15       		.uleb128 0x15
 2964 0657 6C070000 		.4byte	.LASF51
 2965 065b 01       		.byte	0x1
 2966 065c AD03     		.2byte	0x3ad
 2967 065e 83000000 		.4byte	0x83
 2968 0662 02       		.uleb128 0x2
 2969 0663 91       		.byte	0x91
 2970 0664 74       		.sleb128 -12
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 103


 2971 0665 15       		.uleb128 0x15
 2972 0666 06030000 		.4byte	.LASF71
 2973 066a 01       		.byte	0x1
 2974 066b AD03     		.2byte	0x3ad
 2975 066d 6B000000 		.4byte	0x6b
 2976 0671 02       		.uleb128 0x2
 2977 0672 91       		.byte	0x91
 2978 0673 73       		.sleb128 -13
 2979 0674 00       		.byte	0
 2980 0675 17       		.uleb128 0x17
 2981 0676 D7050000 		.4byte	.LASF78
 2982 067a 01       		.byte	0x1
 2983 067b C903     		.2byte	0x3c9
 2984 067d 00000000 		.4byte	.LFB54
 2985 0681 24000000 		.4byte	.LFE54-.LFB54
 2986 0685 01       		.uleb128 0x1
 2987 0686 9C       		.byte	0x9c
 2988 0687 AA060000 		.4byte	0x6aa
 2989 068b 15       		.uleb128 0x15
 2990 068c 6C070000 		.4byte	.LASF51
 2991 0690 01       		.byte	0x1
 2992 0691 C903     		.2byte	0x3c9
 2993 0693 83000000 		.4byte	0x83
 2994 0697 02       		.uleb128 0x2
 2995 0698 91       		.byte	0x91
 2996 0699 74       		.sleb128 -12
 2997 069a 15       		.uleb128 0x15
 2998 069b 06030000 		.4byte	.LASF71
 2999 069f 01       		.byte	0x1
 3000 06a0 C903     		.2byte	0x3c9
 3001 06a2 6B000000 		.4byte	0x6b
 3002 06a6 02       		.uleb128 0x2
 3003 06a7 91       		.byte	0x91
 3004 06a8 73       		.sleb128 -13
 3005 06a9 00       		.byte	0
 3006 06aa 17       		.uleb128 0x17
 3007 06ab 8A000000 		.4byte	.LASF79
 3008 06af 01       		.byte	0x1
 3009 06b0 E603     		.2byte	0x3e6
 3010 06b2 00000000 		.4byte	.LFB55
 3011 06b6 24000000 		.4byte	.LFE55-.LFB55
 3012 06ba 01       		.uleb128 0x1
 3013 06bb 9C       		.byte	0x9c
 3014 06bc DF060000 		.4byte	0x6df
 3015 06c0 15       		.uleb128 0x15
 3016 06c1 6C070000 		.4byte	.LASF51
 3017 06c5 01       		.byte	0x1
 3018 06c6 E603     		.2byte	0x3e6
 3019 06c8 83000000 		.4byte	0x83
 3020 06cc 02       		.uleb128 0x2
 3021 06cd 91       		.byte	0x91
 3022 06ce 74       		.sleb128 -12
 3023 06cf 15       		.uleb128 0x15
 3024 06d0 06030000 		.4byte	.LASF71
 3025 06d4 01       		.byte	0x1
 3026 06d5 E603     		.2byte	0x3e6
 3027 06d7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 104


 3028 06db 02       		.uleb128 0x2
 3029 06dc 91       		.byte	0x91
 3030 06dd 73       		.sleb128 -13
 3031 06de 00       		.byte	0
 3032 06df 17       		.uleb128 0x17
 3033 06e0 D1020000 		.4byte	.LASF80
 3034 06e4 01       		.byte	0x1
 3035 06e5 0204     		.2byte	0x402
 3036 06e7 00000000 		.4byte	.LFB56
 3037 06eb 24000000 		.4byte	.LFE56-.LFB56
 3038 06ef 01       		.uleb128 0x1
 3039 06f0 9C       		.byte	0x9c
 3040 06f1 14070000 		.4byte	0x714
 3041 06f5 15       		.uleb128 0x15
 3042 06f6 6C070000 		.4byte	.LASF51
 3043 06fa 01       		.byte	0x1
 3044 06fb 0204     		.2byte	0x402
 3045 06fd 83000000 		.4byte	0x83
 3046 0701 02       		.uleb128 0x2
 3047 0702 91       		.byte	0x91
 3048 0703 74       		.sleb128 -12
 3049 0704 15       		.uleb128 0x15
 3050 0705 06030000 		.4byte	.LASF71
 3051 0709 01       		.byte	0x1
 3052 070a 0204     		.2byte	0x402
 3053 070c 6B000000 		.4byte	0x6b
 3054 0710 02       		.uleb128 0x2
 3055 0711 91       		.byte	0x91
 3056 0712 73       		.sleb128 -13
 3057 0713 00       		.byte	0
 3058 0714 17       		.uleb128 0x17
 3059 0715 0C030000 		.4byte	.LASF81
 3060 0719 01       		.byte	0x1
 3061 071a 1E04     		.2byte	0x41e
 3062 071c 00000000 		.4byte	.LFB57
 3063 0720 24000000 		.4byte	.LFE57-.LFB57
 3064 0724 01       		.uleb128 0x1
 3065 0725 9C       		.byte	0x9c
 3066 0726 49070000 		.4byte	0x749
 3067 072a 15       		.uleb128 0x15
 3068 072b 61040000 		.4byte	.LASF49
 3069 072f 01       		.byte	0x1
 3070 0730 1E04     		.2byte	0x41e
 3071 0732 83000000 		.4byte	0x83
 3072 0736 02       		.uleb128 0x2
 3073 0737 91       		.byte	0x91
 3074 0738 74       		.sleb128 -12
 3075 0739 15       		.uleb128 0x15
 3076 073a 06030000 		.4byte	.LASF71
 3077 073e 01       		.byte	0x1
 3078 073f 1E04     		.2byte	0x41e
 3079 0741 6B000000 		.4byte	0x6b
 3080 0745 02       		.uleb128 0x2
 3081 0746 91       		.byte	0x91
 3082 0747 73       		.sleb128 -13
 3083 0748 00       		.byte	0
 3084 0749 18       		.uleb128 0x18
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 105


 3085 074a F4050000 		.4byte	.LASF82
 3086 074e 01       		.byte	0x1
 3087 074f 4C04     		.2byte	0x44c
 3088 0751 83000000 		.4byte	0x83
 3089 0755 00000000 		.4byte	.LFB58
 3090 0759 34010000 		.4byte	.LFE58-.LFB58
 3091 075d 01       		.uleb128 0x1
 3092 075e 9C       		.byte	0x9c
 3093 075f BE070000 		.4byte	0x7be
 3094 0763 15       		.uleb128 0x15
 3095 0764 61040000 		.4byte	.LASF49
 3096 0768 01       		.byte	0x1
 3097 0769 4C04     		.2byte	0x44c
 3098 076b 83000000 		.4byte	0x83
 3099 076f 02       		.uleb128 0x2
 3100 0770 91       		.byte	0x91
 3101 0771 6C       		.sleb128 -20
 3102 0772 14       		.uleb128 0x14
 3103 0773 6C070000 		.4byte	.LASF51
 3104 0777 01       		.byte	0x1
 3105 0778 4E04     		.2byte	0x44e
 3106 077a 6B000000 		.4byte	0x6b
 3107 077e 02       		.uleb128 0x2
 3108 077f 91       		.byte	0x91
 3109 0780 77       		.sleb128 -9
 3110 0781 14       		.uleb128 0x14
 3111 0782 5C050000 		.4byte	.LASF83
 3112 0786 01       		.byte	0x1
 3113 0787 4F04     		.2byte	0x44f
 3114 0789 6B000000 		.4byte	0x6b
 3115 078d 02       		.uleb128 0x2
 3116 078e 91       		.byte	0x91
 3117 078f 74       		.sleb128 -12
 3118 0790 14       		.uleb128 0x14
 3119 0791 61080000 		.4byte	.LASF84
 3120 0795 01       		.byte	0x1
 3121 0796 5004     		.2byte	0x450
 3122 0798 6B000000 		.4byte	0x6b
 3123 079c 02       		.uleb128 0x2
 3124 079d 91       		.byte	0x91
 3125 079e 73       		.sleb128 -13
 3126 079f 14       		.uleb128 0x14
 3127 07a0 7A000000 		.4byte	.LASF85
 3128 07a4 01       		.byte	0x1
 3129 07a5 5204     		.2byte	0x452
 3130 07a7 6B000000 		.4byte	0x6b
 3131 07ab 02       		.uleb128 0x2
 3132 07ac 91       		.byte	0x91
 3133 07ad 76       		.sleb128 -10
 3134 07ae 14       		.uleb128 0x14
 3135 07af AA020000 		.4byte	.LASF86
 3136 07b3 01       		.byte	0x1
 3137 07b4 5304     		.2byte	0x453
 3138 07b6 6B000000 		.4byte	0x6b
 3139 07ba 02       		.uleb128 0x2
 3140 07bb 91       		.byte	0x91
 3141 07bc 75       		.sleb128 -11
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 106


 3142 07bd 00       		.byte	0
 3143 07be 18       		.uleb128 0x18
 3144 07bf AB060000 		.4byte	.LASF87
 3145 07c3 01       		.byte	0x1
 3146 07c4 9E04     		.2byte	0x49e
 3147 07c6 83000000 		.4byte	0x83
 3148 07ca 00000000 		.4byte	.LFB59
 3149 07ce 42000000 		.4byte	.LFE59-.LFB59
 3150 07d2 01       		.uleb128 0x1
 3151 07d3 9C       		.byte	0x9c
 3152 07d4 15080000 		.4byte	0x815
 3153 07d8 15       		.uleb128 0x15
 3154 07d9 6C070000 		.4byte	.LASF51
 3155 07dd 01       		.byte	0x1
 3156 07de 9E04     		.2byte	0x49e
 3157 07e0 83000000 		.4byte	0x83
 3158 07e4 02       		.uleb128 0x2
 3159 07e5 91       		.byte	0x91
 3160 07e6 64       		.sleb128 -28
 3161 07e7 14       		.uleb128 0x14
 3162 07e8 BD010000 		.4byte	.LASF88
 3163 07ec 01       		.byte	0x1
 3164 07ed A004     		.2byte	0x4a0
 3165 07ef 83000000 		.4byte	0x83
 3166 07f3 02       		.uleb128 0x2
 3167 07f4 91       		.byte	0x91
 3168 07f5 74       		.sleb128 -12
 3169 07f6 14       		.uleb128 0x14
 3170 07f7 A8080000 		.4byte	.LASF89
 3171 07fb 01       		.byte	0x1
 3172 07fc A104     		.2byte	0x4a1
 3173 07fe 83000000 		.4byte	0x83
 3174 0802 02       		.uleb128 0x2
 3175 0803 91       		.byte	0x91
 3176 0804 6C       		.sleb128 -20
 3177 0805 14       		.uleb128 0x14
 3178 0806 18020000 		.4byte	.LASF90
 3179 080a 01       		.byte	0x1
 3180 080b A204     		.2byte	0x4a2
 3181 080d 83000000 		.4byte	0x83
 3182 0811 02       		.uleb128 0x2
 3183 0812 91       		.byte	0x91
 3184 0813 70       		.sleb128 -16
 3185 0814 00       		.byte	0
 3186 0815 18       		.uleb128 0x18
 3187 0816 27020000 		.4byte	.LASF91
 3188 081a 01       		.byte	0x1
 3189 081b CC04     		.2byte	0x4cc
 3190 081d 83000000 		.4byte	0x83
 3191 0821 00000000 		.4byte	.LFB60
 3192 0825 36000000 		.4byte	.LFE60-.LFB60
 3193 0829 01       		.uleb128 0x1
 3194 082a 9C       		.byte	0x9c
 3195 082b 4C080000 		.4byte	0x84c
 3196 082f 13       		.uleb128 0x13
 3197 0830 6900     		.ascii	"i\000"
 3198 0832 01       		.byte	0x1
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 107


 3199 0833 CF04     		.2byte	0x4cf
 3200 0835 83000000 		.4byte	0x83
 3201 0839 02       		.uleb128 0x2
 3202 083a 91       		.byte	0x91
 3203 083b 74       		.sleb128 -12
 3204 083c 14       		.uleb128 0x14
 3205 083d 18020000 		.4byte	.LASF90
 3206 0841 01       		.byte	0x1
 3207 0842 D004     		.2byte	0x4d0
 3208 0844 83000000 		.4byte	0x83
 3209 0848 02       		.uleb128 0x2
 3210 0849 91       		.byte	0x91
 3211 084a 70       		.sleb128 -16
 3212 084b 00       		.byte	0
 3213 084c 12       		.uleb128 0x12
 3214 084d 7C050000 		.4byte	.LASF92
 3215 0851 01       		.byte	0x1
 3216 0852 FB04     		.2byte	0x4fb
 3217 0854 00000000 		.4byte	.LFB61
 3218 0858 5C000000 		.4byte	.LFE61-.LFB61
 3219 085c 01       		.uleb128 0x1
 3220 085d 9C       		.byte	0x9c
 3221 085e 90080000 		.4byte	0x890
 3222 0862 15       		.uleb128 0x15
 3223 0863 6C070000 		.4byte	.LASF51
 3224 0867 01       		.byte	0x1
 3225 0868 FB04     		.2byte	0x4fb
 3226 086a 83000000 		.4byte	0x83
 3227 086e 02       		.uleb128 0x2
 3228 086f 91       		.byte	0x91
 3229 0870 6C       		.sleb128 -20
 3230 0871 14       		.uleb128 0x14
 3231 0872 BD010000 		.4byte	.LASF88
 3232 0876 01       		.byte	0x1
 3233 0877 FE04     		.2byte	0x4fe
 3234 0879 6B000000 		.4byte	0x6b
 3235 087d 02       		.uleb128 0x2
 3236 087e 91       		.byte	0x91
 3237 087f 77       		.sleb128 -9
 3238 0880 14       		.uleb128 0x14
 3239 0881 A8080000 		.4byte	.LASF89
 3240 0885 01       		.byte	0x1
 3241 0886 FF04     		.2byte	0x4ff
 3242 0888 6B000000 		.4byte	0x6b
 3243 088c 02       		.uleb128 0x2
 3244 088d 91       		.byte	0x91
 3245 088e 76       		.sleb128 -10
 3246 088f 00       		.byte	0
 3247 0890 12       		.uleb128 0x12
 3248 0891 A6010000 		.4byte	.LASF93
 3249 0895 01       		.byte	0x1
 3250 0896 2605     		.2byte	0x526
 3251 0898 00000000 		.4byte	.LFB62
 3252 089c 5C000000 		.4byte	.LFE62-.LFB62
 3253 08a0 01       		.uleb128 0x1
 3254 08a1 9C       		.byte	0x9c
 3255 08a2 D4080000 		.4byte	0x8d4
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 108


 3256 08a6 15       		.uleb128 0x15
 3257 08a7 6C070000 		.4byte	.LASF51
 3258 08ab 01       		.byte	0x1
 3259 08ac 2605     		.2byte	0x526
 3260 08ae 83000000 		.4byte	0x83
 3261 08b2 02       		.uleb128 0x2
 3262 08b3 91       		.byte	0x91
 3263 08b4 6C       		.sleb128 -20
 3264 08b5 14       		.uleb128 0x14
 3265 08b6 BD010000 		.4byte	.LASF88
 3266 08ba 01       		.byte	0x1
 3267 08bb 2805     		.2byte	0x528
 3268 08bd 6B000000 		.4byte	0x6b
 3269 08c1 02       		.uleb128 0x2
 3270 08c2 91       		.byte	0x91
 3271 08c3 77       		.sleb128 -9
 3272 08c4 14       		.uleb128 0x14
 3273 08c5 A8080000 		.4byte	.LASF89
 3274 08c9 01       		.byte	0x1
 3275 08ca 2905     		.2byte	0x529
 3276 08cc 6B000000 		.4byte	0x6b
 3277 08d0 02       		.uleb128 0x2
 3278 08d1 91       		.byte	0x91
 3279 08d2 76       		.sleb128 -10
 3280 08d3 00       		.byte	0
 3281 08d4 16       		.uleb128 0x16
 3282 08d5 EA000000 		.4byte	.LASF94
 3283 08d9 01       		.byte	0x1
 3284 08da 4209     		.2byte	0x942
 3285 08dc 77000000 		.4byte	0x77
 3286 08e0 00000000 		.4byte	.LFB63
 3287 08e4 76000000 		.4byte	.LFE63-.LFB63
 3288 08e8 01       		.uleb128 0x1
 3289 08e9 9C       		.byte	0x9c
 3290 08ea 28090000 		.4byte	0x928
 3291 08ee 19       		.uleb128 0x19
 3292 08ef 783100   		.ascii	"x1\000"
 3293 08f2 01       		.byte	0x1
 3294 08f3 4209     		.2byte	0x942
 3295 08f5 77000000 		.4byte	0x77
 3296 08f9 02       		.uleb128 0x2
 3297 08fa 91       		.byte	0x91
 3298 08fb 66       		.sleb128 -26
 3299 08fc 19       		.uleb128 0x19
 3300 08fd 783200   		.ascii	"x2\000"
 3301 0900 01       		.byte	0x1
 3302 0901 4209     		.2byte	0x942
 3303 0903 77000000 		.4byte	0x77
 3304 0907 02       		.uleb128 0x2
 3305 0908 91       		.byte	0x91
 3306 0909 64       		.sleb128 -28
 3307 090a 19       		.uleb128 0x19
 3308 090b 783300   		.ascii	"x3\000"
 3309 090e 01       		.byte	0x1
 3310 090f 4209     		.2byte	0x942
 3311 0911 77000000 		.4byte	0x77
 3312 0915 02       		.uleb128 0x2
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 109


 3313 0916 91       		.byte	0x91
 3314 0917 62       		.sleb128 -30
 3315 0918 13       		.uleb128 0x13
 3316 0919 746D7000 		.ascii	"tmp\000"
 3317 091d 01       		.byte	0x1
 3318 091e 4409     		.2byte	0x944
 3319 0920 77000000 		.4byte	0x77
 3320 0924 02       		.uleb128 0x2
 3321 0925 91       		.byte	0x91
 3322 0926 6E       		.sleb128 -18
 3323 0927 00       		.byte	0
 3324 0928 16       		.uleb128 0x16
 3325 0929 D8060000 		.4byte	.LASF95
 3326 092d 01       		.byte	0x1
 3327 092e BA09     		.2byte	0x9ba
 3328 0930 77000000 		.4byte	0x77
 3329 0934 00000000 		.4byte	.LFB64
 3330 0938 3C000000 		.4byte	.LFE64-.LFB64
 3331 093c 01       		.uleb128 0x1
 3332 093d 9C       		.byte	0x9c
 3333 093e 6E090000 		.4byte	0x96e
 3334 0942 19       		.uleb128 0x19
 3335 0943 783100   		.ascii	"x1\000"
 3336 0946 01       		.byte	0x1
 3337 0947 BA09     		.2byte	0x9ba
 3338 0949 77000000 		.4byte	0x77
 3339 094d 02       		.uleb128 0x2
 3340 094e 91       		.byte	0x91
 3341 094f 6E       		.sleb128 -18
 3342 0950 19       		.uleb128 0x19
 3343 0951 783200   		.ascii	"x2\000"
 3344 0954 01       		.byte	0x1
 3345 0955 BA09     		.2byte	0x9ba
 3346 0957 77000000 		.4byte	0x77
 3347 095b 02       		.uleb128 0x2
 3348 095c 91       		.byte	0x91
 3349 095d 6C       		.sleb128 -20
 3350 095e 13       		.uleb128 0x13
 3351 095f 746D7000 		.ascii	"tmp\000"
 3352 0963 01       		.byte	0x1
 3353 0964 BC09     		.2byte	0x9bc
 3354 0966 83000000 		.4byte	0x83
 3355 096a 02       		.uleb128 0x2
 3356 096b 91       		.byte	0x91
 3357 096c 74       		.sleb128 -12
 3358 096d 00       		.byte	0
 3359 096e 16       		.uleb128 0x16
 3360 096f 91090000 		.4byte	.LASF96
 3361 0973 01       		.byte	0x1
 3362 0974 A30A     		.2byte	0xaa3
 3363 0976 83000000 		.4byte	0x83
 3364 097a 00000000 		.4byte	.LFB65
 3365 097e 1C000000 		.4byte	.LFE65-.LFB65
 3366 0982 01       		.uleb128 0x1
 3367 0983 9C       		.byte	0x9c
 3368 0984 98090000 		.4byte	0x998
 3369 0988 15       		.uleb128 0x15
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 110


 3370 0989 61040000 		.4byte	.LASF49
 3371 098d 01       		.byte	0x1
 3372 098e A30A     		.2byte	0xaa3
 3373 0990 83000000 		.4byte	0x83
 3374 0994 02       		.uleb128 0x2
 3375 0995 91       		.byte	0x91
 3376 0996 74       		.sleb128 -12
 3377 0997 00       		.byte	0
 3378 0998 16       		.uleb128 0x16
 3379 0999 8E060000 		.4byte	.LASF97
 3380 099d 01       		.byte	0x1
 3381 099e BD0A     		.2byte	0xabd
 3382 09a0 6B000000 		.4byte	0x6b
 3383 09a4 00000000 		.4byte	.LFB66
 3384 09a8 1C000000 		.4byte	.LFE66-.LFB66
 3385 09ac 01       		.uleb128 0x1
 3386 09ad 9C       		.byte	0x9c
 3387 09ae C2090000 		.4byte	0x9c2
 3388 09b2 15       		.uleb128 0x15
 3389 09b3 61040000 		.4byte	.LASF49
 3390 09b7 01       		.byte	0x1
 3391 09b8 BD0A     		.2byte	0xabd
 3392 09ba 83000000 		.4byte	0x83
 3393 09be 02       		.uleb128 0x2
 3394 09bf 91       		.byte	0x91
 3395 09c0 74       		.sleb128 -12
 3396 09c1 00       		.byte	0
 3397 09c2 16       		.uleb128 0x16
 3398 09c3 D5000000 		.4byte	.LASF98
 3399 09c7 01       		.byte	0x1
 3400 09c8 D70A     		.2byte	0xad7
 3401 09ca 6B000000 		.4byte	0x6b
 3402 09ce 00000000 		.4byte	.LFB67
 3403 09d2 1C000000 		.4byte	.LFE67-.LFB67
 3404 09d6 01       		.uleb128 0x1
 3405 09d7 9C       		.byte	0x9c
 3406 09d8 EC090000 		.4byte	0x9ec
 3407 09dc 15       		.uleb128 0x15
 3408 09dd 6C070000 		.4byte	.LASF51
 3409 09e1 01       		.byte	0x1
 3410 09e2 D70A     		.2byte	0xad7
 3411 09e4 83000000 		.4byte	0x83
 3412 09e8 02       		.uleb128 0x2
 3413 09e9 91       		.byte	0x91
 3414 09ea 74       		.sleb128 -12
 3415 09eb 00       		.byte	0
 3416 09ec 1A       		.uleb128 0x1a
 3417 09ed AA090000 		.4byte	.LASF99
 3418 09f1 01       		.byte	0x1
 3419 09f2 F10A     		.2byte	0xaf1
 3420 09f4 00000000 		.4byte	.LFB68
 3421 09f8 14000000 		.4byte	.LFE68-.LFB68
 3422 09fc 01       		.uleb128 0x1
 3423 09fd 9C       		.byte	0x9c
 3424 09fe 1A       		.uleb128 0x1a
 3425 09ff 67020000 		.4byte	.LASF100
 3426 0a03 01       		.byte	0x1
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 111


 3427 0a04 0A0B     		.2byte	0xb0a
 3428 0a06 00000000 		.4byte	.LFB69
 3429 0a0a 14000000 		.4byte	.LFE69-.LFB69
 3430 0a0e 01       		.uleb128 0x1
 3431 0a0f 9C       		.byte	0x9c
 3432 0a10 1B       		.uleb128 0x1b
 3433 0a11 6B000000 		.4byte	0x6b
 3434 0a15 200A0000 		.4byte	0xa20
 3435 0a19 1C       		.uleb128 0x1c
 3436 0a1a A4000000 		.4byte	0xa4
 3437 0a1e 01       		.byte	0x1
 3438 0a1f 00       		.byte	0
 3439 0a20 0F       		.uleb128 0xf
 3440 0a21 C8090000 		.4byte	.LASF101
 3441 0a25 01       		.byte	0x1
 3442 0a26 57       		.byte	0x57
 3443 0a27 100A0000 		.4byte	0xa10
 3444 0a2b 05       		.uleb128 0x5
 3445 0a2c 03       		.byte	0x3
 3446 0a2d 10000000 		.4byte	CapSense_debounceCounter
 3447 0a31 1B       		.uleb128 0x1b
 3448 0a32 77000000 		.4byte	0x77
 3449 0a36 410A0000 		.4byte	0xa41
 3450 0a3a 1C       		.uleb128 0x1c
 3451 0a3b A4000000 		.4byte	0xa4
 3452 0a3f 00       		.byte	0
 3453 0a40 00       		.byte	0
 3454 0a41 1D       		.uleb128 0x1d
 3455 0a42 55090000 		.4byte	.LASF102
 3456 0a46 01       		.byte	0x1
 3457 0a47 2C       		.byte	0x2c
 3458 0a48 310A0000 		.4byte	0xa31
 3459 0a4c 1B       		.uleb128 0x1b
 3460 0a4d 6B000000 		.4byte	0x6b
 3461 0a51 5C0A0000 		.4byte	0xa5c
 3462 0a55 1C       		.uleb128 0x1c
 3463 0a56 A4000000 		.4byte	0xa4
 3464 0a5a 00       		.byte	0
 3465 0a5b 00       		.byte	0
 3466 0a5c 1D       		.uleb128 0x1d
 3467 0a5d 71040000 		.4byte	.LASF103
 3468 0a61 01       		.byte	0x1
 3469 0a62 2D       		.byte	0x2d
 3470 0a63 4C0A0000 		.4byte	0xa4c
 3471 0a67 1D       		.uleb128 0x1d
 3472 0a68 8D020000 		.4byte	.LASF104
 3473 0a6c 01       		.byte	0x1
 3474 0a6d 2E       		.byte	0x2e
 3475 0a6e 720A0000 		.4byte	0xa72
 3476 0a72 08       		.uleb128 0x8
 3477 0a73 4C0A0000 		.4byte	0xa4c
 3478 0a77 1E       		.uleb128 0x1e
 3479 0a78 D6010000 		.4byte	.LASF105
 3480 0a7c 01       		.byte	0x1
 3481 0a7d 34       		.byte	0x34
 3482 0a7e 310A0000 		.4byte	0xa31
 3483 0a82 05       		.uleb128 0x5
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 112


 3484 0a83 03       		.byte	0x3
 3485 0a84 00000000 		.4byte	CapSense_sensorBaseline
 3486 0a88 1E       		.uleb128 0x1e
 3487 0a89 60030000 		.4byte	.LASF106
 3488 0a8d 01       		.byte	0x1
 3489 0a8e 35       		.byte	0x35
 3490 0a8f 4C0A0000 		.4byte	0xa4c
 3491 0a93 05       		.uleb128 0x5
 3492 0a94 03       		.byte	0x3
 3493 0a95 00000000 		.4byte	CapSense_sensorBaselineLow
 3494 0a99 1E       		.uleb128 0x1e
 3495 0a9a 17010000 		.4byte	.LASF107
 3496 0a9e 01       		.byte	0x1
 3497 0a9f 36       		.byte	0x36
 3498 0aa0 4C0A0000 		.4byte	0xa4c
 3499 0aa4 05       		.uleb128 0x5
 3500 0aa5 03       		.byte	0x3
 3501 0aa6 00000000 		.4byte	CapSense_sensorSignal
 3502 0aaa 1E       		.uleb128 0x1e
 3503 0aab 41000000 		.4byte	.LASF108
 3504 0aaf 01       		.byte	0x1
 3505 0ab0 37       		.byte	0x37
 3506 0ab1 4C0A0000 		.4byte	0xa4c
 3507 0ab5 05       		.uleb128 0x5
 3508 0ab6 03       		.byte	0x3
 3509 0ab7 00000000 		.4byte	CapSense_sensorOnMask
 3510 0abb 1E       		.uleb128 0x1e
 3511 0abc BA070000 		.4byte	.LASF109
 3512 0ac0 01       		.byte	0x1
 3513 0ac1 39       		.byte	0x39
 3514 0ac2 4C0A0000 		.4byte	0xa4c
 3515 0ac6 05       		.uleb128 0x5
 3516 0ac7 03       		.byte	0x3
 3517 0ac8 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3518 0acc 1E       		.uleb128 0x1e
 3519 0acd 4D020000 		.4byte	.LASF110
 3520 0ad1 01       		.byte	0x1
 3521 0ad2 3A       		.byte	0x3a
 3522 0ad3 4C0A0000 		.4byte	0xa4c
 3523 0ad7 05       		.uleb128 0x5
 3524 0ad8 03       		.byte	0x3
 3525 0ad9 00000000 		.4byte	CapSense_lowBaselineReset
 3526 0add 1E       		.uleb128 0x1e
 3527 0ade 47060000 		.4byte	.LASF111
 3528 0ae2 01       		.byte	0x1
 3529 0ae3 49       		.byte	0x49
 3530 0ae4 4C0A0000 		.4byte	0xa4c
 3531 0ae8 05       		.uleb128 0x5
 3532 0ae9 03       		.byte	0x3
 3533 0aea 00000000 		.4byte	CapSense_fingerThreshold
 3534 0aee 1E       		.uleb128 0x1e
 3535 0aef 2F060000 		.4byte	.LASF112
 3536 0af3 01       		.byte	0x1
 3537 0af4 4D       		.byte	0x4d
 3538 0af5 4C0A0000 		.4byte	0xa4c
 3539 0af9 05       		.uleb128 0x5
 3540 0afa 03       		.byte	0x3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 113


 3541 0afb 00000000 		.4byte	CapSense_noiseThreshold
 3542 0aff 1E       		.uleb128 0x1e
 3543 0b00 240A0000 		.4byte	.LASF113
 3544 0b04 01       		.byte	0x1
 3545 0b05 4F       		.byte	0x4f
 3546 0b06 4C0A0000 		.4byte	0xa4c
 3547 0b0a 05       		.uleb128 0x5
 3548 0b0b 03       		.byte	0x3
 3549 0b0c 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3550 0b10 1E       		.uleb128 0x1e
 3551 0b11 17000000 		.4byte	.LASF114
 3552 0b15 01       		.byte	0x1
 3553 0b16 51       		.byte	0x51
 3554 0b17 4C0A0000 		.4byte	0xa4c
 3555 0b1b 05       		.uleb128 0x5
 3556 0b1c 03       		.byte	0x3
 3557 0b1d 00000000 		.4byte	CapSense_hysteresis
 3558 0b21 1E       		.uleb128 0x1e
 3559 0b22 99030000 		.4byte	.LASF115
 3560 0b26 01       		.byte	0x1
 3561 0b27 53       		.byte	0x53
 3562 0b28 4C0A0000 		.4byte	0xa4c
 3563 0b2c 05       		.uleb128 0x5
 3564 0b2d 03       		.byte	0x3
 3565 0b2e 00000000 		.4byte	CapSense_debounce
 3566 0b32 1E       		.uleb128 0x1e
 3567 0b33 2B000000 		.4byte	.LASF116
 3568 0b37 01       		.byte	0x1
 3569 0b38 5B       		.byte	0x5b
 3570 0b39 430B0000 		.4byte	0xb43
 3571 0b3d 05       		.uleb128 0x5
 3572 0b3e 03       		.byte	0x3
 3573 0b3f 00000000 		.4byte	CapSense_rawDataIndex
 3574 0b43 08       		.uleb128 0x8
 3575 0b44 4C0A0000 		.4byte	0xa4c
 3576 0b48 1E       		.uleb128 0x1e
 3577 0b49 8B040000 		.4byte	.LASF117
 3578 0b4d 01       		.byte	0x1
 3579 0b4e 5F       		.byte	0x5f
 3580 0b4f 590B0000 		.4byte	0xb59
 3581 0b53 05       		.uleb128 0x5
 3582 0b54 03       		.byte	0x3
 3583 0b55 00000000 		.4byte	CapSense_numberOfSensors
 3584 0b59 08       		.uleb128 0x8
 3585 0b5a 4C0A0000 		.4byte	0xa4c
 3586 0b5e 1E       		.uleb128 0x1e
 3587 0b5f 60060000 		.4byte	.LASF118
 3588 0b63 01       		.byte	0x1
 3589 0b64 27       		.byte	0x27
 3590 0b65 310A0000 		.4byte	0xa31
 3591 0b69 05       		.uleb128 0x5
 3592 0b6a 03       		.byte	0x3
 3593 0b6b 00000000 		.4byte	CapSense_rawFilterData1
 3594 0b6f 1D       		.uleb128 0x1d
 3595 0b70 78060000 		.4byte	.LASF119
 3596 0b74 01       		.byte	0x1
 3597 0b75 41       		.byte	0x41
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 114


 3598 0b76 A7020000 		.4byte	0x2a7
 3599 0b7a 1E       		.uleb128 0x1e
 3600 0b7b 1E080000 		.4byte	.LASF120
 3601 0b7f 01       		.byte	0x1
 3602 0b80 45       		.byte	0x45
 3603 0b81 6B000000 		.4byte	0x6b
 3604 0b85 05       		.uleb128 0x5
 3605 0b86 03       		.byte	0x3
 3606 0b87 00000000 		.4byte	CapSense_enableRawFilters
 3607 0b8b 00       		.byte	0
 3608              		.section	.debug_abbrev,"",%progbits
 3609              	.Ldebug_abbrev0:
 3610 0000 01       		.uleb128 0x1
 3611 0001 11       		.uleb128 0x11
 3612 0002 01       		.byte	0x1
 3613 0003 25       		.uleb128 0x25
 3614 0004 0E       		.uleb128 0xe
 3615 0005 13       		.uleb128 0x13
 3616 0006 0B       		.uleb128 0xb
 3617 0007 03       		.uleb128 0x3
 3618 0008 0E       		.uleb128 0xe
 3619 0009 1B       		.uleb128 0x1b
 3620 000a 0E       		.uleb128 0xe
 3621 000b 55       		.uleb128 0x55
 3622 000c 17       		.uleb128 0x17
 3623 000d 11       		.uleb128 0x11
 3624 000e 01       		.uleb128 0x1
 3625 000f 10       		.uleb128 0x10
 3626 0010 17       		.uleb128 0x17
 3627 0011 00       		.byte	0
 3628 0012 00       		.byte	0
 3629 0013 02       		.uleb128 0x2
 3630 0014 24       		.uleb128 0x24
 3631 0015 00       		.byte	0
 3632 0016 0B       		.uleb128 0xb
 3633 0017 0B       		.uleb128 0xb
 3634 0018 3E       		.uleb128 0x3e
 3635 0019 0B       		.uleb128 0xb
 3636 001a 03       		.uleb128 0x3
 3637 001b 0E       		.uleb128 0xe
 3638 001c 00       		.byte	0
 3639 001d 00       		.byte	0
 3640 001e 03       		.uleb128 0x3
 3641 001f 24       		.uleb128 0x24
 3642 0020 00       		.byte	0
 3643 0021 0B       		.uleb128 0xb
 3644 0022 0B       		.uleb128 0xb
 3645 0023 3E       		.uleb128 0x3e
 3646 0024 0B       		.uleb128 0xb
 3647 0025 03       		.uleb128 0x3
 3648 0026 08       		.uleb128 0x8
 3649 0027 00       		.byte	0
 3650 0028 00       		.byte	0
 3651 0029 04       		.uleb128 0x4
 3652 002a 16       		.uleb128 0x16
 3653 002b 00       		.byte	0
 3654 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 115


 3655 002d 0E       		.uleb128 0xe
 3656 002e 3A       		.uleb128 0x3a
 3657 002f 0B       		.uleb128 0xb
 3658 0030 3B       		.uleb128 0x3b
 3659 0031 05       		.uleb128 0x5
 3660 0032 49       		.uleb128 0x49
 3661 0033 13       		.uleb128 0x13
 3662 0034 00       		.byte	0
 3663 0035 00       		.byte	0
 3664 0036 05       		.uleb128 0x5
 3665 0037 13       		.uleb128 0x13
 3666 0038 01       		.byte	0x1
 3667 0039 0B       		.uleb128 0xb
 3668 003a 0B       		.uleb128 0xb
 3669 003b 3A       		.uleb128 0x3a
 3670 003c 0B       		.uleb128 0xb
 3671 003d 3B       		.uleb128 0x3b
 3672 003e 0B       		.uleb128 0xb
 3673 003f 01       		.uleb128 0x1
 3674 0040 13       		.uleb128 0x13
 3675 0041 00       		.byte	0
 3676 0042 00       		.byte	0
 3677 0043 06       		.uleb128 0x6
 3678 0044 0D       		.uleb128 0xd
 3679 0045 00       		.byte	0
 3680 0046 03       		.uleb128 0x3
 3681 0047 0E       		.uleb128 0xe
 3682 0048 3A       		.uleb128 0x3a
 3683 0049 0B       		.uleb128 0xb
 3684 004a 3B       		.uleb128 0x3b
 3685 004b 0B       		.uleb128 0xb
 3686 004c 49       		.uleb128 0x49
 3687 004d 13       		.uleb128 0x13
 3688 004e 38       		.uleb128 0x38
 3689 004f 0B       		.uleb128 0xb
 3690 0050 00       		.byte	0
 3691 0051 00       		.byte	0
 3692 0052 07       		.uleb128 0x7
 3693 0053 0F       		.uleb128 0xf
 3694 0054 00       		.byte	0
 3695 0055 0B       		.uleb128 0xb
 3696 0056 0B       		.uleb128 0xb
 3697 0057 49       		.uleb128 0x49
 3698 0058 13       		.uleb128 0x13
 3699 0059 00       		.byte	0
 3700 005a 00       		.byte	0
 3701 005b 08       		.uleb128 0x8
 3702 005c 26       		.uleb128 0x26
 3703 005d 00       		.byte	0
 3704 005e 49       		.uleb128 0x49
 3705 005f 13       		.uleb128 0x13
 3706 0060 00       		.byte	0
 3707 0061 00       		.byte	0
 3708 0062 09       		.uleb128 0x9
 3709 0063 15       		.uleb128 0x15
 3710 0064 01       		.byte	0x1
 3711 0065 27       		.uleb128 0x27
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 116


 3712 0066 19       		.uleb128 0x19
 3713 0067 49       		.uleb128 0x49
 3714 0068 13       		.uleb128 0x13
 3715 0069 01       		.uleb128 0x1
 3716 006a 13       		.uleb128 0x13
 3717 006b 00       		.byte	0
 3718 006c 00       		.byte	0
 3719 006d 0A       		.uleb128 0xa
 3720 006e 05       		.uleb128 0x5
 3721 006f 00       		.byte	0
 3722 0070 49       		.uleb128 0x49
 3723 0071 13       		.uleb128 0x13
 3724 0072 00       		.byte	0
 3725 0073 00       		.byte	0
 3726 0074 0B       		.uleb128 0xb
 3727 0075 15       		.uleb128 0x15
 3728 0076 01       		.byte	0x1
 3729 0077 27       		.uleb128 0x27
 3730 0078 19       		.uleb128 0x19
 3731 0079 01       		.uleb128 0x1
 3732 007a 13       		.uleb128 0x13
 3733 007b 00       		.byte	0
 3734 007c 00       		.byte	0
 3735 007d 0C       		.uleb128 0xc
 3736 007e 16       		.uleb128 0x16
 3737 007f 00       		.byte	0
 3738 0080 03       		.uleb128 0x3
 3739 0081 0E       		.uleb128 0xe
 3740 0082 3A       		.uleb128 0x3a
 3741 0083 0B       		.uleb128 0xb
 3742 0084 3B       		.uleb128 0x3b
 3743 0085 0B       		.uleb128 0xb
 3744 0086 49       		.uleb128 0x49
 3745 0087 13       		.uleb128 0x13
 3746 0088 00       		.byte	0
 3747 0089 00       		.byte	0
 3748 008a 0D       		.uleb128 0xd
 3749 008b 2E       		.uleb128 0x2e
 3750 008c 01       		.byte	0x1
 3751 008d 3F       		.uleb128 0x3f
 3752 008e 19       		.uleb128 0x19
 3753 008f 03       		.uleb128 0x3
 3754 0090 0E       		.uleb128 0xe
 3755 0091 3A       		.uleb128 0x3a
 3756 0092 0B       		.uleb128 0xb
 3757 0093 3B       		.uleb128 0x3b
 3758 0094 0B       		.uleb128 0xb
 3759 0095 27       		.uleb128 0x27
 3760 0096 19       		.uleb128 0x19
 3761 0097 11       		.uleb128 0x11
 3762 0098 01       		.uleb128 0x1
 3763 0099 12       		.uleb128 0x12
 3764 009a 06       		.uleb128 0x6
 3765 009b 40       		.uleb128 0x40
 3766 009c 18       		.uleb128 0x18
 3767 009d 9742     		.uleb128 0x2117
 3768 009f 19       		.uleb128 0x19
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 117


 3769 00a0 01       		.uleb128 0x1
 3770 00a1 13       		.uleb128 0x13
 3771 00a2 00       		.byte	0
 3772 00a3 00       		.byte	0
 3773 00a4 0E       		.uleb128 0xe
 3774 00a5 05       		.uleb128 0x5
 3775 00a6 00       		.byte	0
 3776 00a7 03       		.uleb128 0x3
 3777 00a8 0E       		.uleb128 0xe
 3778 00a9 3A       		.uleb128 0x3a
 3779 00aa 0B       		.uleb128 0xb
 3780 00ab 3B       		.uleb128 0x3b
 3781 00ac 0B       		.uleb128 0xb
 3782 00ad 49       		.uleb128 0x49
 3783 00ae 13       		.uleb128 0x13
 3784 00af 02       		.uleb128 0x2
 3785 00b0 18       		.uleb128 0x18
 3786 00b1 00       		.byte	0
 3787 00b2 00       		.byte	0
 3788 00b3 0F       		.uleb128 0xf
 3789 00b4 34       		.uleb128 0x34
 3790 00b5 00       		.byte	0
 3791 00b6 03       		.uleb128 0x3
 3792 00b7 0E       		.uleb128 0xe
 3793 00b8 3A       		.uleb128 0x3a
 3794 00b9 0B       		.uleb128 0xb
 3795 00ba 3B       		.uleb128 0x3b
 3796 00bb 0B       		.uleb128 0xb
 3797 00bc 49       		.uleb128 0x49
 3798 00bd 13       		.uleb128 0x13
 3799 00be 02       		.uleb128 0x2
 3800 00bf 18       		.uleb128 0x18
 3801 00c0 00       		.byte	0
 3802 00c1 00       		.byte	0
 3803 00c2 10       		.uleb128 0x10
 3804 00c3 2E       		.uleb128 0x2e
 3805 00c4 01       		.byte	0x1
 3806 00c5 3F       		.uleb128 0x3f
 3807 00c6 19       		.uleb128 0x19
 3808 00c7 03       		.uleb128 0x3
 3809 00c8 0E       		.uleb128 0xe
 3810 00c9 3A       		.uleb128 0x3a
 3811 00ca 0B       		.uleb128 0xb
 3812 00cb 3B       		.uleb128 0x3b
 3813 00cc 0B       		.uleb128 0xb
 3814 00cd 27       		.uleb128 0x27
 3815 00ce 19       		.uleb128 0x19
 3816 00cf 11       		.uleb128 0x11
 3817 00d0 01       		.uleb128 0x1
 3818 00d1 12       		.uleb128 0x12
 3819 00d2 06       		.uleb128 0x6
 3820 00d3 40       		.uleb128 0x40
 3821 00d4 18       		.uleb128 0x18
 3822 00d5 9642     		.uleb128 0x2116
 3823 00d7 19       		.uleb128 0x19
 3824 00d8 01       		.uleb128 0x1
 3825 00d9 13       		.uleb128 0x13
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 118


 3826 00da 00       		.byte	0
 3827 00db 00       		.byte	0
 3828 00dc 11       		.uleb128 0x11
 3829 00dd 34       		.uleb128 0x34
 3830 00de 00       		.byte	0
 3831 00df 03       		.uleb128 0x3
 3832 00e0 08       		.uleb128 0x8
 3833 00e1 3A       		.uleb128 0x3a
 3834 00e2 0B       		.uleb128 0xb
 3835 00e3 3B       		.uleb128 0x3b
 3836 00e4 0B       		.uleb128 0xb
 3837 00e5 49       		.uleb128 0x49
 3838 00e6 13       		.uleb128 0x13
 3839 00e7 02       		.uleb128 0x2
 3840 00e8 18       		.uleb128 0x18
 3841 00e9 00       		.byte	0
 3842 00ea 00       		.byte	0
 3843 00eb 12       		.uleb128 0x12
 3844 00ec 2E       		.uleb128 0x2e
 3845 00ed 01       		.byte	0x1
 3846 00ee 3F       		.uleb128 0x3f
 3847 00ef 19       		.uleb128 0x19
 3848 00f0 03       		.uleb128 0x3
 3849 00f1 0E       		.uleb128 0xe
 3850 00f2 3A       		.uleb128 0x3a
 3851 00f3 0B       		.uleb128 0xb
 3852 00f4 3B       		.uleb128 0x3b
 3853 00f5 05       		.uleb128 0x5
 3854 00f6 27       		.uleb128 0x27
 3855 00f7 19       		.uleb128 0x19
 3856 00f8 11       		.uleb128 0x11
 3857 00f9 01       		.uleb128 0x1
 3858 00fa 12       		.uleb128 0x12
 3859 00fb 06       		.uleb128 0x6
 3860 00fc 40       		.uleb128 0x40
 3861 00fd 18       		.uleb128 0x18
 3862 00fe 9642     		.uleb128 0x2116
 3863 0100 19       		.uleb128 0x19
 3864 0101 01       		.uleb128 0x1
 3865 0102 13       		.uleb128 0x13
 3866 0103 00       		.byte	0
 3867 0104 00       		.byte	0
 3868 0105 13       		.uleb128 0x13
 3869 0106 34       		.uleb128 0x34
 3870 0107 00       		.byte	0
 3871 0108 03       		.uleb128 0x3
 3872 0109 08       		.uleb128 0x8
 3873 010a 3A       		.uleb128 0x3a
 3874 010b 0B       		.uleb128 0xb
 3875 010c 3B       		.uleb128 0x3b
 3876 010d 05       		.uleb128 0x5
 3877 010e 49       		.uleb128 0x49
 3878 010f 13       		.uleb128 0x13
 3879 0110 02       		.uleb128 0x2
 3880 0111 18       		.uleb128 0x18
 3881 0112 00       		.byte	0
 3882 0113 00       		.byte	0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 119


 3883 0114 14       		.uleb128 0x14
 3884 0115 34       		.uleb128 0x34
 3885 0116 00       		.byte	0
 3886 0117 03       		.uleb128 0x3
 3887 0118 0E       		.uleb128 0xe
 3888 0119 3A       		.uleb128 0x3a
 3889 011a 0B       		.uleb128 0xb
 3890 011b 3B       		.uleb128 0x3b
 3891 011c 05       		.uleb128 0x5
 3892 011d 49       		.uleb128 0x49
 3893 011e 13       		.uleb128 0x13
 3894 011f 02       		.uleb128 0x2
 3895 0120 18       		.uleb128 0x18
 3896 0121 00       		.byte	0
 3897 0122 00       		.byte	0
 3898 0123 15       		.uleb128 0x15
 3899 0124 05       		.uleb128 0x5
 3900 0125 00       		.byte	0
 3901 0126 03       		.uleb128 0x3
 3902 0127 0E       		.uleb128 0xe
 3903 0128 3A       		.uleb128 0x3a
 3904 0129 0B       		.uleb128 0xb
 3905 012a 3B       		.uleb128 0x3b
 3906 012b 05       		.uleb128 0x5
 3907 012c 49       		.uleb128 0x49
 3908 012d 13       		.uleb128 0x13
 3909 012e 02       		.uleb128 0x2
 3910 012f 18       		.uleb128 0x18
 3911 0130 00       		.byte	0
 3912 0131 00       		.byte	0
 3913 0132 16       		.uleb128 0x16
 3914 0133 2E       		.uleb128 0x2e
 3915 0134 01       		.byte	0x1
 3916 0135 3F       		.uleb128 0x3f
 3917 0136 19       		.uleb128 0x19
 3918 0137 03       		.uleb128 0x3
 3919 0138 0E       		.uleb128 0xe
 3920 0139 3A       		.uleb128 0x3a
 3921 013a 0B       		.uleb128 0xb
 3922 013b 3B       		.uleb128 0x3b
 3923 013c 05       		.uleb128 0x5
 3924 013d 27       		.uleb128 0x27
 3925 013e 19       		.uleb128 0x19
 3926 013f 49       		.uleb128 0x49
 3927 0140 13       		.uleb128 0x13
 3928 0141 11       		.uleb128 0x11
 3929 0142 01       		.uleb128 0x1
 3930 0143 12       		.uleb128 0x12
 3931 0144 06       		.uleb128 0x6
 3932 0145 40       		.uleb128 0x40
 3933 0146 18       		.uleb128 0x18
 3934 0147 9742     		.uleb128 0x2117
 3935 0149 19       		.uleb128 0x19
 3936 014a 01       		.uleb128 0x1
 3937 014b 13       		.uleb128 0x13
 3938 014c 00       		.byte	0
 3939 014d 00       		.byte	0
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 120


 3940 014e 17       		.uleb128 0x17
 3941 014f 2E       		.uleb128 0x2e
 3942 0150 01       		.byte	0x1
 3943 0151 3F       		.uleb128 0x3f
 3944 0152 19       		.uleb128 0x19
 3945 0153 03       		.uleb128 0x3
 3946 0154 0E       		.uleb128 0xe
 3947 0155 3A       		.uleb128 0x3a
 3948 0156 0B       		.uleb128 0xb
 3949 0157 3B       		.uleb128 0x3b
 3950 0158 05       		.uleb128 0x5
 3951 0159 27       		.uleb128 0x27
 3952 015a 19       		.uleb128 0x19
 3953 015b 11       		.uleb128 0x11
 3954 015c 01       		.uleb128 0x1
 3955 015d 12       		.uleb128 0x12
 3956 015e 06       		.uleb128 0x6
 3957 015f 40       		.uleb128 0x40
 3958 0160 18       		.uleb128 0x18
 3959 0161 9742     		.uleb128 0x2117
 3960 0163 19       		.uleb128 0x19
 3961 0164 01       		.uleb128 0x1
 3962 0165 13       		.uleb128 0x13
 3963 0166 00       		.byte	0
 3964 0167 00       		.byte	0
 3965 0168 18       		.uleb128 0x18
 3966 0169 2E       		.uleb128 0x2e
 3967 016a 01       		.byte	0x1
 3968 016b 3F       		.uleb128 0x3f
 3969 016c 19       		.uleb128 0x19
 3970 016d 03       		.uleb128 0x3
 3971 016e 0E       		.uleb128 0xe
 3972 016f 3A       		.uleb128 0x3a
 3973 0170 0B       		.uleb128 0xb
 3974 0171 3B       		.uleb128 0x3b
 3975 0172 05       		.uleb128 0x5
 3976 0173 27       		.uleb128 0x27
 3977 0174 19       		.uleb128 0x19
 3978 0175 49       		.uleb128 0x49
 3979 0176 13       		.uleb128 0x13
 3980 0177 11       		.uleb128 0x11
 3981 0178 01       		.uleb128 0x1
 3982 0179 12       		.uleb128 0x12
 3983 017a 06       		.uleb128 0x6
 3984 017b 40       		.uleb128 0x40
 3985 017c 18       		.uleb128 0x18
 3986 017d 9642     		.uleb128 0x2116
 3987 017f 19       		.uleb128 0x19
 3988 0180 01       		.uleb128 0x1
 3989 0181 13       		.uleb128 0x13
 3990 0182 00       		.byte	0
 3991 0183 00       		.byte	0
 3992 0184 19       		.uleb128 0x19
 3993 0185 05       		.uleb128 0x5
 3994 0186 00       		.byte	0
 3995 0187 03       		.uleb128 0x3
 3996 0188 08       		.uleb128 0x8
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 121


 3997 0189 3A       		.uleb128 0x3a
 3998 018a 0B       		.uleb128 0xb
 3999 018b 3B       		.uleb128 0x3b
 4000 018c 05       		.uleb128 0x5
 4001 018d 49       		.uleb128 0x49
 4002 018e 13       		.uleb128 0x13
 4003 018f 02       		.uleb128 0x2
 4004 0190 18       		.uleb128 0x18
 4005 0191 00       		.byte	0
 4006 0192 00       		.byte	0
 4007 0193 1A       		.uleb128 0x1a
 4008 0194 2E       		.uleb128 0x2e
 4009 0195 00       		.byte	0
 4010 0196 3F       		.uleb128 0x3f
 4011 0197 19       		.uleb128 0x19
 4012 0198 03       		.uleb128 0x3
 4013 0199 0E       		.uleb128 0xe
 4014 019a 3A       		.uleb128 0x3a
 4015 019b 0B       		.uleb128 0xb
 4016 019c 3B       		.uleb128 0x3b
 4017 019d 05       		.uleb128 0x5
 4018 019e 27       		.uleb128 0x27
 4019 019f 19       		.uleb128 0x19
 4020 01a0 11       		.uleb128 0x11
 4021 01a1 01       		.uleb128 0x1
 4022 01a2 12       		.uleb128 0x12
 4023 01a3 06       		.uleb128 0x6
 4024 01a4 40       		.uleb128 0x40
 4025 01a5 18       		.uleb128 0x18
 4026 01a6 9742     		.uleb128 0x2117
 4027 01a8 19       		.uleb128 0x19
 4028 01a9 00       		.byte	0
 4029 01aa 00       		.byte	0
 4030 01ab 1B       		.uleb128 0x1b
 4031 01ac 01       		.uleb128 0x1
 4032 01ad 01       		.byte	0x1
 4033 01ae 49       		.uleb128 0x49
 4034 01af 13       		.uleb128 0x13
 4035 01b0 01       		.uleb128 0x1
 4036 01b1 13       		.uleb128 0x13
 4037 01b2 00       		.byte	0
 4038 01b3 00       		.byte	0
 4039 01b4 1C       		.uleb128 0x1c
 4040 01b5 21       		.uleb128 0x21
 4041 01b6 00       		.byte	0
 4042 01b7 49       		.uleb128 0x49
 4043 01b8 13       		.uleb128 0x13
 4044 01b9 2F       		.uleb128 0x2f
 4045 01ba 0B       		.uleb128 0xb
 4046 01bb 00       		.byte	0
 4047 01bc 00       		.byte	0
 4048 01bd 1D       		.uleb128 0x1d
 4049 01be 34       		.uleb128 0x34
 4050 01bf 00       		.byte	0
 4051 01c0 03       		.uleb128 0x3
 4052 01c1 0E       		.uleb128 0xe
 4053 01c2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 122


 4054 01c3 0B       		.uleb128 0xb
 4055 01c4 3B       		.uleb128 0x3b
 4056 01c5 0B       		.uleb128 0xb
 4057 01c6 49       		.uleb128 0x49
 4058 01c7 13       		.uleb128 0x13
 4059 01c8 3F       		.uleb128 0x3f
 4060 01c9 19       		.uleb128 0x19
 4061 01ca 3C       		.uleb128 0x3c
 4062 01cb 19       		.uleb128 0x19
 4063 01cc 00       		.byte	0
 4064 01cd 00       		.byte	0
 4065 01ce 1E       		.uleb128 0x1e
 4066 01cf 34       		.uleb128 0x34
 4067 01d0 00       		.byte	0
 4068 01d1 03       		.uleb128 0x3
 4069 01d2 0E       		.uleb128 0xe
 4070 01d3 3A       		.uleb128 0x3a
 4071 01d4 0B       		.uleb128 0xb
 4072 01d5 3B       		.uleb128 0x3b
 4073 01d6 0B       		.uleb128 0xb
 4074 01d7 49       		.uleb128 0x49
 4075 01d8 13       		.uleb128 0x13
 4076 01d9 3F       		.uleb128 0x3f
 4077 01da 19       		.uleb128 0x19
 4078 01db 02       		.uleb128 0x2
 4079 01dc 18       		.uleb128 0x18
 4080 01dd 00       		.byte	0
 4081 01de 00       		.byte	0
 4082 01df 00       		.byte	0
 4083              		.section	.debug_aranges,"",%progbits
 4084 0000 24010000 		.4byte	0x124
 4085 0004 0200     		.2byte	0x2
 4086 0006 00000000 		.4byte	.Ldebug_info0
 4087 000a 04       		.byte	0x4
 4088 000b 00       		.byte	0
 4089 000c 0000     		.2byte	0
 4090 000e 0000     		.2byte	0
 4091 0010 00000000 		.4byte	.LFB36
 4092 0014 84000000 		.4byte	.LFE36-.LFB36
 4093 0018 00000000 		.4byte	.LFB37
 4094 001c 28000000 		.4byte	.LFE37-.LFB37
 4095 0020 00000000 		.4byte	.LFB38
 4096 0024 26000000 		.4byte	.LFE38-.LFB38
 4097 0028 00000000 		.4byte	.LFB39
 4098 002c 50000000 		.4byte	.LFE39-.LFB39
 4099 0030 00000000 		.4byte	.LFB40
 4100 0034 38020000 		.4byte	.LFE40-.LFB40
 4101 0038 00000000 		.4byte	.LFB41
 4102 003c 1E000000 		.4byte	.LFE41-.LFB41
 4103 0040 00000000 		.4byte	.LFB42
 4104 0044 40000000 		.4byte	.LFE42-.LFB42
 4105 0048 00000000 		.4byte	.LFB43
 4106 004c 58000000 		.4byte	.LFE43-.LFB43
 4107 0050 00000000 		.4byte	.LFB44
 4108 0054 1C000000 		.4byte	.LFE44-.LFB44
 4109 0058 00000000 		.4byte	.LFB45
 4110 005c 24000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 123


 4111 0060 00000000 		.4byte	.LFB46
 4112 0064 1C000000 		.4byte	.LFE46-.LFB46
 4113 0068 00000000 		.4byte	.LFB47
 4114 006c 24000000 		.4byte	.LFE47-.LFB47
 4115 0070 00000000 		.4byte	.LFB48
 4116 0074 1C000000 		.4byte	.LFE48-.LFB48
 4117 0078 00000000 		.4byte	.LFB49
 4118 007c 1C000000 		.4byte	.LFE49-.LFB49
 4119 0080 00000000 		.4byte	.LFB50
 4120 0084 1C000000 		.4byte	.LFE50-.LFB50
 4121 0088 00000000 		.4byte	.LFB51
 4122 008c 1C000000 		.4byte	.LFE51-.LFB51
 4123 0090 00000000 		.4byte	.LFB52
 4124 0094 24000000 		.4byte	.LFE52-.LFB52
 4125 0098 00000000 		.4byte	.LFB53
 4126 009c 24000000 		.4byte	.LFE53-.LFB53
 4127 00a0 00000000 		.4byte	.LFB54
 4128 00a4 24000000 		.4byte	.LFE54-.LFB54
 4129 00a8 00000000 		.4byte	.LFB55
 4130 00ac 24000000 		.4byte	.LFE55-.LFB55
 4131 00b0 00000000 		.4byte	.LFB56
 4132 00b4 24000000 		.4byte	.LFE56-.LFB56
 4133 00b8 00000000 		.4byte	.LFB57
 4134 00bc 24000000 		.4byte	.LFE57-.LFB57
 4135 00c0 00000000 		.4byte	.LFB58
 4136 00c4 34010000 		.4byte	.LFE58-.LFB58
 4137 00c8 00000000 		.4byte	.LFB59
 4138 00cc 42000000 		.4byte	.LFE59-.LFB59
 4139 00d0 00000000 		.4byte	.LFB60
 4140 00d4 36000000 		.4byte	.LFE60-.LFB60
 4141 00d8 00000000 		.4byte	.LFB61
 4142 00dc 5C000000 		.4byte	.LFE61-.LFB61
 4143 00e0 00000000 		.4byte	.LFB62
 4144 00e4 5C000000 		.4byte	.LFE62-.LFB62
 4145 00e8 00000000 		.4byte	.LFB63
 4146 00ec 76000000 		.4byte	.LFE63-.LFB63
 4147 00f0 00000000 		.4byte	.LFB64
 4148 00f4 3C000000 		.4byte	.LFE64-.LFB64
 4149 00f8 00000000 		.4byte	.LFB65
 4150 00fc 1C000000 		.4byte	.LFE65-.LFB65
 4151 0100 00000000 		.4byte	.LFB66
 4152 0104 1C000000 		.4byte	.LFE66-.LFB66
 4153 0108 00000000 		.4byte	.LFB67
 4154 010c 1C000000 		.4byte	.LFE67-.LFB67
 4155 0110 00000000 		.4byte	.LFB68
 4156 0114 14000000 		.4byte	.LFE68-.LFB68
 4157 0118 00000000 		.4byte	.LFB69
 4158 011c 14000000 		.4byte	.LFE69-.LFB69
 4159 0120 00000000 		.4byte	0
 4160 0124 00000000 		.4byte	0
 4161              		.section	.debug_ranges,"",%progbits
 4162              	.Ldebug_ranges0:
 4163 0000 00000000 		.4byte	.LFB36
 4164 0004 84000000 		.4byte	.LFE36
 4165 0008 00000000 		.4byte	.LFB37
 4166 000c 28000000 		.4byte	.LFE37
 4167 0010 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 124


 4168 0014 26000000 		.4byte	.LFE38
 4169 0018 00000000 		.4byte	.LFB39
 4170 001c 50000000 		.4byte	.LFE39
 4171 0020 00000000 		.4byte	.LFB40
 4172 0024 38020000 		.4byte	.LFE40
 4173 0028 00000000 		.4byte	.LFB41
 4174 002c 1E000000 		.4byte	.LFE41
 4175 0030 00000000 		.4byte	.LFB42
 4176 0034 40000000 		.4byte	.LFE42
 4177 0038 00000000 		.4byte	.LFB43
 4178 003c 58000000 		.4byte	.LFE43
 4179 0040 00000000 		.4byte	.LFB44
 4180 0044 1C000000 		.4byte	.LFE44
 4181 0048 00000000 		.4byte	.LFB45
 4182 004c 24000000 		.4byte	.LFE45
 4183 0050 00000000 		.4byte	.LFB46
 4184 0054 1C000000 		.4byte	.LFE46
 4185 0058 00000000 		.4byte	.LFB47
 4186 005c 24000000 		.4byte	.LFE47
 4187 0060 00000000 		.4byte	.LFB48
 4188 0064 1C000000 		.4byte	.LFE48
 4189 0068 00000000 		.4byte	.LFB49
 4190 006c 1C000000 		.4byte	.LFE49
 4191 0070 00000000 		.4byte	.LFB50
 4192 0074 1C000000 		.4byte	.LFE50
 4193 0078 00000000 		.4byte	.LFB51
 4194 007c 1C000000 		.4byte	.LFE51
 4195 0080 00000000 		.4byte	.LFB52
 4196 0084 24000000 		.4byte	.LFE52
 4197 0088 00000000 		.4byte	.LFB53
 4198 008c 24000000 		.4byte	.LFE53
 4199 0090 00000000 		.4byte	.LFB54
 4200 0094 24000000 		.4byte	.LFE54
 4201 0098 00000000 		.4byte	.LFB55
 4202 009c 24000000 		.4byte	.LFE55
 4203 00a0 00000000 		.4byte	.LFB56
 4204 00a4 24000000 		.4byte	.LFE56
 4205 00a8 00000000 		.4byte	.LFB57
 4206 00ac 24000000 		.4byte	.LFE57
 4207 00b0 00000000 		.4byte	.LFB58
 4208 00b4 34010000 		.4byte	.LFE58
 4209 00b8 00000000 		.4byte	.LFB59
 4210 00bc 42000000 		.4byte	.LFE59
 4211 00c0 00000000 		.4byte	.LFB60
 4212 00c4 36000000 		.4byte	.LFE60
 4213 00c8 00000000 		.4byte	.LFB61
 4214 00cc 5C000000 		.4byte	.LFE61
 4215 00d0 00000000 		.4byte	.LFB62
 4216 00d4 5C000000 		.4byte	.LFE62
 4217 00d8 00000000 		.4byte	.LFB63
 4218 00dc 76000000 		.4byte	.LFE63
 4219 00e0 00000000 		.4byte	.LFB64
 4220 00e4 3C000000 		.4byte	.LFE64
 4221 00e8 00000000 		.4byte	.LFB65
 4222 00ec 1C000000 		.4byte	.LFE65
 4223 00f0 00000000 		.4byte	.LFB66
 4224 00f4 1C000000 		.4byte	.LFE66
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 125


 4225 00f8 00000000 		.4byte	.LFB67
 4226 00fc 1C000000 		.4byte	.LFE67
 4227 0100 00000000 		.4byte	.LFB68
 4228 0104 14000000 		.4byte	.LFE68
 4229 0108 00000000 		.4byte	.LFB69
 4230 010c 14000000 		.4byte	.LFE69
 4231 0110 00000000 		.4byte	0
 4232 0114 00000000 		.4byte	0
 4233              		.section	.debug_line,"",%progbits
 4234              	.Ldebug_line0:
 4235 0000 E2030000 		.section	.debug_str,"MS",%progbits,1
 4235      02005E00 
 4235      00000201 
 4235      FB0E0D00 
 4235      01010101 
 4236              	.LASF10:
 4237 0000 75696E74 		.ascii	"uint16\000"
 4237      313600
 4238              	.LASF58:
 4239 0007 66696C74 		.ascii	"filteredRawData\000"
 4239      65726564 
 4239      52617744 
 4239      61746100 
 4240              	.LASF114:
 4241 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 4241      656E7365 
 4241      5F687973 
 4241      74657265 
 4241      73697300 
 4242              	.LASF116:
 4243 002b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4243      656E7365 
 4243      5F726177 
 4243      44617461 
 4243      496E6465 
 4244              	.LASF108:
 4245 0041 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4245      656E7365 
 4245      5F73656E 
 4245      736F724F 
 4245      6E4D6173 
 4246              	.LASF75:
 4247 0057 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4247      656E7365 
 4247      5F476574 
 4247      4E656761 
 4247      74697665 
 4248              	.LASF85:
 4249 007a 66696E67 		.ascii	"fingerThreshold\000"
 4249      65725468 
 4249      72657368 
 4249      6F6C6400 
 4250              	.LASF79:
 4251 008a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4251      656E7365 
 4251      5F536574 
 4251      4E656761 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 126


 4251      74697665 
 4252              	.LASF62:
 4253 00ad 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4253      656E7365 
 4253      5F557064 
 4253      61746557 
 4253      69646765 
 4254              	.LASF34:
 4255 00cb 70747247 		.ascii	"ptrGetRaw\000"
 4255      65745261 
 4255      7700
 4256              	.LASF98:
 4257 00d5 43617053 		.ascii	"CapSense_GetDebounce\000"
 4257      656E7365 
 4257      5F476574 
 4257      4465626F 
 4257      756E6365 
 4258              	.LASF94:
 4259 00ea 43617053 		.ascii	"CapSense_MedianFilter\000"
 4259      656E7365 
 4259      5F4D6564 
 4259      69616E46 
 4259      696C7465 
 4260              	.LASF7:
 4261 0100 6C6F6E67 		.ascii	"long long unsigned int\000"
 4261      206C6F6E 
 4261      6720756E 
 4261      7369676E 
 4261      65642069 
 4262              	.LASF107:
 4263 0117 43617053 		.ascii	"CapSense_sensorSignal\000"
 4263      656E7365 
 4263      5F73656E 
 4263      736F7253 
 4263      69676E61 
 4264              	.LASF73:
 4265 012d 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4265      656E7365 
 4265      5F476574 
 4265      4E6F6973 
 4265      65546872 
 4266              	.LASF52:
 4267 0148 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4267      656E7365 
 4267      5F496E69 
 4267      7469616C 
 4267      697A6545 
 4268              	.LASF61:
 4269 016c 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4269      656E7365 
 4269      5F557064 
 4269      61746545 
 4269      6E61626C 
 4270              	.LASF6:
 4271 018c 6C6F6E67 		.ascii	"long long int\000"
 4271      206C6F6E 
 4271      6720696E 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 127


 4271      7400
 4272              	.LASF0:
 4273 019a 7369676E 		.ascii	"signed char\000"
 4273      65642063 
 4273      68617200 
 4274              	.LASF93:
 4275 01a6 43617053 		.ascii	"CapSense_DisableWidget\000"
 4275      656E7365 
 4275      5F446973 
 4275      61626C65 
 4275      57696467 
 4276              	.LASF88:
 4277 01bd 72617749 		.ascii	"rawIndex\000"
 4277      6E646578 
 4277      00
 4278              	.LASF33:
 4279 01c6 6E756D62 		.ascii	"numberOfSensors\000"
 4279      65724F66 
 4279      53656E73 
 4279      6F727300 
 4280              	.LASF105:
 4281 01d6 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4281      656E7365 
 4281      5F73656E 
 4281      736F7242 
 4281      6173656C 
 4282              	.LASF21:
 4283 01ee 77696467 		.ascii	"widgetNubmersTbl\000"
 4283      65744E75 
 4283      626D6572 
 4283      7354626C 
 4283      00
 4284              	.LASF68:
 4285 01ff 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4285      656E7365 
 4285      5F476574 
 4285      42617365 
 4285      6C696E65 
 4286              	.LASF90:
 4287 0218 73746174 		.ascii	"state\000"
 4287      6500
 4288              	.LASF4:
 4289 021e 6C6F6E67 		.ascii	"long int\000"
 4289      20696E74 
 4289      00
 4290              	.LASF91:
 4291 0227 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4291      656E7365 
 4291      5F436865 
 4291      636B4973 
 4291      416E7957 
 4292              	.LASF9:
 4293 0247 75696E74 		.ascii	"uint8\000"
 4293      3800
 4294              	.LASF110:
 4295 024d 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4295      656E7365 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 128


 4295      5F6C6F77 
 4295      42617365 
 4295      6C696E65 
 4296              	.LASF100:
 4297 0267 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4297      656E7365 
 4297      5F446973 
 4297      61626C65 
 4297      52617744 
 4298              	.LASF13:
 4299 0286 646F7562 		.ascii	"double\000"
 4299      6C6500
 4300              	.LASF104:
 4301 028d 43617053 		.ascii	"CapSense_widgetNumber\000"
 4301      656E7365 
 4301      5F776964 
 4301      6765744E 
 4301      756D6265 
 4302              	.LASF11:
 4303 02a3 75696E74 		.ascii	"uint32\000"
 4303      333200
 4304              	.LASF86:
 4305 02aa 68797374 		.ascii	"hysteresis\000"
 4305      65726573 
 4305      697300
 4306              	.LASF76:
 4307 02b5 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4307      656E7365 
 4307      5F536574 
 4307      46696E67 
 4307      65725468 
 4308              	.LASF80:
 4309 02d1 43617053 		.ascii	"CapSense_SetDebounce\000"
 4309      656E7365 
 4309      5F536574 
 4309      4465626F 
 4309      756E6365 
 4310              	.LASF43:
 4311 02e6 73656E73 		.ascii	"sensetivitySeed\000"
 4311      65746976 
 4311      69747953 
 4311      65656400 
 4312              	.LASF42:
 4313 02f6 746F7461 		.ascii	"totalSensorsNum\000"
 4313      6C53656E 
 4313      736F7273 
 4313      4E756D00 
 4314              	.LASF71:
 4315 0306 76616C75 		.ascii	"value\000"
 4315      6500
 4316              	.LASF81:
 4317 030c 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4317      656E7365 
 4317      5F536574 
 4317      4C6F7742 
 4317      6173656C 
 4318              	.LASF65:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 129


 4319 0329 6C617374 		.ascii	"lastSensor\000"
 4319      53656E73 
 4319      6F7200
 4320              	.LASF8:
 4321 0334 756E7369 		.ascii	"unsigned int\000"
 4321      676E6564 
 4321      20696E74 
 4321      00
 4322              	.LASF27:
 4323 0341 73616D70 		.ascii	"sampleMaxTbl\000"
 4323      6C654D61 
 4323      7854626C 
 4323      00
 4324              	.LASF5:
 4325 034e 6C6F6E67 		.ascii	"long unsigned int\000"
 4325      20756E73 
 4325      69676E65 
 4325      6420696E 
 4325      7400
 4326              	.LASF106:
 4327 0360 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4327      656E7365 
 4327      5F73656E 
 4327      736F7242 
 4327      6173656C 
 4328              	.LASF22:
 4329 037b 7265736F 		.ascii	"resolutionsTbl\000"
 4329      6C757469 
 4329      6F6E7354 
 4329      626C00
 4330              	.LASF37:
 4331 038a 70747247 		.ascii	"ptrGetBitValue\000"
 4331      65744269 
 4331      7456616C 
 4331      756500
 4332              	.LASF115:
 4333 0399 43617053 		.ascii	"CapSense_debounce\000"
 4333      656E7365 
 4333      5F646562 
 4333      6F756E63 
 4333      6500
 4334              	.LASF67:
 4335 03ab 64617461 		.ascii	"data\000"
 4335      00
 4336              	.LASF3:
 4337 03b0 73686F72 		.ascii	"short unsigned int\000"
 4337      7420756E 
 4337      7369676E 
 4337      65642069 
 4337      6E7400
 4338              	.LASF18:
 4339 03c3 73656E73 		.ascii	"sensetivityTbl\000"
 4339      65746976 
 4339      69747954 
 4339      626C00
 4340              	.LASF123:
 4341 03d2 453A5C50 		.ascii	"E:\\Psoc\\PSoC-4-BLE-master\\100_Projects_in_100_Da"
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 130


 4341      736F635C 
 4341      50536F43 
 4341      2D342D42 
 4341      4C452D6D 
 4342 0402 79735C44 		.ascii	"ys\\Day004_CapSense_Proximity\\PSoC_4_BLE_CapSense_"
 4342      61793030 
 4342      345F4361 
 4342      7053656E 
 4342      73655F50 
 4343 0433 50726F78 		.ascii	"Proximity\\PSoC_4_BLE_CapSense_Proximity.cydsn\000"
 4343      696D6974 
 4343      795C5053 
 4343      6F435F34 
 4343      5F424C45 
 4344              	.LASF49:
 4345 0461 73656E73 		.ascii	"sensor\000"
 4345      6F7200
 4346              	.LASF45:
 4347 0468 706F696E 		.ascii	"pointers\000"
 4347      74657273 
 4347      00
 4348              	.LASF103:
 4349 0471 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4349      656E7365 
 4349      5F73656E 
 4349      736F7245 
 4349      6E61626C 
 4350              	.LASF117:
 4351 048b 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4351      656E7365 
 4351      5F6E756D 
 4351      6265724F 
 4351      6653656E 
 4352              	.LASF60:
 4353 04a4 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4353      656E7365 
 4353      5F557064 
 4353      61746553 
 4353      656E736F 
 4354              	.LASF55:
 4355 04c2 63616C63 		.ascii	"calc\000"
 4355      00
 4356              	.LASF19:
 4357 04c7 63686172 		.ascii	"chargeDivTbl\000"
 4357      67654469 
 4357      7654626C 
 4357      00
 4358              	.LASF39:
 4359 04d4 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 4359      656E7365 
 4359      5F434F4E 
 4359      4649475F 
 4359      54595045 
 4360              	.LASF26:
 4361 04fb 73616D70 		.ascii	"sampleMinTbl\000"
 4361      6C654D69 
 4361      6E54626C 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 131


 4361      00
 4362              	.LASF122:
 4363 0508 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4363      6E657261 
 4363      7465645F 
 4363      536F7572 
 4363      63655C50 
 4364              	.LASF69:
 4365 0531 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4365      656E7365 
 4365      5F476574 
 4365      44696666 
 4365      436F756E 
 4366              	.LASF23:
 4367 054b 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4367      65456E76 
 4367      656C6F70 
 4367      6554626C 
 4367      00
 4368              	.LASF83:
 4369 055c 6465626F 		.ascii	"debounce\000"
 4369      756E6365 
 4369      00
 4370              	.LASF44:
 4371 0565 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4371      6B467265 
 4371      715F4D48 
 4371      7A00
 4372              	.LASF15:
 4373 0573 73697A65 		.ascii	"sizetype\000"
 4373      74797065 
 4373      00
 4374              	.LASF92:
 4375 057c 43617053 		.ascii	"CapSense_EnableWidget\000"
 4375      656E7365 
 4375      5F456E61 
 4375      626C6557 
 4375      69646765 
 4376              	.LASF54:
 4377 0592 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4377      656E7365 
 4377      5F557064 
 4377      61746542 
 4377      6173656C 
 4378              	.LASF48:
 4379 05b5 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4379      656E7365 
 4379      5F496E69 
 4379      7469616C 
 4379      697A6553 
 4380              	.LASF78:
 4381 05d7 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4381      656E7365 
 4381      5F536574 
 4381      46696E67 
 4381      65724879 
 4382              	.LASF82:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 132


 4383 05f4 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4383      656E7365 
 4383      5F436865 
 4383      636B4973 
 4383      53656E73 
 4384              	.LASF16:
 4385 0611 69646163 		.ascii	"idac1LevelsTbl\000"
 4385      314C6576 
 4385      656C7354 
 4385      626C00
 4386              	.LASF17:
 4387 0620 69646163 		.ascii	"idac2LevelsTbl\000"
 4387      324C6576 
 4387      656C7354 
 4387      626C00
 4388              	.LASF112:
 4389 062f 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4389      656E7365 
 4389      5F6E6F69 
 4389      73655468 
 4389      72657368 
 4390              	.LASF111:
 4391 0647 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4391      656E7365 
 4391      5F66696E 
 4391      67657254 
 4391      68726573 
 4392              	.LASF118:
 4393 0660 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4393      656E7365 
 4393      5F726177 
 4393      46696C74 
 4393      65724461 
 4394              	.LASF119:
 4395 0678 43617053 		.ascii	"CapSense_config\000"
 4395      656E7365 
 4395      5F636F6E 
 4395      66696700 
 4396              	.LASF12:
 4397 0688 666C6F61 		.ascii	"float\000"
 4397      7400
 4398              	.LASF97:
 4399 068e 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4399      656E7365 
 4399      5F476574 
 4399      4C6F7742 
 4399      6173656C 
 4400              	.LASF87:
 4401 06ab 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4401      656E7365 
 4401      5F436865 
 4401      636B4973 
 4401      57696467 
 4402              	.LASF25:
 4403 06c8 7369676E 		.ascii	"signRegisterTbl\000"
 4403      52656769 
 4403      73746572 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 133


 4403      54626C00 
 4404              	.LASF95:
 4405 06d8 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4405      656E7365 
 4405      5F494952 
 4405      3446696C 
 4405      74657200 
 4406              	.LASF31:
 4407 06ec 70726573 		.ascii	"prescalerTable\000"
 4407      63616C65 
 4407      72546162 
 4407      6C6500
 4408              	.LASF1:
 4409 06fb 756E7369 		.ascii	"unsigned char\000"
 4409      676E6564 
 4409      20636861 
 4409      7200
 4410              	.LASF50:
 4411 0709 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4411      656E7365 
 4411      5F496E69 
 4411      7469616C 
 4411      697A6541 
 4412              	.LASF36:
 4413 0729 70747252 		.ascii	"ptrReadSensorRaw\000"
 4413      65616453 
 4413      656E736F 
 4413      72526177 
 4413      00
 4414              	.LASF66:
 4415 073a 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4415      656E7365 
 4415      5F536574 
 4415      42617365 
 4415      6C696E65 
 4416              	.LASF59:
 4417 0753 6E6F6973 		.ascii	"noiseThreshold\000"
 4417      65546872 
 4417      6573686F 
 4417      6C6400
 4418              	.LASF2:
 4419 0762 73686F72 		.ascii	"short int\000"
 4419      7420696E 
 4419      7400
 4420              	.LASF51:
 4421 076c 77696467 		.ascii	"widget\000"
 4421      657400
 4422              	.LASF20:
 4423 0773 6D6F6444 		.ascii	"modDivTbl\000"
 4423      69765462 
 4423      6C00
 4424              	.LASF53:
 4425 077d 69735365 		.ascii	"isSensorEnabled\000"
 4425      6E736F72 
 4425      456E6162 
 4425      6C656400 
 4426              	.LASF47:
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 134


 4427 078d 43617053 		.ascii	"CapSense_BaseInit\000"
 4427      656E7365 
 4427      5F426173 
 4427      65496E69 
 4427      7400
 4428              	.LASF29:
 4429 079f 6B56616C 		.ascii	"kValueTbl\000"
 4429      75655462 
 4429      6C00
 4430              	.LASF63:
 4431 07a9 73656E73 		.ascii	"sensorsPerWidget\000"
 4431      6F727350 
 4431      65725769 
 4431      64676574 
 4431      00
 4432              	.LASF109:
 4433 07ba 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4433      656E7365 
 4433      5F6C6F77 
 4433      42617365 
 4433      6C696E65 
 4434              	.LASF77:
 4435 07d7 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4435      656E7365 
 4435      5F536574 
 4435      4E6F6973 
 4435      65546872 
 4436              	.LASF28:
 4437 07f2 70726576 		.ascii	"previousSampleTbl\000"
 4437      696F7573 
 4437      53616D70 
 4437      6C655462 
 4437      6C00
 4438              	.LASF14:
 4439 0804 63686172 		.ascii	"char\000"
 4439      00
 4440              	.LASF24:
 4441 0809 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4441      696E6744 
 4441      69666665 
 4441      72656E63 
 4441      6554626C 
 4442              	.LASF120:
 4443 081e 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4443      656E7365 
 4443      5F656E61 
 4443      626C6552 
 4443      61774669 
 4444              	.LASF74:
 4445 0838 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4445      656E7365 
 4445      5F476574 
 4445      46696E67 
 4445      65724879 
 4446              	.LASF64:
 4447 0855 66697273 		.ascii	"firstSensor\000"
 4447      7453656E 
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 135


 4447      736F7200 
 4448              	.LASF84:
 4449 0861 6465626F 		.ascii	"debounceIndex\000"
 4449      756E6365 
 4449      496E6465 
 4449      7800
 4450              	.LASF72:
 4451 086f 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4451      656E7365 
 4451      5F476574 
 4451      46696E67 
 4451      65725468 
 4452              	.LASF35:
 4453 088b 70747250 		.ascii	"ptrPreScan\000"
 4453      72655363 
 4453      616E00
 4454              	.LASF30:
 4455 0896 7363616E 		.ascii	"scanSpeedTbl\000"
 4455      53706565 
 4455      6454626C 
 4455      00
 4456              	.LASF56:
 4457 08a3 7369676E 		.ascii	"sign\000"
 4457      00
 4458              	.LASF89:
 4459 08a8 6E756D4F 		.ascii	"numOfSensors\000"
 4459      6653656E 
 4459      736F7273 
 4459      00
 4460              	.LASF40:
 4461 08b5 746F7461 		.ascii	"totalScanslotsNum\000"
 4461      6C536361 
 4461      6E736C6F 
 4461      74734E75 
 4461      6D00
 4462              	.LASF121:
 4463 08c7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4463      4320342E 
 4463      392E3320 
 4463      32303135 
 4463      30333033 
 4464 08fa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4464      20726576 
 4464      6973696F 
 4464      6E203232 
 4464      31323230 
 4465 092d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4465      66756E63 
 4465      74696F6E 
 4465      2D736563 
 4465      74696F6E 
 4466              	.LASF102:
 4467 0955 43617053 		.ascii	"CapSense_sensorRaw\000"
 4467      656E7365 
 4467      5F73656E 
 4467      736F7252 
 4467      617700
ARM GAS  C:\Users\tiantiaf\AppData\Local\Temp\ccRxzvE3.s 			page 136


 4468              	.LASF70:
 4469 0968 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4469      656E7365 
 4469      5F536574 
 4469      44696666 
 4469      436F756E 
 4470              	.LASF38:
 4471 0982 70747253 		.ascii	"ptrSetBitValue\000"
 4471      65744269 
 4471      7456616C 
 4471      756500
 4472              	.LASF96:
 4473 0991 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4473      656E7365 
 4473      5F476574 
 4473      57696467 
 4473      65744E75 
 4474              	.LASF99:
 4475 09aa 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4475      656E7365 
 4475      5F456E61 
 4475      626C6552 
 4475      61774461 
 4476              	.LASF101:
 4477 09c8 43617053 		.ascii	"CapSense_debounceCounter\000"
 4477      656E7365 
 4477      5F646562 
 4477      6F756E63 
 4477      65436F75 
 4478              	.LASF46:
 4479 09e1 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 4479      656E7365 
 4479      5F434F4E 
 4479      4649475F 
 4479      54595045 
 4480              	.LASF32:
 4481 09ff 72617744 		.ascii	"rawDataIndex\000"
 4481      61746149 
 4481      6E646578 
 4481      00
 4482              	.LASF57:
 4483 0a0c 74656D70 		.ascii	"tempRaw\000"
 4483      52617700 
 4484              	.LASF41:
 4485 0a14 746F7461 		.ascii	"totalWidgetsNum\000"
 4485      6C576964 
 4485      67657473 
 4485      4E756D00 
 4486              	.LASF113:
 4487 0a24 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4487      656E7365 
 4487      5F6E6567 
 4487      61746976 
 4487      654E6F69 
 4488              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
